[
    {
        "prompt": "¿Qué es la calidad de software según la norma ISO/IEC 25010?",
        "response": "La calidad de software es la capacidad de un producto de software para satisfacer las necesidades establecidas y las expectativas implícitas cuando se utiliza bajo condiciones especificadas, según la norma ISO/IEC 25010."
    },
    {
        "prompt": "¿Cuáles son las principales características de calidad de software?",
        "response": "Las principales características son: funcionalidad, eficiencia de rendimiento, compatibilidad, usabilidad, fiabilidad, seguridad, mantenibilidad y portabilidad."
    },
    {
        "prompt": "¿Cómo se define la usabilidad en el contexto de calidad de software?",
        "response": "La usabilidad es el grado en que un software puede ser utilizado por usuarios específicos para lograr objetivos específicos con efectividad, eficiencia y satisfacción en un contexto de uso determinado."
    },
    {
        "prompt": "¿Qué mide la mantenibilidad en software?",
        "response": "La mantenibilidad mide la facilidad con la que se puede modificar, corregir, mejorar o adaptar el software a cambios de requisitos o entornos."
    },
    {
        "prompt": "¿Cómo se evalúa la eficiencia de rendimiento en software?",
        "response": "La eficiencia de rendimiento evalúa el uso óptimo de los recursos del sistema, como el tiempo de procesamiento, la memoria y la capacidad de red."
    },
    {
        "prompt": "¿Qué significa la fiabilidad en la calidad de software?",
        "response": "La fiabilidad es la capacidad del software para realizar sus funciones de manera precisa y consistente bajo condiciones específicas durante un tiempo determinado."
    },
    {
        "prompt": "¿Qué importancia tiene la seguridad en la calidad del software?",
        "response": "La seguridad en software se refiere a la capacidad de proteger la información y los datos frente a accesos no autorizados, ataques y vulnerabilidades."
    },
    {
        "prompt": "¿Qué es la portabilidad en el contexto de calidad de software?",
        "response": "La portabilidad es la capacidad del software para ser transferido de un entorno a otro, como entre diferentes plataformas o sistemas operativos, con pocas modificaciones."
    },
    {
        "prompt": "¿Cómo se mide la compatibilidad en la calidad del software?",
        "response": "La compatibilidad se mide en función de la capacidad del software para operar de manera eficaz en diferentes entornos, plataformas, dispositivos o sistemas sin conflictos."
    },
    {
        "prompt": "¿Qué significa la funcionalidad en la calidad de software?",
        "response": "La funcionalidad es la capacidad del software para proporcionar todas las funciones especificadas que se requieren para cumplir con las necesidades del usuario."
    },
    {
        "prompt": "¿Qué son las pruebas de aceptación en software?",
        "response": "Las pruebas de aceptación son realizadas por el cliente o usuario final para verificar si el software cumple con los requisitos especificados y está listo para su implementación."
    },
    {
        "prompt": "¿Qué es el diseño centrado en el usuario?",
        "response": "El diseño centrado en el usuario es un enfoque de diseño de software que se enfoca en las necesidades, preferencias y limitaciones de los usuarios finales durante todo el proceso de desarrollo."
    },
    {
        "prompt": "¿Qué es la eficiencia en el uso de recursos en el software?",
        "response": "La eficiencia en el uso de recursos se refiere a la capacidad del software para minimizar el consumo de tiempo de procesamiento, memoria y otros recursos del sistema mientras realiza sus funciones."
    },
    {
        "prompt": "¿Qué es la escalabilidad en software?",
        "response": "La escalabilidad es la capacidad del software para adaptarse a un aumento en la carga de trabajo sin afectar significativamente su rendimiento."
    },
    {
        "prompt": "¿Qué es la modularidad en software?",
        "response": "La modularidad es la división del software en componentes independientes y reutilizables, lo que facilita el mantenimiento, la actualización y la depuración del sistema."
    },
    {
        "prompt": "¿Qué es la accesibilidad en software?",
        "response": "La accesibilidad se refiere a la facilidad con la que el software puede ser utilizado por personas con diversas discapacidades, asegurando que todos los usuarios puedan acceder a sus funciones."
    },
    {
        "prompt": "¿Qué es la prueba de integración continua?",
        "response": "La prueba de integración continua es una práctica en la que los desarrolladores integran y prueban su código de manera frecuente para detectar problemas lo antes posible en el ciclo de desarrollo."
    },
    {
        "prompt": "¿Qué es la prueba de carga en software?",
        "response": "La prueba de carga es un tipo de prueba de rendimiento que mide cómo responde el software cuando se somete a una cantidad esperada de usuarios o solicitudes simultáneas."
    },
    {
        "prompt": "¿Qué es una prueba de regresión?",
        "response": "Una prueba de regresión es una prueba diseñada para verificar que los cambios recientes en el software no hayan afectado negativamente a las funcionalidades existentes."
    },
    {
        "prompt": "¿Qué es la deuda técnica en software?",
        "response": "La deuda técnica se refiere a las decisiones de diseño o desarrollo que permiten una implementación rápida pero que posteriormente requerirán ajustes, mejoras o refactorización para evitar problemas."
    },
    {
        "prompt": "¿Qué es la modularidad en software?",
        "response": "La modularidad es la capacidad de dividir el software en componentes separados que puedan ser desarrollados y probados individualmente."
    },
    {
        "prompt": "¿Qué es el mantenimiento preventivo en software?",
        "response": "El mantenimiento preventivo implica realizar ajustes y mejoras en el software antes de que ocurran fallos, para mejorar su rendimiento y prevenir problemas futuros."
    },
    {
        "prompt": "¿Qué es el mantenimiento correctivo en software?",
        "response": "El mantenimiento correctivo se refiere a la reparación de fallos o errores identificados en el software después de su entrega."
    },
    {
        "prompt": "¿Qué es el mantenimiento evolutivo en software?",
        "response": "El mantenimiento evolutivo incluye cambios realizados para mejorar o ampliar las funcionalidades del software en respuesta a nuevas necesidades o requisitos del mercado."
    },
    {
        "prompt": "¿Qué es la prueba de caja blanca en software?",
        "response": "La prueba de caja blanca implica que el evaluador tiene acceso al código fuente y prueba la lógica interna del software para asegurar que el flujo de control y los bucles sean correctos."
    },
    {
        "prompt": "¿Qué es la prueba de caja negra en software?",
        "response": "La prueba de caja negra es un enfoque en el que se prueba el software desde la perspectiva del usuario, sin tener acceso al código fuente, enfocándose solo en las entradas y salidas."
    },
    {
        "prompt": "¿Qué es la deuda técnica en desarrollo de software?",
        "response": "La deuda técnica es la acumulación de decisiones de diseño que permiten un desarrollo rápido pero que requieren un trabajo adicional en el futuro para mantener la calidad del software."
    },
    {
        "prompt": "¿Qué es una prueba de estrés en software?",
        "response": "Una prueba de estrés evalúa cómo funciona el software bajo condiciones extremas, como una alta carga de usuarios o solicitudes simultáneas, para ver si puede manejar situaciones de estrés sin fallos."
    },
    {
        "prompt": "¿Qué es una prueba de volumen en software?",
        "response": "Una prueba de volumen mide la capacidad del software para manejar grandes cantidades de datos, asegurando que pueda procesar la información sin problemas de rendimiento."
    },
    {
        "prompt": "¿Qué es la integración continua en software?",
        "response": "La integración continua es una práctica de desarrollo en la que los desarrolladores integran frecuentemente su código en un repositorio compartido, realizando pruebas automatizadas para detectar problemas tempranamente."
    },
    {
        "prompt": "¿Qué es la entrega continua en software?",
        "response": "La entrega continua es el proceso en el que los cambios de software se prueban y se publican automáticamente para garantizar que siempre esté en un estado listo para el despliegue."
    },
   {
        "prompt": "¿Qué es el modelo CMMI y cómo se aplica en la calidad de software?",
        "response": "CMMI (Capability Maturity Model Integration) es un modelo de mejora de procesos que proporciona a las organizaciones elementos clave para evaluar sus procesos de desarrollo de software y mejorar su capacidad para cumplir con plazos, calidad y costos."
    },
    {
        "prompt": "¿Qué es el nivel 1 en el modelo CMMI?",
        "response": "El nivel 1 de CMMI, también conocido como 'Inicial', describe organizaciones donde los procesos no están formalmente definidos, lo que resulta en un desarrollo impredecible y caótico del software."
    },
    {
        "prompt": "¿Cómo se define la portabilidad en la norma ISO/IEC 25010?",
        "response": "La portabilidad es la capacidad del software para ser transferido a diferentes entornos de hardware o software sin necesidad de cambios significativos."
    },
    {
        "prompt": "¿Qué es la conformidad según la ISO/IEC 25010?",
        "response": "La conformidad se refiere al grado en que un producto de software cumple con los estándares, convenciones o regulaciones aplicables."
    },
    {
        "prompt": "¿Qué es la modularidad en la mantenibilidad del software?",
        "response": "La modularidad es la capacidad del software para ser descompuesto en módulos o componentes independientes, facilitando así su actualización, mantenimiento y reutilización."
    },
    {
        "prompt": "¿Cuáles son los principales estándares internacionales de calidad de software?",
        "response": "Los principales estándares internacionales incluyen ISO/IEC 25010, ISO/IEC 12207, IEEE 730 y el modelo CMMI."
    },
    {
        "prompt": "¿Qué es el proceso de revisión de código en la gestión de calidad?",
        "response": "La revisión de código es un proceso en el que los desarrolladores examinan el código fuente de sus compañeros para detectar errores, asegurar el cumplimiento de los estándares y mejorar la calidad general del software."
    },
    {
        "prompt": "¿Qué es una prueba de caja gris en software?",
        "response": "La prueba de caja gris es una combinación de pruebas de caja blanca y caja negra, donde el evaluador tiene acceso limitado al código fuente y combina pruebas internas y externas para asegurar la calidad."
    },
    {
        "prompt": "¿Qué es la gestión de riesgos en el desarrollo de software?",
        "response": "La gestión de riesgos es el proceso de identificar, evaluar y mitigar riesgos que puedan afectar la calidad, el presupuesto o los plazos en un proyecto de desarrollo de software."
    },
    {
        "prompt": "¿Qué es un análisis FMEA (Failure Mode and Effects Analysis) en software?",
        "response": "FMEA es una técnica sistemática utilizada para identificar y priorizar los posibles fallos en un sistema de software, evaluando el impacto de cada fallo y las acciones necesarias para mitigarlos."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo impacta la calidad del software?",
        "response": "La deuda técnica se refiere a las decisiones rápidas o subóptimas que se toman durante el desarrollo, las cuales deben corregirse más tarde para evitar problemas de calidad o mantenibilidad en el software."
    },
    {
        "prompt": "¿Qué es la accesibilidad en el diseño de interfaces de software?",
        "response": "La accesibilidad en software implica diseñar interfaces que puedan ser utilizadas por personas con discapacidades, siguiendo normas y guías como WCAG (Web Content Accessibility Guidelines)."
    },
    {
        "prompt": "¿Qué son las pruebas funcionales en software?",
        "response": "Las pruebas funcionales verifican que el software cumpla con los requisitos funcionales especificados, asegurando que las características del sistema operen como se espera."
    },
    {
        "prompt": "¿Qué son las pruebas no funcionales en software?",
        "response": "Las pruebas no funcionales evalúan aspectos como el rendimiento, la seguridad, la usabilidad y la escalabilidad, asegurando que el software funcione correctamente en diferentes escenarios."
    },
    {
        "prompt": "¿Qué es la prueba de estrés en software?",
        "response": "La prueba de estrés evalúa el comportamiento del software bajo condiciones extremas, como una sobrecarga de usuarios o datos, para garantizar su estabilidad y resistencia."
    },
    {
        "prompt": "¿Qué es la integración continua en el desarrollo de software?",
        "response": "La integración continua es una práctica en la que los desarrolladores integran su código frecuentemente en un repositorio compartido, asegurándose de que cada cambio sea probado y verificado para evitar conflictos."
    },
    {
        "prompt": "¿Qué es la entrega continua en DevOps?",
        "response": "La entrega continua es un proceso automatizado en el que los cambios en el software se prueban y preparan continuamente para su implementación, garantizando que el software esté siempre en un estado listo para la producción."
    },
    {
        "prompt": "¿Qué es una retrospectiva en metodologías ágiles?",
        "response": "Una retrospectiva es una reunión que se realiza al final de cada sprint en metodologías ágiles, donde el equipo reflexiona sobre lo que funcionó bien y lo que se puede mejorar en el próximo ciclo."
    },
    {
        "prompt": "¿Qué es un Sprint en Scrum?",
        "response": "Un sprint es un ciclo de trabajo de duración fija, generalmente entre 1 y 4 semanas, en el que un equipo ágil se enfoca en completar un conjunto específico de tareas o historias de usuario."
    },
    {
        "prompt": "¿Qué es la deuda técnica en el desarrollo de software?",
        "response": "La deuda técnica es el trabajo de baja calidad que se acumula en un proyecto debido a decisiones de desarrollo rápidas o subóptimas, lo que requiere un esfuerzo posterior para corregirlo."
    },
    {
        "prompt": "¿Qué es la modularidad en software y cómo contribuye a su mantenibilidad?",
        "response": "La modularidad es la capacidad de dividir el software en componentes independientes, lo que facilita su mantenimiento, pruebas y actualizaciones sin afectar todo el sistema."
    },
    {
        "prompt": "¿Qué es la seguridad en el ciclo de vida del desarrollo de software?",
        "response": "La seguridad en el ciclo de vida del desarrollo de software implica la integración de prácticas de seguridad en todas las fases del desarrollo, desde la planificación hasta la implementación, para mitigar riesgos y proteger los datos."
    },
    {
        "prompt": "¿Qué es el testing automatizado?",
        "response": "El testing automatizado es la práctica de usar scripts y herramientas para ejecutar pruebas de software de manera automática, reduciendo el esfuerzo manual y aumentando la consistencia en las pruebas."
    },
    {
        "prompt": "¿Qué son las métricas de calidad de software?",
        "response": "Las métricas de calidad de software son medidas cuantitativas utilizadas para evaluar diferentes aspectos de la calidad del software, como la eficiencia, la fiabilidad y la mantenibilidad."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas en el desarrollo de software?",
        "response": "Un entorno de pruebas es una configuración controlada de hardware y software donde los testers ejecutan pruebas para verificar la funcionalidad y calidad de un producto de software."
    },
    {
        "prompt": "¿Qué es la cobertura de código en las pruebas de software?",
        "response": "La cobertura de código mide qué porcentaje del código fuente ha sido ejecutado durante las pruebas, ayudando a identificar partes no probadas que podrían contener errores."
    },
    {
        "prompt": "¿Qué es el control de versiones en software?",
        "response": "El control de versiones es el proceso de gestionar los cambios en el código fuente, permitiendo a los desarrolladores rastrear, revertir y colaborar en diferentes versiones del software."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo afecta a la calidad del software?",
        "response": "La deuda técnica se refiere a las soluciones rápidas o temporales tomadas durante el desarrollo, que afectan negativamente la calidad y que necesitarán corrección o refactorización en el futuro."
    },
    {
        "prompt": "¿Qué es un caso de prueba en software?",
        "response": "Un caso de prueba es un conjunto de condiciones o variables que se utilizan para verificar si el software cumple con los requisitos funcionales y no funcionales esperados."
    },
    {
        "prompt": "¿Qué son las pruebas de integración en software?",
        "response": "Las pruebas de integración verifican que los diferentes módulos o componentes del software funcionen juntos correctamente, asegurando que las interacciones entre ellos no causen errores."
    },
   {
        "prompt": "¿Qué es un pipeline de CI/CD en el desarrollo de software?",
        "response": "Un pipeline de CI/CD es un conjunto de procesos automatizados que permiten la integración continua (CI) y la entrega continua (CD), asegurando que los cambios de código se prueben y se desplieguen automáticamente."
    },
    {
        "prompt": "¿Qué es el versionado semántico en software?",
        "response": "El versionado semántico es una convención que usa números de versión para comunicar el tipo de cambios en el software, donde el formato es MAJOR.MINOR.PATCH (ej. 1.0.0) y cada parte indica diferentes niveles de cambios."
    },
    {
        "prompt": "¿Qué es una prueba de aceptación de usuario (UAT)?",
        "response": "La prueba de aceptación de usuario (UAT) es el proceso donde los usuarios finales prueban el software para asegurarse de que cumple con los requisitos antes de su despliegue."
    },
    {
        "prompt": "¿Qué es un sprint en desarrollo ágil?",
        "response": "Un sprint es un ciclo de desarrollo en metodologías ágiles donde el equipo trabaja en un conjunto definido de tareas durante un período de tiempo, típicamente de 1 a 4 semanas."
    },
    {
        "prompt": "¿Qué es la prueba de regresión en software?",
        "response": "La prueba de regresión verifica que las funcionalidades existentes de un software sigan funcionando correctamente después de realizar cambios o actualizaciones en el código."
    },
    {
        "prompt": "¿Qué es una auditoría de código?",
        "response": "Una auditoría de código es una revisión exhaustiva del código fuente de una aplicación para identificar problemas de seguridad, errores y posibles mejoras en el rendimiento o la estructura."
    },
    {
        "prompt": "¿Qué es la prueba de carga en software?",
        "response": "La prueba de carga evalúa cómo el software maneja una cantidad específica de usuarios o transacciones simultáneas, midiendo su rendimiento bajo carga normal y máxima."
    },
    {
        "prompt": "¿Qué es la escalabilidad en software?",
        "response": "La escalabilidad es la capacidad del software para manejar un aumento en la carga de trabajo o usuarios sin afectar su rendimiento."
    },
    {
        "prompt": "¿Qué es la deuda técnica en el desarrollo de software?",
        "response": "La deuda técnica es el costo acumulado de las decisiones técnicas subóptimas que se tomaron para acelerar el desarrollo, pero que deben corregirse en el futuro para evitar problemas de mantenibilidad."
    },
    {
        "prompt": "¿Qué es una historia de usuario en Scrum?",
        "response": "Una historia de usuario es una descripción breve y sencilla de una funcionalidad o característica desde la perspectiva del usuario final, que ayuda a guiar el desarrollo en metodologías ágiles."
    },
    {
        "prompt": "¿Qué son los microservicios en desarrollo de software?",
        "response": "Los microservicios son una arquitectura donde una aplicación se divide en servicios pequeños e independientes, cada uno de los cuales realiza una función específica y puede desarrollarse, desplegarse y escalarse de manera autónoma."
    },
    {
        "prompt": "¿Qué es la cobertura de código en pruebas de software?",
        "response": "La cobertura de código es una métrica que mide el porcentaje del código fuente que ha sido ejecutado durante las pruebas, ayudando a identificar áreas no probadas que podrían contener errores."
    },
    {
        "prompt": "¿Qué son las pruebas exploratorias en software?",
        "response": "Las pruebas exploratorias son un tipo de prueba en el que los testers exploran libremente la aplicación para identificar posibles errores, sin seguir un conjunto de casos de prueba predefinidos."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas en desarrollo de software?",
        "response": "Un entorno de pruebas es una configuración controlada donde se ejecutan pruebas de software, simulando las condiciones bajo las cuales el software se ejecutará en producción."
    },
    {
        "prompt": "¿Qué es una retrospectiva en Scrum?",
        "response": "Una retrospectiva es una reunión realizada al final de cada sprint en Scrum, donde el equipo reflexiona sobre lo que salió bien, lo que podría mejorar y qué acciones tomar para el siguiente sprint."
    },
    {
        "prompt": "¿Qué es la prueba de penetración en software?",
        "response": "La prueba de penetración (pentesting) es una simulación de un ataque real contra el software para identificar vulnerabilidades y evaluar la efectividad de las medidas de seguridad."
    },
    {
        "prompt": "¿Qué es la prueba de humo en software?",
        "response": "La prueba de humo es una prueba inicial rápida que verifica si las funciones críticas del software funcionan correctamente antes de realizar pruebas más detalladas."
    },
    {
        "prompt": "¿Qué es el diseño centrado en el usuario?",
        "response": "El diseño centrado en el usuario es un enfoque que pone a los usuarios en el centro del proceso de desarrollo, asegurando que el software sea fácil de usar y cumpla con las necesidades y expectativas de los usuarios."
    },
    {
        "prompt": "¿Qué es el análisis estático en el desarrollo de software?",
        "response": "El análisis estático es la evaluación del código fuente sin ejecutarlo, utilizando herramientas para detectar posibles errores, vulnerabilidades y problemas de estilo de programación."
    },
    {
        "prompt": "¿Qué es la resiliencia en software?",
        "response": "La resiliencia es la capacidad del software para recuperarse rápidamente y continuar funcionando correctamente tras experimentar fallos o problemas inesperados."
    },
    {
        "prompt": "¿Qué es un backlog en metodologías ágiles?",
        "response": "El backlog es una lista priorizada de tareas, características y mejoras pendientes por implementar en un proyecto de desarrollo ágil."
    },
    {
        "prompt": "¿Qué es el control de calidad en el desarrollo de software?",
        "response": "El control de calidad es el proceso de revisar y probar el software para garantizar que cumpla con los requisitos y estándares especificados, identificando y corrigiendo errores."
    },
    {
        "prompt": "¿Qué es el despliegue continuo en DevOps?",
        "response": "El despliegue continuo es una práctica de DevOps donde el código probado se despliega automáticamente en producción sin intervención manual, asegurando actualizaciones rápidas y constantes."
    },
    {
        "prompt": "¿Qué es un diagrama de flujo en el desarrollo de software?",
        "response": "Un diagrama de flujo es una representación visual de los procesos y decisiones en un sistema de software, que ayuda a los desarrolladores y testers a entender el flujo lógico del sistema."
    },
    {
        "prompt": "¿Qué es una métrica de defectos en software?",
        "response": "Una métrica de defectos mide la cantidad de errores o fallos detectados en el software durante las pruebas o después de su despliegue, proporcionando una indicación de su calidad."
    },
    {
        "prompt": "¿Qué son las pruebas de compatibilidad en software?",
        "response": "Las pruebas de compatibilidad verifican que el software funcione correctamente en diferentes dispositivos, sistemas operativos, navegadores y configuraciones de hardware."
    },
    {
        "prompt": "¿Qué es una historia de usuario en Scrum?",
        "response": "Una historia de usuario es una descripción breve y simple de una funcionalidad que el software debe proporcionar desde la perspectiva del usuario, generalmente siguiendo el formato 'Como usuario, quiero... para...'."
    },
    {
        "prompt": "¿Qué es el mantenimiento preventivo en software?",
        "response": "El mantenimiento preventivo implica realizar mejoras y cambios proactivos en el software para evitar la aparición de problemas futuros y garantizar su rendimiento a largo plazo."
    },
    {
        "prompt": "¿Qué es el mantenimiento correctivo en software?",
        "response": "El mantenimiento correctivo se refiere a la corrección de errores o fallos encontrados en el software después de su lanzamiento, asegurando que continúe funcionando según lo previsto."
    },
    {
        "prompt": "¿Qué es el mantenimiento evolutivo en software?",
        "response": "El mantenimiento evolutivo implica hacer cambios y mejoras en el software para adaptarlo a nuevos requisitos o cambios en el entorno operativo."
    },
    {
        "prompt": "¿Qué es un caso de prueba en software?",
        "response": "Un caso de prueba es un conjunto de entradas, condiciones y resultados esperados que se utilizan para verificar que una función específica del software funcione correctamente."
    },
    {
        "prompt": "¿Qué es el testing exploratorio en software?",
        "response": "El testing exploratorio es un enfoque de pruebas en el que los testers exploran el software libremente, sin seguir un guión predefinido, buscando activamente errores o problemas."
    },
    {
        "prompt": "¿Qué es la deuda técnica en el desarrollo de software?",
        "response": "La deuda técnica es el costo de las decisiones de desarrollo rápidas o soluciones subóptimas que deben corregirse en el futuro para evitar problemas de calidad y mantenibilidad."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas en software?",
        "response": "Un entorno de pruebas es una configuración de hardware y software donde se ejecutan pruebas para verificar que el sistema funcione correctamente bajo condiciones controladas."
    },
    {
        "prompt": "¿Qué son los tests A/B en software?",
        "response": "Los tests A/B son una técnica de evaluación donde se prueban dos versiones diferentes del software (A y B) con grupos de usuarios para determinar cuál ofrece una mejor experiencia o rendimiento."
    },
    {
        "prompt": "¿Qué es la prueba de penetración (pentesting) en software?",
        "response": "La prueba de penetración es una evaluación de seguridad que simula un ataque real en el software para identificar vulnerabilidades y asegurar la integridad del sistema."
    },
    {
        "prompt": "¿Qué es la deuda técnica en un proyecto de software?",
        "response": "La deuda técnica es el trabajo adicional que se genera cuando el software se desarrolla rápidamente sin tener en cuenta la calidad a largo plazo, lo que requerirá refactorización en el futuro."
    },
    {
        "prompt": "¿Qué es un microservicio en desarrollo de software?",
        "response": "Un microservicio es una arquitectura en la que una aplicación se descompone en componentes pequeños e independientes, que se pueden desarrollar, desplegar y escalar de forma autónoma."
    },
    {
        "prompt": "¿Qué es la entrega continua en software?",
        "response": "La entrega continua es una práctica de desarrollo donde el código se construye, prueba y prepara automáticamente para el despliegue en producción, asegurando que siempre esté en un estado listo para su entrega."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo se puede gestionar?",
        "response": "La deuda técnica son las decisiones subóptimas o soluciones rápidas que se toman durante el desarrollo de software. Se gestiona identificándola, priorizando su pago mediante refactorizaciones y evitando acumular más con buenas prácticas de desarrollo."
    },
    {
        "prompt": "¿Qué es una prueba de carga en el contexto de pruebas de rendimiento?",
        "response": "Una prueba de carga es una prueba diseñada para verificar cómo se comporta el software cuando se somete a una cantidad específica de usuarios simultáneos o transacciones."
    },
    {
        "prompt": "¿Qué es la validación en el desarrollo de software?",
        "response": "La validación es el proceso de asegurarse de que el producto de software cumple con las expectativas y necesidades del cliente o usuario final, confirmando que el sistema hace lo que debería hacer."
    },
    {
        "prompt": "¿Qué es el análisis dinámico en las pruebas de software?",
        "response": "El análisis dinámico es una técnica de pruebas que implica ejecutar el software para encontrar errores en tiempo de ejecución, como problemas de rendimiento o de memoria."
    },
    {
        "prompt": "¿Qué es la modularidad en la arquitectura de software?",
        "response": "La modularidad es el enfoque de dividir un sistema de software en componentes independientes o módulos que puedan ser desarrollados, probados y mantenidos por separado."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo afecta el ciclo de vida del software?",
        "response": "La deuda técnica representa el costo futuro de realizar mejoras en el software debido a soluciones rápidas o subóptimas, y puede generar dificultades en el mantenimiento y evolución del software si no se gestiona adecuadamente."
    },
    {
        "prompt": "¿Qué es un prototipo en el desarrollo de software?",
        "response": "Un prototipo es una versión preliminar de un sistema o componente que se crea para probar conceptos o funcionalidades antes de la fase de desarrollo completa."
    },
    {
        "prompt": "¿Qué es una arquitectura monolítica en software?",
        "response": "Una arquitectura monolítica es un enfoque de desarrollo de software en el que todas las funcionalidades del sistema están integradas en una única aplicación, lo que puede dificultar la escalabilidad y el mantenimiento."
    },
    {
        "prompt": "¿Qué es un código legado en software?",
        "response": "El código legado es el software antiguo que sigue en uso en un sistema, a menudo difícil de modificar o mejorar debido a la falta de documentación o su estructura obsoleta."
    },
    {
        "prompt": "¿Qué son las pruebas de estrés en el desarrollo de software?",
        "response": "Las pruebas de estrés verifican cómo se comporta el software bajo condiciones extremas, como una sobrecarga de usuarios o recursos limitados, para asegurar su estabilidad y capacidad de recuperación."
    },
    {
        "prompt": "¿Qué es una prueba de caja blanca en software?",
        "response": "Una prueba de caja blanca es un enfoque de pruebas donde los evaluadores tienen acceso al código fuente y se enfocan en verificar los flujos de control, bucles y estructuras internas del software."
    },
    {
        "prompt": "¿Qué es la mantenibilidad del software?",
        "response": "La mantenibilidad es la capacidad del software para ser modificado y actualizado de manera efectiva para corregir errores, mejorar su rendimiento o adaptarse a nuevos requisitos."
    },
    {
        "prompt": "¿Qué es la confiabilidad en el desarrollo de software?",
        "response": "La confiabilidad es la capacidad del software para funcionar de manera consistente y precisa bajo condiciones específicas durante un tiempo determinado sin fallar."
    },
    {
        "prompt": "¿Qué es un caso de uso en el diseño de software?",
        "response": "Un caso de uso es una descripción de cómo los usuarios interactúan con el sistema para lograr un objetivo específico, proporcionando una forma de definir los requisitos funcionales."
    },
    {
        "prompt": "¿Qué son las pruebas no funcionales en software?",
        "response": "Las pruebas no funcionales evalúan aspectos del software que no están relacionados directamente con sus funciones específicas, como el rendimiento, la escalabilidad, la seguridad y la usabilidad."
    },
    {
        "prompt": "¿Qué es el diseño orientado a objetos en software?",
        "response": "El diseño orientado a objetos es una metodología de desarrollo que organiza el software en objetos que contienen datos y métodos, lo que facilita la reutilización y el mantenimiento del código."
    },
    {
        "prompt": "¿Qué es la automatización de pruebas en el ciclo de vida del software?",
        "response": "La automatización de pruebas implica el uso de herramientas y scripts para ejecutar pruebas de software de manera automática, mejorando la eficiencia y la precisión del proceso de pruebas."
    },
    {
        "prompt": "¿Qué son los indicadores clave de rendimiento (KPI) en el desarrollo de software?",
        "response": "Los KPI son métricas específicas que se utilizan para medir el éxito y el rendimiento del desarrollo de software, como el tiempo de respuesta, la tasa de defectos y la satisfacción del usuario."
    },
    {
        "prompt": "¿Qué es la interoperabilidad en software?",
        "response": "La interoperabilidad es la capacidad del software para interactuar y funcionar con otros sistemas o aplicaciones de manera efectiva, facilitando el intercambio de información."
    },
    {
        "prompt": "¿Qué es una prueba de sistema en software?",
        "response": "Una prueba de sistema es una evaluación integral que verifica que todos los componentes y módulos de un software funcionen correctamente juntos como un sistema completo."
    },
    {
        "prompt": "¿Qué es el mantenimiento adaptativo en software?",
        "response": "El mantenimiento adaptativo implica realizar modificaciones en el software para que continúe funcionando correctamente en nuevos entornos o condiciones que no se contemplaron en su desarrollo original."
    },
    {
        "prompt": "¿Qué es una regresión en el desarrollo de software?",
        "response": "Una regresión es un error que surge en el software después de que se han realizado cambios, como la introducción de nuevas características o la corrección de errores, lo que afecta las funcionalidades existentes."
    },
    {
        "prompt": "¿Qué es un entorno de producción en software?",
        "response": "Un entorno de producción es el entorno en el que el software está disponible para los usuarios finales y en el que se espera que funcione de manera estable y sin interrupciones."
    },
    {
        "prompt": "¿Qué es la escalabilidad horizontal en software?",
        "response": "La escalabilidad horizontal se refiere a la capacidad del software para manejar una mayor carga de trabajo mediante la adición de más servidores o recursos distribuidos en lugar de aumentar la potencia de un solo servidor."
    },
    {
        "prompt": "¿Qué es el control de versiones en el desarrollo de software?",
        "response": "El control de versiones es un sistema que permite a los desarrolladores gestionar los cambios en el código fuente, rastrear diferentes versiones y colaborar en el desarrollo sin conflicto."
    },
    {
        "prompt": "¿Qué es una prueba de compatibilidad en software?",
        "response": "Una prueba de compatibilidad verifica que el software funcione correctamente en diferentes entornos, dispositivos, sistemas operativos o navegadores, garantizando su interoperabilidad."
    },
    {
        "prompt": "¿Qué es el análisis FODA en el desarrollo de software?",
        "response": "El análisis FODA (Fortalezas, Oportunidades, Debilidades, Amenazas) es una técnica utilizada para evaluar los factores internos y externos que pueden influir en el éxito de un proyecto de software."
    },
    {
        "prompt": "¿Qué es la eficiencia en el uso de recursos en software?",
        "response": "La eficiencia en el uso de recursos se refiere a la capacidad del software para optimizar el uso de recursos del sistema, como la memoria, el tiempo de procesamiento y la capacidad de red, mientras realiza sus funciones."
    },
    {
        "prompt": "¿Qué es la modularidad en el diseño de software?",
        "response": "La modularidad es la práctica de dividir el software en módulos independientes, lo que facilita su desarrollo, prueba y mantenimiento al permitir que cada módulo se gestione de forma separada."
    },
    {
        "prompt": "¿Qué es la entrega continua en el ciclo de desarrollo de software?",
        "response": "La entrega continua es una práctica en la que los cambios de código se prueban y preparan continuamente para su despliegue, asegurando que el software siempre esté en un estado listo para su implementación."
    },
    {
        "prompt": "¿Qué es la accesibilidad en software?",
        "response": "La accesibilidad se refiere a la capacidad del software para ser utilizado por personas con diversas discapacidades, cumpliendo con normas como WCAG para asegurar una experiencia inclusiva para todos los usuarios."
    },
    {
        "prompt": "¿Qué son las pruebas de integración continua en software?",
        "response": "Las pruebas de integración continua son un proceso automatizado en el que los cambios en el código se prueban de manera constante para detectar errores y asegurarse de que el software se mantenga estable."
    },
    {
        "prompt": "¿Qué es un diagrama de flujo en el desarrollo de software?",
        "response": "Un diagrama de flujo es una representación visual que muestra el flujo de trabajo o proceso lógico de un sistema de software, facilitando la comprensión de cómo interactúan los diferentes componentes."
    },
    {
        "prompt": "¿Qué es una historia de usuario en desarrollo ágil?",
        "response": "Una historia de usuario es una descripción simple y breve de una funcionalidad que el software debe ofrecer, desde la perspectiva del usuario final, que ayuda a definir los requisitos funcionales."
    },
    {
        "prompt": "¿Qué es una prueba de volumen en software?",
        "response": "Una prueba de volumen verifica cómo el software maneja grandes cantidades de datos, asegurando que el sistema funcione correctamente incluso cuando se procesa un gran volumen de información."
    },
    {
        "prompt": "¿Qué es la prueba de penetración en software?",
        "response": "La prueba de penetración (pentesting) es una evaluación de seguridad en la que se simulan ataques reales para identificar vulnerabilidades en el software y garantizar la protección de datos."
    },
    {
        "prompt": "¿Qué es la refactorización de código?",
        "response": "La refactorización de código es el proceso de mejorar la estructura interna del código sin cambiar su comportamiento externo, con el fin de hacerlo más legible, mantenible y eficiente."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en el desarrollo de software?",
        "response": "El análisis de impacto es una evaluación realizada antes de realizar cambios en el software, para determinar cómo dichos cambios afectarán otras partes del sistema."
    },
    {
        "prompt": "¿Qué es el ciclo de vida del desarrollo de software?",
        "response": "El ciclo de vida del desarrollo de software (SDLC) es un proceso estructurado que abarca las fases de planificación, análisis, diseño, implementación, pruebas, despliegue y mantenimiento del software."
    },
    {
        "prompt": "¿Qué es la usabilidad en el contexto de la calidad de software?",
        "response": "La usabilidad mide cuán fácil es para los usuarios interactuar con el software y lograr sus objetivos, evaluando factores como la efectividad, la eficiencia y la satisfacción del usuario."
    },
    {
        "prompt": "¿Qué son las pruebas de regresión en software?",
        "response": "Las pruebas de regresión verifican que los cambios realizados en el software, como la corrección de errores o la adición de nuevas características, no hayan afectado las funcionalidades existentes."
    },
    {
        "prompt": "¿Qué es una historia de usuario en Scrum?",
        "response": "Una historia de usuario es una breve descripción de una funcionalidad que el software debe proporcionar, escrita desde la perspectiva del usuario y generalmente estructurada en el formato 'Como usuario, quiero... para...'."
    },
    {
        "prompt": "¿Qué es la deuda técnica en el desarrollo de software?",
        "response": "La deuda técnica es el costo de realizar ajustes futuros en el software debido a decisiones de desarrollo apresuradas o soluciones subóptimas que se implementan para cumplir plazos inmediatos."
    },
    {
        "prompt": "¿Qué es el diseño basado en pruebas (TDD)?",
        "response": "El diseño basado en pruebas (TDD) es un enfoque de desarrollo en el que primero se escriben las pruebas antes de implementar el código, asegurando que el software cumpla con los requisitos desde el principio."
    },
    {
        "prompt": "¿Qué es la escalabilidad vertical en software?",
        "response": "La escalabilidad vertical se refiere a la capacidad del software para manejar un mayor volumen de trabajo mediante el aumento de los recursos de hardware de un solo servidor, como agregar más memoria o CPU."
    },
    {
        "prompt": "¿Qué son las pruebas de compatibilidad en software?",
        "response": "Las pruebas de compatibilidad verifican que el software funcione correctamente en diferentes entornos, como diversos sistemas operativos, navegadores, dispositivos y configuraciones de hardware."
    },
    {
        "prompt": "¿Qué es un sprint en desarrollo ágil?",
        "response": "Un sprint es un ciclo de trabajo en metodologías ágiles, como Scrum, donde el equipo se enfoca en completar un conjunto de tareas o funcionalidades en un período de tiempo específico, generalmente entre 1 y 4 semanas."
    },
    {
        "prompt": "¿Qué es una matriz de trazabilidad de requisitos en software?",
        "response": "Una matriz de trazabilidad de requisitos es un documento que rastrea y mapea cada requisito a las pruebas que verifican su implementación, asegurando que todos los requisitos se cumplan."
    },
    {
        "prompt": "¿Qué es la prueba de aceptación en software?",
        "response": "La prueba de aceptación es realizada por el usuario final para verificar si el software cumple con los requisitos acordados y está listo para ser utilizado en producción."
    },
    {
        "prompt": "¿Qué es el modelo V en el desarrollo de software?",
        "response": "El modelo V es una metodología de desarrollo de software donde las fases de desarrollo y pruebas están organizadas de manera paralela, con cada fase de diseño relacionada directamente con una fase de prueba."
    },
    {
        "prompt": "¿Qué es la refactorización de código en el desarrollo de software?",
        "response": "La refactorización es el proceso de reestructurar el código existente sin cambiar su funcionalidad externa, con el fin de mejorar su legibilidad, mantenibilidad y eficiencia."
    },
    {
        "prompt": "¿Qué es la métrica de defectos en pruebas de software?",
        "response": "Una métrica de defectos mide la cantidad de errores encontrados durante las pruebas de software, proporcionando una indicación de la calidad del producto y el esfuerzo de pruebas necesario."
    },
    {
        "prompt": "¿Qué es la modularidad en software y por qué es importante?",
        "response": "La modularidad es la división de un sistema de software en componentes o módulos independientes, lo que facilita su desarrollo, prueba, mantenimiento y escalabilidad."
    },
    {
        "prompt": "¿Qué son los indicadores clave de rendimiento (KPI) en la calidad de software?",
        "response": "Los KPI son métricas que se utilizan para medir y monitorear el rendimiento y éxito de un proyecto de software, como la tasa de defectos, tiempo de respuesta y satisfacción del usuario."
    },
    {
        "prompt": "¿Qué es la deuda técnica en proyectos de software?",
        "response": "La deuda técnica es el trabajo adicional generado por decisiones de desarrollo rápidas o subóptimas que se tomaron para acelerar la entrega, pero que requieren correcciones o mejoras en el futuro."
    },
    {
        "prompt": "¿Qué es una prueba de regresión en software?",
        "response": "Una prueba de regresión es una prueba que se ejecuta para verificar que las funcionalidades existentes del software no se vean afectadas negativamente por los cambios o actualizaciones recientes."
    },
    {
        "prompt": "¿Qué es un prototipo en el desarrollo de software?",
        "response": "Un prototipo es una versión preliminar de un sistema o componente de software que se crea para probar conceptos, funcionalidades y recoger retroalimentación antes de implementar el producto final."
    },
    {
        "prompt": "¿Qué es un backlog en Scrum?",
        "response": "Un backlog es una lista priorizada de tareas, características y mejoras que deben implementarse en un proyecto de desarrollo ágil, y se revisa y actualiza en cada sprint."
    },
    {
        "prompt": "¿Qué es la prueba de volumen en software?",
        "response": "La prueba de volumen verifica la capacidad del software para manejar grandes cantidades de datos, evaluando cómo se comporta el sistema cuando procesa un gran volumen de información."
    },
    {
        "prompt": "¿Qué es la prueba de humo en software?",
        "response": "La prueba de humo es una prueba inicial que verifica si las funciones básicas del software funcionan correctamente antes de realizar pruebas más exhaustivas."
    },
    {
        "prompt": "¿Qué es la prueba de estrés en software?",
        "response": "La prueba de estrés evalúa el comportamiento del software bajo condiciones extremas, como una sobrecarga de usuarios o recursos limitados, para garantizar su estabilidad."
    },
    {
        "prompt": "¿Qué es el análisis estático en pruebas de software?",
        "response": "El análisis estático es la evaluación del código fuente sin ejecutarlo, utilizando herramientas que buscan errores, vulnerabilidades y problemas de estilo de programación."
    },
    {
        "prompt": "¿Qué es una prueba de caja blanca en el desarrollo de software?",
        "response": "Una prueba de caja blanca es un enfoque de pruebas en el que el evaluador tiene acceso al código fuente y prueba la estructura interna del software para verificar su funcionamiento."
    },
    {
        "prompt": "¿Qué es una prueba de caja negra en software?",
        "response": "Una prueba de caja negra es un enfoque de pruebas en el que el evaluador no tiene acceso al código fuente y prueba el software únicamente desde la perspectiva de las entradas y salidas."
    },
    {
        "prompt": "¿Qué es un ciclo de vida de desarrollo de software?",
        "response": "El ciclo de vida de desarrollo de software (SDLC) es un proceso estructurado que describe las fases a seguir para desarrollar, implementar y mantener un sistema de software."
    },
    {
        "prompt": "¿Qué es la prueba de integración en software?",
        "response": "La prueba de integración es un proceso de pruebas que verifica que los diferentes módulos o componentes de un sistema de software funcionen juntos correctamente como un sistema unificado."
    },
    {
        "prompt": "¿Qué es un sprint en el desarrollo ágil?",
        "response": "Un sprint es un ciclo de trabajo en metodologías ágiles como Scrum, donde el equipo se enfoca en completar un conjunto específico de tareas en un período de tiempo determinado, generalmente entre 1 y 4 semanas."
    },
    {
        "prompt": "¿Qué es la refactorización y por qué es importante?",
        "response": "La refactorización es el proceso de reestructurar el código sin cambiar su comportamiento externo, lo que mejora la legibilidad, mantenibilidad y eficiencia del código, asegurando su calidad a largo plazo."
    },
    {
        "prompt": "¿Qué es la entrega continua en DevOps?",
        "response": "La entrega continua es una práctica de desarrollo donde los cambios de código se prueban y preparan automáticamente para su despliegue en producción, asegurando que el software esté siempre listo para su implementación."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo afecta la calidad del software?",
        "response": "La deuda técnica son las decisiones rápidas o subóptimas que se toman durante el desarrollo para acelerar la entrega, pero que requieren trabajo adicional en el futuro para corregir problemas de mantenibilidad o escalabilidad."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas en el desarrollo de software?",
        "response": "Un entorno de pruebas es una configuración controlada donde los desarrolladores y testers ejecutan pruebas para verificar que el software funcione correctamente bajo diversas condiciones y escenarios."
    },
    {
        "prompt": "¿Qué es un caso de prueba en el ciclo de vida del software?",
        "response": "Un caso de prueba es un conjunto de condiciones o variables bajo las cuales un tester verificará que una función específica del software funcione como se espera."
    },
    {
        "prompt": "¿Qué es la accesibilidad en software?",
        "response": "La accesibilidad en software es la capacidad del sistema para ser utilizado por personas con diversas discapacidades, asegurando que las aplicaciones y sitios web sean accesibles para todos los usuarios, cumpliendo con normas como WCAG."
    },
    {
        "prompt": "¿Qué es un diagrama de flujo en el desarrollo de software?",
        "response": "Un diagrama de flujo es una representación gráfica del proceso lógico o flujo de trabajo en un sistema de software, que muestra cómo interactúan los diferentes componentes y decisiones dentro del sistema."
    },
    {
        "prompt": "¿Qué es la interoperabilidad en software?",
        "response": "La interoperabilidad es la capacidad de un software para interactuar y funcionar correctamente con otros sistemas o aplicaciones, permitiendo el intercambio y uso de datos de manera efectiva."
    },
    {
        "prompt": "¿Qué es la eficiencia de rendimiento en software?",
        "response": "La eficiencia de rendimiento es la capacidad del software para optimizar el uso de recursos del sistema, como el tiempo de procesamiento y la memoria, mientras realiza sus funciones de manera eficaz."
    },
    {
        "prompt": "¿Qué es el testing automatizado en el desarrollo de software?",
        "response": "El testing automatizado es el uso de herramientas y scripts para ejecutar pruebas de software de manera repetitiva y sin intervención humana, aumentando la eficiencia y reduciendo el margen de error."
    },
    {
        "prompt": "¿Qué es la prueba de compatibilidad en software?",
        "response": "La prueba de compatibilidad verifica que el software funcione correctamente en diferentes plataformas, dispositivos, sistemas operativos y configuraciones de hardware."
    },
    {
        "prompt": "¿Qué es un prototipo en el desarrollo de software?",
        "response": "Un prototipo es una versión preliminar o simulada de un sistema o componente que se utiliza para probar conceptos, funcionalidades o diseños antes de realizar el desarrollo completo."
    },
    {
        "prompt": "¿Qué es el mantenimiento adaptativo en software?",
        "response": "El mantenimiento adaptativo implica modificar el software para que continúe funcionando correctamente en nuevos entornos o con nuevos requisitos que no se contemplaron en su diseño original."
    },
    {
        "prompt": "¿Qué es la modularidad en el diseño de software?",
        "response": "La modularidad es la división del software en componentes independientes o módulos, lo que facilita su desarrollo, pruebas, mantenimiento y escalabilidad."
    },
    {
        "prompt": "¿Qué es la cobertura de código en pruebas de software?",
        "response": "La cobertura de código es una métrica que mide qué porcentaje del código fuente ha sido ejecutado durante las pruebas, lo que ayuda a identificar áreas no probadas que podrían contener errores."
    },
    {
        "prompt": "¿Qué es una auditoría de código en software?",
        "response": "Una auditoría de código es un proceso en el que se revisa el código fuente de una aplicación para identificar problemas de seguridad, errores o posibles mejoras en su eficiencia o estructura."
    },
    {
        "prompt": "¿Qué es la resiliencia en software?",
        "response": "La resiliencia en software es la capacidad de un sistema para recuperarse rápidamente y continuar funcionando correctamente después de experimentar fallos o condiciones imprevistas."
    },
    {
        "prompt": "¿Qué es una retrospectiva en Scrum?",
        "response": "Una retrospectiva es una reunión que se realiza al final de cada sprint en Scrum, donde el equipo reflexiona sobre lo que salió bien, lo que podría mejorarse y qué acciones tomar para el próximo sprint."
    },
    {
        "prompt": "¿Qué es el control de versiones en el desarrollo de software?",
        "response": "El control de versiones es un sistema que permite a los desarrolladores gestionar los cambios en el código fuente, rastrear diferentes versiones y colaborar sin conflictos durante el desarrollo."
    },
    {
        "prompt": "¿Qué es la deuda técnica en proyectos de software?",
        "response": "La deuda técnica es el trabajo adicional que se acumula cuando se implementan soluciones rápidas o subóptimas en el software, que requerirán correcciones o refactorización en el futuro."
    },
    {
        "prompt": "¿Qué es una prueba de penetración en software?",
        "response": "Una prueba de penetración, o pentesting, es un proceso en el que se simulan ataques reales contra el software para identificar vulnerabilidades y mejorar la seguridad del sistema."
    },
    {
        "prompt": "¿Qué es la seguridad en el ciclo de vida del desarrollo de software?",
        "response": "La seguridad en el ciclo de vida del desarrollo de software implica la integración de prácticas de seguridad en todas las fases del desarrollo para mitigar riesgos y proteger los datos y la integridad del sistema."
    },
    {
        "prompt": "¿Qué es un entorno de producción en software?",
        "response": "Un entorno de producción es el entorno en el que el software está disponible para su uso por los usuarios finales, donde se espera que el sistema funcione de manera estable y sin interrupciones."
    },
    {
        "prompt": "¿Qué es un análisis FMEA en software?",
        "response": "El análisis FMEA (Failure Mode and Effects Analysis) es una técnica que se utiliza para identificar y priorizar los posibles fallos en un sistema de software, evaluando el impacto de cada fallo y las acciones necesarias para mitigarlos."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en el desarrollo de software?",
        "response": "El análisis de impacto es un proceso que evalúa cómo los cambios propuestos en el software afectarán a otras partes del sistema, asegurando que las modificaciones no introduzcan nuevos problemas."
    },
    {
        "prompt": "¿Qué es la usabilidad en el desarrollo de software?",
        "response": "La usabilidad mide cuán fácil es para los usuarios interactuar con el software y lograr sus objetivos, evaluando factores como la efectividad, eficiencia y satisfacción del usuario."
    },
    {
        "prompt": "¿Qué es una historia de usuario en Scrum?",
        "response": "Una historia de usuario es una breve descripción de una funcionalidad que el software debe proporcionar, escrita desde la perspectiva del usuario final, generalmente en el formato 'Como usuario, quiero... para...'."
    },
    {
        "prompt": "¿Qué es la escalabilidad horizontal en software?",
        "response": "La escalabilidad horizontal es la capacidad del software para manejar un mayor volumen de trabajo mediante la adición de más servidores o nodos distribuidos, en lugar de mejorar la capacidad de un solo servidor."
    },
    {
        "prompt": "¿Qué es el mantenimiento preventivo en software?",
        "response": "El mantenimiento preventivo implica realizar cambios en el software antes de que ocurran fallos, con el objetivo de mejorar el rendimiento y prevenir problemas futuros."
    },
    {
        "prompt": "¿Qué es una prueba de aceptación de usuario (UAT) en software?",
        "response": "Una prueba de aceptación de usuario (UAT) es la fase en la que los usuarios finales prueban el software para asegurarse de que cumple con los requisitos y expectativas antes de su implementación final."
    },
    {
        "prompt": "¿Qué es una métrica de defectos en pruebas de software?",
        "response": "Una métrica de defectos mide la cantidad de errores o fallos detectados en el software durante las pruebas, proporcionando una indicación de la calidad del producto y el esfuerzo necesario para corregirlos."
    },
    {
        "prompt": "¿Qué es el mantenimiento correctivo en software?",
        "response": "El mantenimiento correctivo es el proceso de corregir errores o fallos en el software después de su lanzamiento, para asegurarse de que continúe funcionando según lo previsto."
    },
    {
        "prompt": "¿Qué es la prueba de volumen en software?",
        "response": "La prueba de volumen verifica cómo el software maneja grandes cantidades de datos, evaluando su capacidad para procesar y gestionar un volumen elevado de información sin degradar su rendimiento."
    },
    {
        "prompt": "¿Qué es un caso de uso en el diseño de software?",
        "response": "Un caso de uso es una descripción de cómo los usuarios interactúan con el sistema para lograr un objetivo específico, proporcionando una forma de definir los requisitos funcionales."
    },
    {
        "prompt": "¿Qué es la documentación técnica en el desarrollo de software?",
        "response": "La documentación técnica es una colección de documentos que describen el diseño, arquitectura, funcionalidades, requerimientos y configuración del software, facilitando su mantenimiento y uso."
    },
    {
        "prompt": "¿Qué es la planificación de sprint en Scrum?",
        "response": "La planificación de sprint es una reunión en la que el equipo Scrum decide qué elementos del backlog del producto se trabajarán durante el siguiente sprint."
    },
    {
        "prompt": "¿Qué es la prueba de aceptación del cliente?",
        "response": "La prueba de aceptación del cliente es la fase en la que el cliente o usuario final evalúa si el software cumple con los requisitos y es adecuado para su despliegue."
    },
    {
        "prompt": "¿Qué es una API en el desarrollo de software?",
        "response": "Una API (Interfaz de Programación de Aplicaciones) es un conjunto de protocolos y herramientas que permiten que diferentes aplicaciones se comuniquen entre sí y compartan datos o funcionalidades."
    },
    {
        "prompt": "¿Qué es la cobertura de pruebas?",
        "response": "La cobertura de pruebas es una métrica que mide el porcentaje de código que ha sido ejecutado durante las pruebas, ayudando a identificar áreas que necesitan más pruebas."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en la gestión de cambios de software?",
        "response": "El análisis de impacto evalúa las posibles consecuencias y riesgos de realizar cambios en el software, asegurando que no se introduzcan errores o problemas en otras partes del sistema."
    },
    {
        "prompt": "¿Qué es un entorno de desarrollo en software?",
        "response": "Un entorno de desarrollo es un entorno controlado donde los desarrolladores escriben, prueban y depuran código antes de que el software sea movido a producción."
    },
    {
        "prompt": "¿Qué es un proceso de despliegue en software?",
        "response": "El proceso de despliegue es el conjunto de pasos necesarios para poner en producción una versión nueva o actualizada de un software, asegurando su correcta instalación y funcionamiento en el entorno de producción."
    },
    {
        "prompt": "¿Qué es la prueba de escalabilidad en software?",
        "response": "La prueba de escalabilidad evalúa la capacidad del software para manejar una cantidad creciente de usuarios o transacciones sin degradar su rendimiento."
    },
    {
        "prompt": "¿Qué es la integración continua en DevOps?",
        "response": "La integración continua es una práctica donde los desarrolladores integran y prueban su código en un repositorio común de manera frecuente, para detectar errores tempranamente y evitar conflictos."
    },
    {
        "prompt": "¿Qué es un Sprint Review en Scrum?",
        "response": "El Sprint Review es una reunión en la que el equipo Scrum presenta el trabajo completado durante el sprint al Product Owner y a otras partes interesadas para obtener retroalimentación."
    },
    {
        "prompt": "¿Qué es una retrospectiva de sprint?",
        "response": "La retrospectiva de sprint es una reunión realizada al final de cada sprint en la que el equipo reflexiona sobre lo que funcionó bien y lo que puede mejorarse en futuros sprints."
    },
    {
        "prompt": "¿Qué es la deuda técnica en software?",
        "response": "La deuda técnica es el costo acumulado de implementar soluciones rápidas o subóptimas en el desarrollo de software, que requerirán correcciones o mejoras en el futuro."
    },
    {
        "prompt": "¿Qué es el análisis estático en seguridad de software?",
        "response": "El análisis estático en seguridad es el proceso de examinar el código fuente de una aplicación sin ejecutarlo para identificar vulnerabilidades y errores de seguridad."
    },
    {
        "prompt": "¿Qué es el diseño basado en componentes?",
        "response": "El diseño basado en componentes es un enfoque de desarrollo que organiza el software en bloques modulares e independientes que pueden ser reutilizados en diferentes partes de la aplicación."
    },
    {
        "prompt": "¿Qué es la prueba de aceptación de usuario?",
        "response": "La prueba de aceptación de usuario es el proceso en el que los usuarios finales prueban el software para asegurarse de que cumple con los requisitos antes de su implementación."
    },
    {
        "prompt": "¿Qué es una historia de usuario en el desarrollo ágil?",
        "response": "Una historia de usuario es una descripción breve y simple de una funcionalidad desde la perspectiva del usuario final, usada para guiar el desarrollo de software en metodologías ágiles."
    },
    {
        "prompt": "¿Qué es una prueba de regresión en software?",
        "response": "Una prueba de regresión se utiliza para verificar que las funcionalidades existentes del software no hayan sido afectadas por cambios recientes o actualizaciones."
    },
    {
        "prompt": "¿Qué es la refactorización en el desarrollo de software?",
        "response": "La refactorización es el proceso de reestructurar el código sin cambiar su comportamiento externo, con el objetivo de mejorar su calidad, legibilidad y mantenibilidad."
    },
    {
        "prompt": "¿Qué es el despliegue continuo en DevOps?",
        "response": "El despliegue continuo es una práctica en la que los cambios en el software se despliegan automáticamente en producción tras pasar las pruebas, garantizando actualizaciones rápidas y frecuentes."
    },
    {
        "prompt": "¿Qué es una API REST?",
        "response": "Una API REST es un tipo de interfaz que sigue los principios de REST (Representational State Transfer) para permitir la comunicación entre diferentes sistemas de manera simple y escalable, usando HTTP."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas en software?",
        "response": "Un entorno de pruebas es un entorno controlado donde se ejecutan pruebas de software para verificar su funcionalidad y rendimiento antes de ser movido a producción."
    },
    {
        "prompt": "¿Qué es la prueba de penetración en software?",
        "response": "La prueba de penetración (pentesting) es una evaluación de seguridad en la que se simulan ataques reales para identificar vulnerabilidades en el software."
    },
    {
        "prompt": "¿Qué es la automatización de pruebas en el ciclo de vida de software?",
        "response": "La automatización de pruebas es el uso de herramientas y scripts para ejecutar pruebas de software de manera automática, mejorando la eficiencia y reduciendo el esfuerzo manual."
    },
    {
        "prompt": "¿Qué es una métrica de calidad en software?",
        "response": "Una métrica de calidad es una medida cuantitativa utilizada para evaluar la calidad del software, como la eficiencia, la fiabilidad, la mantenibilidad y la satisfacción del usuario."
    },
    {
        "prompt": "¿Qué es la mantenibilidad en software?",
        "response": "La mantenibilidad es la capacidad del software para ser modificado, corregido o actualizado fácilmente para adaptarse a nuevos requisitos o mejorar su rendimiento."
    },
    {
        "prompt": "¿Qué es una prueba de carga en software?",
        "response": "Una prueba de carga evalúa el rendimiento del software cuando se somete a una cantidad específica de usuarios simultáneos o transacciones para determinar su capacidad de manejo bajo carga."
    },
    {
        "prompt": "¿Qué es la integración continua en el desarrollo de software?",
        "response": "La integración continua es una práctica en la que los desarrolladores integran sus cambios de código frecuentemente en un repositorio compartido, realizando pruebas automatizadas para detectar errores tempranos."
    },
    {
        "prompt": "¿Qué es una prueba de caja negra en software?",
        "response": "Una prueba de caja negra es una técnica de pruebas donde el evaluador no tiene acceso al código fuente y evalúa el software solo a partir de las entradas y salidas."
    },
    {
        "prompt": "¿Qué es el análisis dinámico en el desarrollo de software?",
        "response": "El análisis dinámico es el proceso de probar y evaluar el software mientras se ejecuta para identificar problemas de rendimiento, seguridad o funcionalidad en tiempo de ejecución."
    },
    {
        "prompt": "¿Qué es un pipeline CI/CD?",
        "response": "Un pipeline CI/CD es una serie de procesos automatizados que incluyen integración continua (CI) y entrega continua (CD), permitiendo que los cambios de código se prueben y desplieguen automáticamente."
    },
    {
        "prompt": "¿Qué es la usabilidad en software?",
        "response": "La usabilidad es la medida en que un software puede ser utilizado por usuarios específicos para alcanzar objetivos específicos con efectividad, eficiencia y satisfacción en un contexto de uso particular."
    },
    {
        "prompt": "¿Qué es la deuda técnica en el desarrollo ágil?",
        "response": "La deuda técnica es el costo de realizar correcciones futuras debido a soluciones rápidas o subóptimas implementadas para cumplir plazos, que deben mejorarse más adelante."
    },
    {
        "prompt": "¿Qué es la prueba de estrés en software?",
        "response": "La prueba de estrés verifica el comportamiento del software bajo condiciones extremas, como una sobrecarga de usuarios o limitaciones de recursos, para asegurar su estabilidad."
    },
    {
        "prompt": "¿Qué es una retrospectiva en Scrum?",
        "response": "Una retrospectiva es una reunión que se realiza al final de cada sprint en Scrum, donde el equipo reflexiona sobre lo que funcionó bien, lo que no, y cómo mejorar para el próximo sprint."
    },
    {
        "prompt": "¿Qué es un backlog en desarrollo ágil?",
        "response": "Un backlog es una lista priorizada de tareas, características y mejoras pendientes en un proyecto de desarrollo ágil, que se revisa continuamente durante el ciclo de desarrollo."
    },
    {
        "prompt": "¿Qué es la accesibilidad en el diseño de software?",
        "response": "La accesibilidad en software se refiere a la capacidad de un sistema para ser utilizado por personas con diversas discapacidades, asegurando que el diseño sea inclusivo y accesible para todos."
    },
    {
        "prompt": "¿Qué es el diseño basado en pruebas (TDD)?",
        "response": "El diseño basado en pruebas (TDD) es un enfoque de desarrollo donde las pruebas se escriben antes del código, asegurando que el software cumpla con los requisitos funcionales desde el principio."
    },
    {
        "prompt": "¿Qué es un caso de prueba en software?",
        "response": "Un caso de prueba es un conjunto de entradas, condiciones y resultados esperados que se utilizan para verificar que una función específica del software funcione correctamente."
    },
    {
        "prompt": "¿Qué es el análisis de riesgos en el desarrollo de software?",
        "response": "El análisis de riesgos es el proceso de identificar, evaluar y priorizar los riesgos que podrían afectar la calidad, los plazos o el presupuesto en un proyecto de desarrollo de software."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo puede impactar un proyecto de software?",
        "response": "La deuda técnica son las decisiones de desarrollo rápidas o subóptimas que generan la necesidad de mejoras futuras, lo que puede impactar negativamente en la mantenibilidad, escalabilidad y calidad del software."
    },
    {
        "prompt": "¿Qué es el mantenimiento correctivo en software?",
        "response": "El mantenimiento correctivo es el proceso de corregir errores o fallos en el software después de su lanzamiento, para asegurar que siga funcionando según lo esperado."
    },
    {
        "prompt": "¿Qué es la modularidad en el diseño de software?",
        "response": "La modularidad es la práctica de dividir el software en componentes independientes o módulos, lo que facilita su desarrollo, prueba, mantenimiento y actualización."
    },
    {
        "prompt": "¿Qué es una prueba de sistema en software?",
        "response": "Una prueba de sistema es una evaluación integral que verifica que todos los componentes y módulos del software funcionen correctamente como un sistema completo."
    },
    {
        "prompt": "¿Qué es un diagrama de flujo en el desarrollo de software?",
        "response": "Un diagrama de flujo es una representación gráfica del flujo lógico o proceso de trabajo en un sistema de software, que muestra cómo interactúan los diferentes componentes y decisiones."
    },
    {
        "prompt": "¿Qué es una prueba de caja blanca en software?",
        "response": "Una prueba de caja blanca es un enfoque de pruebas en el que el evaluador tiene acceso al código fuente y se enfoca en verificar la lógica interna y los flujos de control del software."
    },
    {
        "prompt": "¿Qué es una prueba de integración en software?",
        "response": "La prueba de integración verifica que los diferentes módulos o componentes de un sistema de software funcionen correctamente juntos como un sistema unificado."
    },
    {
        "prompt": "¿Qué es una prueba de humo en software?",
        "response": "Una prueba de humo es una prueba inicial rápida que verifica si las funciones más básicas del software funcionan correctamente antes de realizar pruebas más detalladas."
    },
    {
        "prompt": "¿Qué es el testing exploratorio en software?",
        "response": "El testing exploratorio es un enfoque de pruebas en el que los testers exploran libremente la aplicación sin seguir un guión predefinido, buscando activamente errores o problemas de usabilidad."
    },
    {
        "prompt": "¿Qué es la seguridad en el ciclo de vida del desarrollo de software?",
        "response": "La seguridad en el ciclo de vida del desarrollo de software implica la integración de prácticas de seguridad en todas las fases del desarrollo, desde la planificación hasta la implementación, para mitigar riesgos y proteger los datos."
    },
    {
        "prompt": "¿Qué es la prueba de compatibilidad en software?",
        "response": "La prueba de compatibilidad verifica que el software funcione correctamente en diferentes dispositivos, sistemas operativos, navegadores o configuraciones de hardware."
    },
    {
        "prompt": "¿Qué es la interoperabilidad en software?",
        "response": "La interoperabilidad es la capacidad del software para interactuar y funcionar con otros sistemas o aplicaciones de manera efectiva, permitiendo el intercambio y uso de datos entre ellos."
    },
    {
        "prompt": "¿Qué es la prueba de carga en software?",
        "response": "Una prueba de carga evalúa cómo el software maneja una cantidad específica de usuarios o transacciones simultáneas, midiendo su rendimiento bajo condiciones normales y extremas."
    },
    {
        "prompt": "¿Qué es la entrega continua en el desarrollo de software?",
        "response": "La entrega continua es una práctica en la que los cambios en el software se prueban y preparan continuamente para su despliegue, asegurando que siempre esté en un estado listo para la producción."
    },
    {
        "prompt": "¿Qué es un entorno de producción en software?",
        "response": "Un entorno de producción es el entorno en el que el software está disponible para los usuarios finales y en el que se espera que funcione de manera estable y sin interrupciones."
    },
    {
        "prompt": "¿Qué es el análisis estático en seguridad de software?",
        "response": "El análisis estático es una técnica de seguridad que implica analizar el código fuente de una aplicación sin ejecutarlo para identificar vulnerabilidades o errores de seguridad."
    },
    {
        "prompt": "¿Qué es un caso de uso en el desarrollo de software?",
        "response": "Un caso de uso es una descripción de cómo un usuario interactúa con el sistema para lograr un objetivo específico, proporcionando un marco para definir los requisitos funcionales."
    },
    {
        "prompt": "¿Qué es la validación en el desarrollo de software?",
        "response": "La validación es el proceso de asegurarse de que el producto de software cumple con las expectativas y necesidades del cliente o usuario final, verificando que el sistema hace lo que debería hacer."
    },
    {
        "prompt": "¿Qué es el análisis dinámico en las pruebas de software?",
        "response": "El análisis dinámico es una técnica de pruebas que implica ejecutar el software para encontrar errores en tiempo de ejecución, como problemas de rendimiento o de memoria."
    },
    {
        "prompt": "¿Qué es la modularidad en la arquitectura de software?",
        "response": "La modularidad es el enfoque de dividir un sistema de software en componentes independientes o módulos que puedan ser desarrollados, probados y mantenidos por separado."
    },
   {
        "prompt": "¿Qué es un sistema distribuido en el desarrollo de software?",
        "response": "Un sistema distribuido es una colección de computadoras independientes que trabajan juntas para cumplir un objetivo común, pero que se perciben como un sistema único por los usuarios."
    },
    {
        "prompt": "¿Qué es la prueba de recuperación en software?",
        "response": "La prueba de recuperación verifica la capacidad del software para recuperarse de fallos, errores o interrupciones inesperadas, garantizando que pueda restaurar sus funciones en poco tiempo."
    },
    {
        "prompt": "¿Qué es la integración continua en DevOps?",
        "response": "La integración continua es una práctica de DevOps donde los desarrolladores integran su código frecuentemente en un repositorio compartido, con pruebas automáticas para detectar errores a medida que se realizan cambios."
    },
    {
        "prompt": "¿Qué es el diseño centrado en el usuario?",
        "response": "El diseño centrado en el usuario es un enfoque de diseño que se enfoca en las necesidades, comportamientos y objetivos del usuario final durante todo el proceso de desarrollo del software."
    },
    {
        "prompt": "¿Qué es una historia de usuario en Scrum?",
        "response": "Una historia de usuario es una descripción breve y simple de una funcionalidad que el usuario necesita, redactada desde la perspectiva del usuario final para guiar el desarrollo en Scrum."
    },
    {
        "prompt": "¿Qué es la evaluación heurística en la usabilidad del software?",
        "response": "La evaluación heurística es un método de evaluación de la usabilidad donde un pequeño grupo de evaluadores examina una interfaz para identificar problemas en relación con principios de usabilidad reconocidos."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo puede reducirse?",
        "response": "La deuda técnica es el costo de las decisiones de diseño o desarrollo que permiten entregas rápidas pero que requieren corrección en el futuro. Puede reducirse refactorizando el código y mejorando las prácticas de desarrollo."
    },
    {
        "prompt": "¿Qué es un microservicio en arquitectura de software?",
        "response": "Un microservicio es un componente de software independiente que realiza una función específica dentro de un sistema mayor y que puede ser desarrollado, desplegado y escalado de manera autónoma."
    },
    {
        "prompt": "¿Qué son las pruebas de estrés en software?",
        "response": "Las pruebas de estrés evalúan cómo se comporta el software bajo condiciones extremas, como una sobrecarga de usuarios o el uso máximo de recursos, para garantizar su estabilidad."
    },
    {
        "prompt": "¿Qué es la cobertura de pruebas?",
        "response": "La cobertura de pruebas es una métrica que mide el porcentaje del código fuente que ha sido ejecutado por las pruebas, ayudando a identificar áreas del software que no han sido probadas."
    },
    {
        "prompt": "¿Qué es una auditoría de código en software?",
        "response": "Una auditoría de código es una revisión exhaustiva del código fuente para identificar errores, vulnerabilidades de seguridad o mejoras en la calidad del código y asegurar que cumple con los estándares establecidos."
    },
    {
        "prompt": "¿Qué es la integración continua y cómo mejora la calidad del software?",
        "response": "La integración continua es una práctica de desarrollo en la que los cambios en el código se integran y prueban frecuentemente. Mejora la calidad del software al detectar errores rápidamente y evitar conflictos entre los desarrolladores."
    },
    {
        "prompt": "¿Qué es una prueba unitaria?",
        "response": "Una prueba unitaria verifica el correcto funcionamiento de una pequeña parte del software, como una función o método, de manera aislada del resto del sistema."
    },
    {
        "prompt": "¿Qué es la prueba de aceptación en software?",
        "response": "La prueba de aceptación es la fase final del proceso de pruebas, donde los usuarios o clientes finales verifican si el software cumple con los requisitos y está listo para ser desplegado."
    },
    {
        "prompt": "¿Qué es la arquitectura monolítica en software?",
        "response": "Una arquitectura monolítica es un enfoque de diseño en el que todos los componentes y funciones de una aplicación están integrados en una única base de código, lo que puede dificultar la escalabilidad y el mantenimiento."
    },
    {
        "prompt": "¿Qué es la prueba de regresión en software?",
        "response": "La prueba de regresión es una técnica de pruebas que verifica si las nuevas actualizaciones o correcciones en el software han afectado negativamente las funcionalidades existentes."
    },
    {
        "prompt": "¿Qué es la usabilidad en software?",
        "response": "La usabilidad es la medida en que un software puede ser utilizado por los usuarios para lograr sus objetivos de manera efectiva, eficiente y satisfactoria, evaluando factores como facilidad de uso y comprensión."
    },
    {
        "prompt": "¿Qué es un pipeline de CI/CD?",
        "response": "Un pipeline de CI/CD es un conjunto de procesos automatizados que permiten la integración continua (CI) y la entrega continua (CD) de software, asegurando que los cambios de código se prueben y desplieguen de manera fluida."
    },
    {
        "prompt": "¿Qué es un sistema tolerante a fallos?",
        "response": "Un sistema tolerante a fallos es aquel que puede continuar funcionando correctamente incluso si una o más de sus partes fallan, asegurando una alta disponibilidad y fiabilidad del software."
    },
    {
        "prompt": "¿Qué es la portabilidad en software?",
        "response": "La portabilidad es la capacidad del software para ser trasladado y ejecutado en diferentes entornos o plataformas con pocos o ningún cambio en su código."
    },
    {
        "prompt": "¿Qué es un diagrama de flujo en desarrollo de software?",
        "response": "Un diagrama de flujo es una representación gráfica que muestra el flujo de trabajo o proceso lógico dentro de un sistema de software, facilitando la comprensión de la interacción entre sus componentes."
    },
    {
        "prompt": "¿Qué son las pruebas de compatibilidad en software?",
        "response": "Las pruebas de compatibilidad evalúan si el software puede funcionar correctamente en diferentes entornos, como dispositivos, sistemas operativos o navegadores, sin perder funcionalidad."
    },
    {
        "prompt": "¿Qué es la escalabilidad en software?",
        "response": "La escalabilidad es la capacidad del software para manejar un aumento en la carga de trabajo o el número de usuarios sin sacrificar su rendimiento o estabilidad."
    },
    {
        "prompt": "¿Qué es una prueba de caja negra?",
        "response": "La prueba de caja negra es una técnica de pruebas donde el evaluador no tiene acceso al código fuente y solo se enfoca en verificar la funcionalidad del software basándose en las entradas y salidas."
    },
    {
        "prompt": "¿Qué es una retrospectiva en Scrum?",
        "response": "Una retrospectiva es una reunión realizada al final de cada sprint en Scrum, en la que el equipo reflexiona sobre lo que funcionó, lo que no y cómo mejorar para futuros sprints."
    },
    {
        "prompt": "¿Qué es el despliegue continuo en DevOps?",
        "response": "El despliegue continuo es una práctica de DevOps donde los cambios en el código son automáticamente probados y desplegados en producción sin intervención manual, asegurando actualizaciones rápidas y seguras."
    },
    {
        "prompt": "¿Qué es el análisis estático en seguridad de software?",
        "response": "El análisis estático es una técnica de seguridad que revisa el código fuente del software sin ejecutarlo para identificar vulnerabilidades y errores que podrían comprometer la seguridad."
    },
    {
        "prompt": "¿Qué es el mantenimiento preventivo en software?",
        "response": "El mantenimiento preventivo consiste en realizar cambios en el software antes de que ocurran fallos, con el objetivo de mejorar su rendimiento y evitar problemas futuros."
    },
    {
        "prompt": "¿Qué es el control de versiones en software?",
        "response": "El control de versiones es el proceso de gestionar y rastrear los cambios realizados en el código fuente del software, permitiendo a los desarrolladores colaborar y revertir a versiones anteriores cuando sea necesario."
    },
    {
        "prompt": "¿Qué es el ciclo de vida del desarrollo de software?",
        "response": "El ciclo de vida del desarrollo de software (SDLC) es un proceso estructurado que describe las fases que sigue el desarrollo de un sistema de software, desde la planificación hasta el mantenimiento."
    },
    {
        "prompt": "¿Qué es la deuda técnica en el desarrollo ágil?",
        "response": "La deuda técnica es el costo acumulado de implementar soluciones rápidas o subóptimas durante el desarrollo ágil, que requieren corrección o mejora en el futuro para evitar problemas de mantenibilidad."
    },
    {
        "prompt": "¿Qué es el mantenimiento adaptativo en software?",
        "response": "El mantenimiento adaptativo implica hacer modificaciones en el software para que continúe funcionando correctamente en nuevos entornos o condiciones no contempladas en su desarrollo original."
    },
    {
        "prompt": "¿Qué es el análisis dinámico en pruebas de software?",
        "response": "El análisis dinámico es una técnica de pruebas que evalúa el software mientras se ejecuta para identificar problemas de rendimiento, seguridad o funcionalidad en tiempo de ejecución."
    },
    {
        "prompt": "¿Qué es un backlog en desarrollo ágil?",
        "response": "Un backlog es una lista priorizada de tareas, características y mejoras pendientes en un proyecto de desarrollo ágil, que el equipo debe abordar durante el ciclo de desarrollo."
    },
    {
        "prompt": "¿Qué es una auditoría de calidad de software?",
        "response": "Una auditoría de calidad de software es un proceso formal para evaluar si el software y sus procesos de desarrollo cumplen con los estándares y requisitos establecidos para asegurar su calidad."
    },
    {
        "prompt": "¿Qué es el testing exploratorio en software?",
        "response": "El testing exploratorio es un enfoque de pruebas donde los testers exploran el software de manera libre, sin seguir un guión predefinido, buscando activamente errores o problemas de usabilidad."
    },
    {
        "prompt": "¿Qué es la interoperabilidad en software?",
        "response": "La interoperabilidad es la capacidad del software para interactuar y funcionar correctamente con otros sistemas o aplicaciones, permitiendo el intercambio de información y la integración de procesos."
    },
    {
        "prompt": "¿Qué es un microservicio y cuáles son sus ventajas?",
        "response": "Un microservicio es un componente de software independiente que realiza una función específica dentro de un sistema mayor. Sus ventajas incluyen la escalabilidad, flexibilidad en el desarrollo y facilidad para realizar actualizaciones sin afectar al sistema completo."
    },
    {
        "prompt": "¿Qué es el análisis FODA en un proyecto de software?",
        "response": "El análisis FODA es una técnica utilizada para evaluar las fortalezas, oportunidades, debilidades y amenazas en un proyecto de software, ayudando a tomar decisiones estratégicas."
    },
    {
        "prompt": "¿Qué es la documentación de pruebas en software?",
        "response": "La documentación de pruebas incluye toda la información relacionada con las pruebas realizadas, como los planes de pruebas, casos de pruebas, resultados y cualquier observación relevante sobre los defectos encontrados."
    },
    {
        "prompt": "¿Qué es la ingeniería inversa en software?",
        "response": "La ingeniería inversa es el proceso de descomponer un sistema de software para comprender su diseño, código y funcionamiento, generalmente con el propósito de replicarlo o mejorarlo."
    },
    {
        "prompt": "¿Qué es un entorno de desarrollo en software?",
        "response": "Un entorno de desarrollo es un espacio controlado donde los desarrolladores crean y prueban su código antes de integrarlo en un entorno de producción."
    },
    {
        "prompt": "¿Qué es una API en el desarrollo de software?",
        "response": "Una API (Interfaz de Programación de Aplicaciones) es un conjunto de reglas y herramientas que permiten que diferentes aplicaciones se comuniquen entre sí, facilitando el intercambio de datos y funcionalidades."
    },
    {
        "prompt": "¿Qué es la modularidad en software?",
        "response": "La modularidad es la capacidad de dividir el software en componentes independientes o módulos que puedan ser desarrollados, probados y mantenidos por separado, facilitando el mantenimiento y la escalabilidad."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo impacta la calidad del software?",
        "response": "La deuda técnica es el trabajo adicional que se genera cuando se implementan soluciones rápidas o subóptimas. Impacta negativamente en la calidad del software al aumentar los costos de mantenimiento y reducir la escalabilidad."
    },
    {
        "prompt": "¿Qué es una prueba de caja blanca?",
        "response": "Una prueba de caja blanca es un enfoque de pruebas en el que el evaluador tiene acceso al código fuente y se enfoca en verificar los flujos de control, la lógica interna y las estructuras del software."
    },
    {
        "prompt": "¿Qué es la prueba de aceptación de usuario (UAT)?",
        "response": "La prueba de aceptación de usuario (UAT) es la fase en la que los usuarios finales verifican si el software cumple con los requisitos acordados y está listo para su implementación."
    },
    {
        "prompt": "¿Qué es una métrica de calidad en software?",
        "response": "Una métrica de calidad es una medida cuantitativa utilizada para evaluar aspectos específicos de la calidad del software, como su rendimiento, estabilidad, usabilidad o eficiencia."
    },
    {
        "prompt": "¿Qué es la mantenibilidad en software?",
        "response": "La mantenibilidad es la capacidad del software para ser modificado, corregido o mejorado fácilmente, lo que facilita su adaptación a nuevos requisitos o entornos operativos."
    },
    {
        "prompt": "¿Qué es una prueba de carga?",
        "response": "Una prueba de carga evalúa cómo el software maneja una cantidad específica de usuarios o transacciones simultáneas para determinar su rendimiento bajo condiciones de carga."
    },
    {
        "prompt": "¿Qué es el análisis de riesgos en un proyecto de software?",
        "response": "El análisis de riesgos es el proceso de identificar, evaluar y mitigar posibles riesgos que puedan afectar el éxito de un proyecto de software, como problemas de calidad, plazos o costos."
    },
    {
        "prompt": "¿Qué es el diseño orientado a objetos en software?",
        "response": "El diseño orientado a objetos es una metodología de desarrollo que organiza el software en objetos que contienen datos y métodos, promoviendo la reutilización del código y facilitando su mantenimiento."
    },
    {
        "prompt": "¿Qué es el mantenimiento evolutivo en software?",
        "response": "El mantenimiento evolutivo implica realizar mejoras y adiciones al software para adaptarlo a nuevos requisitos o entornos, manteniendo su funcionalidad y relevancia."
    },
    {
        "prompt": "¿Qué es el análisis estático en pruebas de software?",
        "response": "El análisis estático es una técnica que evalúa el código fuente sin ejecutarlo, identificando posibles errores, vulnerabilidades o problemas de estilo en el código."
    },
    {
        "prompt": "¿Qué es un diagrama de flujo?",
        "response": "Un diagrama de flujo es una representación gráfica que describe el flujo de trabajo o los procesos dentro de un sistema, mostrando cómo interactúan los diferentes componentes."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas?",
        "response": "Un entorno de pruebas es un entorno controlado donde los testers ejecutan pruebas para verificar la funcionalidad, rendimiento y estabilidad del software antes de su implementación en producción."
    },
    {
        "prompt": "¿Qué es la validación en el desarrollo de software?",
        "response": "La validación es el proceso de asegurarse de que el producto de software cumple con los requisitos y expectativas del usuario final, verificando que el sistema hace lo que debería hacer."
    },
    {
        "prompt": "¿Qué es una prueba de integración?",
        "response": "La prueba de integración es una técnica que verifica que los diferentes módulos o componentes de un sistema de software funcionen correctamente juntos como un sistema unificado."
    },
    {
        "prompt": "¿Qué es el despliegue continuo en software?",
        "response": "El despliegue continuo es una práctica de desarrollo donde los cambios en el código se prueban y se despliegan automáticamente en producción, permitiendo lanzamientos rápidos y frecuentes."
    },
    {
        "prompt": "¿Qué es un caso de uso?",
        "response": "Un caso de uso es una descripción de cómo un usuario interactúa con el sistema para lograr un objetivo específico, proporcionando un marco para definir los requisitos funcionales."
    },
    {
        "prompt": "¿Qué es el diseño centrado en el usuario?",
        "response": "El diseño centrado en el usuario es un enfoque de desarrollo que se enfoca en las necesidades, preferencias y limitaciones de los usuarios finales para asegurar una experiencia de usuario efectiva y satisfactoria."
    },
    {
        "prompt": "¿Qué es una API REST?",
        "response": "Una API REST es una interfaz que sigue los principios de REST (Representational State Transfer) y permite la comunicación entre aplicaciones de manera simple y eficiente utilizando HTTP."
    },
    {
        "prompt": "¿Qué es la prueba de penetración en software?",
        "response": "La prueba de penetración, o pentesting, es una técnica de seguridad que simula un ataque real contra el software para identificar vulnerabilidades y mejorar la seguridad del sistema."
    },

{
        "prompt": "¿Qué es la prueba de humo en software?",
        "response": "La prueba de humo es una evaluación rápida y superficial del software para verificar que las funciones básicas estén operativas antes de realizar pruebas más exhaustivas."
    },
    {
        "prompt": "¿Qué es una prueba funcional en software?",
        "response": "Una prueba funcional evalúa si el software cumple con los requisitos especificados, probando sus características y funcionalidades desde la perspectiva del usuario."
    },
    {
        "prompt": "¿Qué es el diseño adaptativo en software?",
        "response": "El diseño adaptativo es un enfoque de diseño que asegura que una aplicación se ajuste correctamente a diferentes dispositivos, resoluciones de pantalla y contextos de uso."
    },
    {
        "prompt": "¿Qué es una prueba de rendimiento?",
        "response": "Una prueba de rendimiento evalúa la capacidad del software para manejar una cantidad específica de usuarios o transacciones, midiendo factores como el tiempo de respuesta, la estabilidad y el uso de recursos."
    },
    {
        "prompt": "¿Qué es el diseño de interfaz de usuario (UI)?",
        "response": "El diseño de interfaz de usuario (UI) es el proceso de crear interfaces visuales en software que sean fáciles de usar y agradables estéticamente, centradas en la interacción del usuario con el sistema."
    },
    {
        "prompt": "¿Qué es el diseño responsivo en software?",
        "response": "El diseño responsivo es un enfoque de desarrollo que garantiza que una aplicación o sitio web se vea y funcione bien en una amplia gama de dispositivos y tamaños de pantalla."
    },
    {
        "prompt": "¿Qué es la ingeniería de requisitos?",
        "response": "La ingeniería de requisitos es el proceso de definir, documentar y mantener los requisitos de software, asegurando que el sistema final cumpla con las expectativas y necesidades del usuario."
    },
    {
        "prompt": "¿Qué es la deuda técnica en proyectos de software?",
        "response": "La deuda técnica es el costo acumulado de soluciones rápidas o temporales implementadas durante el desarrollo, que necesitan ser corregidas para mejorar la calidad y mantenibilidad del software."
    },
    {
        "prompt": "¿Qué es una prueba de volumen?",
        "response": "Una prueba de volumen evalúa cómo el software maneja grandes cantidades de datos, verificando su capacidad para procesar y gestionar un volumen elevado sin degradar su rendimiento."
    },
    {
        "prompt": "¿Qué es un entorno de producción en software?",
        "response": "Un entorno de producción es el entorno donde el software se pone a disposición de los usuarios finales y en el que se espera que funcione de manera estable y eficiente."
    },
    {
        "prompt": "¿Qué es la validación cruzada en pruebas de software?",
        "response": "La validación cruzada es una técnica que divide los datos en múltiples subconjuntos para entrenar y validar el modelo de software, asegurando que funcione correctamente en diferentes casos de uso."
    },
    {
        "prompt": "¿Qué es el diseño centrado en tareas?",
        "response": "El diseño centrado en tareas es un enfoque en el que la interfaz de usuario y las funcionalidades del software se organizan en torno a las tareas específicas que el usuario necesita realizar."
    },
    {
        "prompt": "¿Qué es una prueba de regresión automatizada?",
        "response": "Una prueba de regresión automatizada utiliza herramientas de automatización para ejecutar pruebas de regresión de forma repetitiva, verificando que los cambios recientes no afecten las funcionalidades existentes."
    },
    {
        "prompt": "¿Qué es un entorno de desarrollo?",
        "response": "Un entorno de desarrollo es un entorno controlado donde los desarrolladores crean y prueban el software antes de que este sea desplegado en producción."
    },
    {
        "prompt": "¿Qué es el diseño modular en software?",
        "response": "El diseño modular es un enfoque de desarrollo en el que un sistema de software se divide en módulos independientes, que pueden desarrollarse, probarse y desplegarse de forma autónoma."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en la gestión de cambios de software?",
        "response": "El análisis de impacto evalúa los efectos que un cambio propuesto tendrá en el sistema de software, asegurando que no se introduzcan problemas o errores en otras partes del sistema."
    },
    {
        "prompt": "¿Qué es una prueba de recuperación en software?",
        "response": "Una prueba de recuperación evalúa la capacidad del software para recuperarse después de un fallo, verificando cómo restaura sus funciones tras un problema o interrupción inesperada."
    },
    {
        "prompt": "¿Qué es el análisis heurístico en pruebas de usabilidad?",
        "response": "El análisis heurístico es un método de evaluación en el que expertos en usabilidad revisan una interfaz para identificar problemas de usabilidad en función de principios o reglas establecidas."
    },
    {
        "prompt": "¿Qué es el análisis coste-beneficio en proyectos de software?",
        "response": "El análisis coste-beneficio es una técnica utilizada para evaluar los costos de un proyecto de software frente a sus beneficios esperados, ayudando a tomar decisiones sobre su viabilidad."
    },
    {
        "prompt": "¿Qué es un error crítico en software?",
        "response": "Un error crítico es un fallo en el software que afecta gravemente su funcionamiento o usabilidad, impidiendo que los usuarios realicen tareas clave o que el sistema funcione de manera segura."
    },
    {
        "prompt": "¿Qué es una arquitectura de software en capas?",
        "response": "Una arquitectura en capas organiza el software en niveles separados donde cada capa tiene responsabilidades específicas, lo que mejora la mantenibilidad y facilita la separación de preocupaciones."
    },
    {
        "prompt": "¿Qué es la resiliencia en software?",
        "response": "La resiliencia es la capacidad del software para seguir funcionando correctamente después de experimentar fallos o problemas, garantizando la continuidad del servicio ante fallos parciales."
    },
    {
        "prompt": "¿Qué es una prueba de validación?",
        "response": "Una prueba de validación verifica si el software cumple con los requisitos y expectativas del usuario final, asegurando que se ajuste a su propósito en condiciones reales de uso."
    },
    {
        "prompt": "¿Qué es el mantenimiento preventivo en software?",
        "response": "El mantenimiento preventivo implica realizar ajustes en el software antes de que se presenten fallos, mejorando su estabilidad y evitando problemas futuros."
    },
    {
        "prompt": "¿Qué es el testing exploratorio?",
        "response": "El testing exploratorio es una técnica en la que los testers investigan el software libremente, sin seguir un conjunto de pruebas predefinido, buscando activamente errores o problemas."
    },
    {
        "prompt": "¿Qué es una prueba alfa?",
        "response": "La prueba alfa es una fase de pruebas internas realizada por el equipo de desarrollo antes de lanzar el software a un grupo limitado de usuarios externos para la prueba beta."
    },
    {
        "prompt": "¿Qué es un sistema embebido?",
        "response": "Un sistema embebido es un sistema de computación diseñado para realizar una función específica dentro de un producto mayor, como dispositivos médicos, automóviles o electrodomésticos."
    },
    {
        "prompt": "¿Qué es el versionado semántico?",
        "response": "El versionado semántico es un esquema para asignar números de versión a un software, donde los cambios mayores indican incompatibilidades, los cambios menores añaden funciones y los parches corrigen errores."
    },
    {
        "prompt": "¿Qué es una API pública?",
        "response": "Una API pública es una interfaz de programación que está disponible para desarrolladores externos, permitiéndoles interactuar con los servicios de una plataforma para construir aplicaciones o integrar funcionalidades."
    },
    {
        "prompt": "¿Qué es un pipeline de CI/CD?",
        "response": "Un pipeline de CI/CD es una serie de procesos automatizados que permiten la integración continua y la entrega continua, asegurando que el software sea probado y desplegado de manera eficiente."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas?",
        "response": "Un entorno de pruebas es un entorno controlado donde los testers ejecutan pruebas para verificar que el software funcione correctamente antes de ser movido a producción."
    },
    {
        "prompt": "¿Qué es el mantenimiento correctivo en software?",
        "response": "El mantenimiento correctivo es el proceso de corregir errores o fallos que se encuentran después de que el software ha sido lanzado al mercado."
    },
    {
        "prompt": "¿Qué es el diseño centrado en el usuario?",
        "response": "El diseño centrado en el usuario es un enfoque de desarrollo que se enfoca en las necesidades y expectativas de los usuarios finales durante todo el proceso de diseño y desarrollo del software."
    },
    {
        "prompt": "¿Qué es una prueba de aceptación?",
        "response": "Una prueba de aceptación es una prueba realizada por el cliente o usuario final para verificar que el software cumple con los requisitos acordados y está listo para ser implementado."
    },
    {
        "prompt": "¿Qué es un caso de uso?",
        "response": "Un caso de uso es una descripción de cómo un usuario interactúa con el sistema para lograr un objetivo específico, lo que ayuda a definir los requisitos funcionales del software."
    },
    {
        "prompt": "¿Qué es la prueba de integración en software?",
        "response": "La prueba de integración verifica que los diferentes módulos o componentes de un sistema de software funcionen correctamente cuando se integran en un sistema completo."
    },
    {
        "prompt": "¿Qué es el diseño basado en pruebas (TDD)?",
        "response": "El diseño basado en pruebas (TDD) es una metodología de desarrollo en la que primero se escriben las pruebas antes de implementar el código, asegurando que el software cumpla con los requisitos desde el principio."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo afecta a un proyecto de software?",
        "response": "La deuda técnica es el costo de realizar ajustes futuros debido a decisiones rápidas o subóptimas tomadas durante el desarrollo. Afecta la calidad del software al aumentar el esfuerzo de mantenimiento y la posibilidad de errores."
    },
    {
        "prompt": "¿Qué es el despliegue continuo en DevOps?",
        "response": "El despliegue continuo es una práctica de DevOps que permite que los cambios en el software se prueben y desplieguen automáticamente en producción, asegurando actualizaciones rápidas y seguras."
    },
    {
        "prompt": "¿Qué es el diseño modular en software?",
        "response": "El diseño modular es un enfoque de desarrollo en el que un sistema de software se divide en módulos independientes que pueden desarrollarse, probarse y desplegarse de manera autónoma."
    },
    {
        "prompt": "¿Qué es la prueba de volumen en software?",
        "response": "La prueba de volumen verifica cómo el software maneja grandes cantidades de datos, evaluando su capacidad para procesar un gran volumen de información sin problemas de rendimiento."
    },
    {
        "prompt": "¿Qué es un sprint en Scrum?",
        "response": "Un sprint es un ciclo de trabajo de duración fija, generalmente entre 1 y 4 semanas, en el que un equipo Scrum trabaja en completar tareas específicas del backlog del producto."
    },
    {
        "prompt": "¿Qué es el mantenimiento evolutivo en software?",
        "response": "El mantenimiento evolutivo implica realizar mejoras y adaptaciones en el software para cumplir con nuevos requisitos o para mejorar su rendimiento a medida que el entorno cambia."
    },
    {
        "prompt": "¿Qué es una historia de usuario en el desarrollo ágil?",
        "response": "Una historia de usuario es una descripción breve y simple de una funcionalidad desde la perspectiva del usuario final, que guía el desarrollo del software en metodologías ágiles."
    },
    {
        "prompt": "¿Qué es la accesibilidad en software?",
        "response": "La accesibilidad en software se refiere a la capacidad de un sistema para ser utilizado por personas con diferentes discapacidades, garantizando una experiencia inclusiva para todos los usuarios."
    },
    {
        "prompt": "¿Qué es la prueba de estrés en software?",
        "response": "La prueba de estrés evalúa cómo el software maneja condiciones extremas, como una sobrecarga de usuarios o el uso máximo de recursos, para verificar su estabilidad bajo presión."
    },
    {
        "prompt": "¿Qué es la prueba de compatibilidad en software?",
        "response": "La prueba de compatibilidad verifica que el software funcione correctamente en diferentes dispositivos, sistemas operativos y navegadores, garantizando que sea compatible con distintos entornos."
    },
    {
        "prompt": "¿Qué es la interoperabilidad en software?",
        "response": "La interoperabilidad es la capacidad del software para interactuar y funcionar con otros sistemas o aplicaciones de manera efectiva, facilitando el intercambio de información entre ellos."
    },
    {
        "prompt": "¿Qué es el análisis estático en software?",
        "response": "El análisis estático es el proceso de revisar el código fuente sin ejecutarlo para identificar posibles errores, vulnerabilidades o problemas de estilo en el código."
    },
    {
        "prompt": "¿Qué es el testing automatizado?",
        "response": "El testing automatizado es el uso de herramientas y scripts para ejecutar pruebas de software de manera automática, aumentando la eficiencia y reduciendo el esfuerzo manual."
    },
    {
        "prompt": "¿Qué es el análisis de riesgos en el desarrollo de software?",
        "response": "El análisis de riesgos es el proceso de identificar, evaluar y priorizar riesgos que puedan afectar la calidad, plazos o presupuesto en un proyecto de software."
    },
    {
        "prompt": "¿Qué es la modularidad en software?",
        "response": "La modularidad es la capacidad de dividir el software en componentes independientes o módulos que puedan ser desarrollados, probados y mantenidos de manera separada, facilitando la escalabilidad y el mantenimiento."
    },
    {
        "prompt": "¿Qué es una API RESTful?",
        "response": "Una API RESTful es una interfaz que sigue los principios de REST (Representational State Transfer) y permite la comunicación entre aplicaciones mediante peticiones HTTP, como GET, POST, PUT y DELETE."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en software?",
        "response": "El análisis de impacto evalúa cómo los cambios propuestos en el software afectarán a otras partes del sistema, asegurando que las modificaciones no introduzcan nuevos problemas o errores."
    },
    {
        "prompt": "¿Qué es una prueba de sistema?",
        "response": "Una prueba de sistema es una evaluación integral que verifica que todos los componentes y módulos del software funcionen correctamente juntos como un sistema completo."
    },
    {
        "prompt": "¿Qué es la prueba de humo?",
        "response": "La prueba de humo es una evaluación rápida para verificar que las funciones básicas del software estén operativas antes de realizar pruebas más detalladas."
    },
    {
        "prompt": "¿Qué es el diseño responsivo en software?",
        "response": "El diseño responsivo es un enfoque que garantiza que una aplicación o sitio web se vea y funcione bien en una amplia gama de dispositivos y tamaños de pantalla."
    },
    {
        "prompt": "¿Qué es la deuda técnica?",
        "response": "La deuda técnica es el costo acumulado de implementar soluciones rápidas o subóptimas que deben corregirse en el futuro para mejorar la calidad y mantenibilidad del software."
    },
    {
        "prompt": "¿Qué es una prueba de regresión en software?",
        "response": "Una prueba de regresión verifica que los cambios recientes en el software no hayan afectado negativamente las funcionalidades existentes, asegurando que el sistema siga funcionando como se espera."
    },
    {
        "prompt": "¿Qué es la cobertura de código?",
        "response": "La cobertura de código es una métrica que mide qué porcentaje del código fuente ha sido ejecutado durante las pruebas, ayudando a identificar áreas no probadas que podrían contener errores."
    },
    {
        "prompt": "¿Qué es una retrospectiva en Scrum?",
        "response": "Una retrospectiva es una reunión realizada al final de cada sprint en Scrum, donde el equipo reflexiona sobre lo que funcionó bien, lo que no, y cómo mejorar en futuros sprints."
    },
    {
        "prompt": "¿Qué es una prueba de carga en software?",
        "response": "Una prueba de carga evalúa cómo el software maneja una cantidad específica de usuarios o transacciones simultáneas, midiendo su rendimiento bajo condiciones normales y extremas."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo puede reducirse?",
        "response": "La deuda técnica es el costo de decisiones de diseño rápidas que necesitan corrección futura. Puede reducirse mediante refactorización y mejoras continuas en el desarrollo del software."
    },
    {
        "prompt": "¿Qué es la escalabilidad horizontal?",
        "response": "La escalabilidad horizontal es la capacidad del software para manejar un aumento en la carga de trabajo agregando más servidores o recursos distribuidos, en lugar de mejorar las capacidades de un solo servidor."
    },
    {
        "prompt": "¿Qué es una prueba de aceptación del cliente?",
        "response": "Una prueba de aceptación del cliente es la fase final en la que el cliente verifica que el software cumple con los requisitos acordados antes de su implementación."
    },
    {
        "prompt": "¿Qué es el mantenimiento adaptativo en software?",
        "response": "El mantenimiento adaptativo implica realizar cambios en el software para que continúe funcionando correctamente en nuevos entornos o condiciones no contempladas originalmente."
    },
    {
        "prompt": "¿Qué es una auditoría de seguridad de software?",
        "response": "Una auditoría de seguridad de software es una revisión exhaustiva de un sistema para identificar vulnerabilidades y asegurar que cumple con las normativas y mejores prácticas de seguridad."
    },

{
        "prompt": "¿Qué es un sprint planning en Scrum?",
        "response": "El sprint planning es una reunión en la que el equipo Scrum planifica qué elementos del backlog del producto se completarán durante el próximo sprint."
    },
    {
        "prompt": "¿Qué es la entrega continua en el desarrollo de software?",
        "response": "La entrega continua es una práctica en la que los cambios de software se prueban y preparan continuamente para su despliegue, asegurando que siempre esté en un estado listo para la producción."
    },
    {
        "prompt": "¿Qué es el control de calidad en software?",
        "response": "El control de calidad en software es el proceso de verificar que el software cumple con los requisitos establecidos y funciona correctamente, asegurando la calidad del producto final."
    },
    {
        "prompt": "¿Qué es la prueba de volumen en software?",
        "response": "La prueba de volumen evalúa cómo el software maneja grandes cantidades de datos, verificando su capacidad para procesar eficientemente grandes volúmenes de información sin degradar su rendimiento."
    },
    {
        "prompt": "¿Qué es el testing automatizado?",
        "response": "El testing automatizado es la práctica de utilizar herramientas y scripts para ejecutar pruebas de software automáticamente, aumentando la eficiencia y reduciendo el tiempo necesario para realizar pruebas repetitivas."
    },
    {
        "prompt": "¿Qué es una API pública en software?",
        "response": "Una API pública es una interfaz de programación de aplicaciones disponible para que desarrolladores externos la utilicen para interactuar con los servicios de una plataforma o aplicación."
    },
    {
        "prompt": "¿Qué es una arquitectura orientada a servicios (SOA)?",
        "response": "La arquitectura orientada a servicios (SOA) es un enfoque en el que los componentes de software proporcionan servicios a otros componentes a través de una red, utilizando protocolos de comunicación estándar."
    },
    {
        "prompt": "¿Qué es el mantenimiento preventivo en software?",
        "response": "El mantenimiento preventivo implica realizar mejoras y correcciones en el software antes de que ocurran problemas, con el fin de evitar futuros errores o fallos."
    },
    {
        "prompt": "¿Qué es una auditoría de código?",
        "response": "Una auditoría de código es un proceso en el que se revisa el código fuente de una aplicación para identificar vulnerabilidades de seguridad, errores de programación o mejoras de rendimiento."
    },
    {
        "prompt": "¿Qué es la integración continua en el desarrollo ágil?",
        "response": "La integración continua es una práctica de desarrollo en la que los desarrolladores integran sus cambios de código en un repositorio común con frecuencia, realizando pruebas automáticas para detectar errores a medida que se realizan cambios."
    },
    {
        "prompt": "¿Qué es el análisis coste-beneficio en proyectos de software?",
        "response": "El análisis coste-beneficio es una técnica que evalúa los costos de un proyecto frente a los beneficios esperados, ayudando a determinar si es viable o rentable continuar con su desarrollo."
    },
    {
        "prompt": "¿Qué es una prueba de regresión?",
        "response": "Una prueba de regresión verifica que los cambios recientes en el software no hayan afectado negativamente las funcionalidades existentes, asegurando que el sistema siga funcionando correctamente."
    },
    {
        "prompt": "¿Qué es una prueba de aceptación de usuario?",
        "response": "La prueba de aceptación de usuario es una fase de pruebas realizada por el cliente o usuario final para verificar que el software cumple con los requisitos acordados y está listo para su implementación."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas en software?",
        "response": "Un entorno de pruebas es una configuración controlada de hardware y software donde se ejecutan pruebas para verificar que el software funcione correctamente antes de su despliegue en producción."
    },
    {
        "prompt": "¿Qué es una prueba de estrés?",
        "response": "Una prueba de estrés evalúa cómo el software maneja condiciones extremas, como una sobrecarga de usuarios o uso de recursos, verificando si sigue funcionando de manera estable bajo presión."
    },
    {
        "prompt": "¿Qué es el diseño orientado a objetos en software?",
        "response": "El diseño orientado a objetos es una metodología de desarrollo en la que el software se organiza en objetos que contienen datos y métodos, lo que promueve la reutilización y la mantenibilidad del código."
    },
    {
        "prompt": "¿Qué es la modularidad en software?",
        "response": "La modularidad es la capacidad de dividir un sistema de software en componentes independientes o módulos que pueden desarrollarse, probarse y mantenerse de manera separada, facilitando su escalabilidad y mantenibilidad."
    },
    {
        "prompt": "¿Qué es la prueba de aceptación en software?",
        "response": "La prueba de aceptación es una prueba realizada por los usuarios finales o clientes para verificar que el software cumple con los requisitos y expectativas, y está listo para ser utilizado en producción."
    },
    {
        "prompt": "¿Qué es la deuda técnica en un proyecto de software?",
        "response": "La deuda técnica es el costo de realizar ajustes futuros debido a decisiones rápidas o soluciones temporales implementadas durante el desarrollo, que requieren correcciones para mejorar la calidad y mantenibilidad del software."
    },
    {
        "prompt": "¿Qué es una auditoría de seguridad de software?",
        "response": "Una auditoría de seguridad de software es una revisión exhaustiva que tiene como objetivo identificar vulnerabilidades de seguridad y evaluar el cumplimiento con normativas y mejores prácticas."
    },
    {
        "prompt": "¿Qué es la entrega continua en DevOps?",
        "response": "La entrega continua es una práctica en la que el software es probado y preparado continuamente para su despliegue en producción, asegurando que los cambios estén listos para ser lanzados en cualquier momento."
    },
    {
        "prompt": "¿Qué es una retrospectiva en Scrum?",
        "response": "Una retrospectiva es una reunión que se realiza al final de cada sprint en Scrum, en la que el equipo reflexiona sobre lo que salió bien, lo que no, y cómo mejorar en el próximo sprint."
    },
    {
        "prompt": "¿Qué es una API RESTful?",
        "response": "Una API RESTful es una interfaz que sigue los principios de REST y permite la comunicación entre diferentes aplicaciones mediante peticiones HTTP, como GET, POST, PUT y DELETE."
    },
    {
        "prompt": "¿Qué es la cobertura de código?",
        "response": "La cobertura de código es una métrica que mide qué porcentaje del código fuente ha sido ejecutado durante las pruebas, ayudando a identificar partes del software que no han sido probadas."
    },
    {
        "prompt": "¿Qué es la accesibilidad en software?",
        "response": "La accesibilidad se refiere a la capacidad del software para ser utilizado por personas con diferentes discapacidades, garantizando una experiencia inclusiva y asegurando que todas las funciones sean accesibles para todos los usuarios."
    },
    {
        "prompt": "¿Qué es la prueba de penetración?",
        "response": "La prueba de penetración (pentesting) es un proceso en el que se simulan ataques reales contra el software para identificar vulnerabilidades de seguridad y corregirlas antes de que puedan ser explotadas."
    },
    {
        "prompt": "¿Qué es una prueba de volumen en software?",
        "response": "Una prueba de volumen evalúa la capacidad del software para manejar grandes cantidades de datos, verificando si el sistema puede procesar volúmenes altos sin degradar su rendimiento."
    },
    {
        "prompt": "¿Qué es una historia de usuario en desarrollo ágil?",
        "response": "Una historia de usuario es una descripción breve y simple de una funcionalidad desde la perspectiva del usuario final, que ayuda a guiar el desarrollo en metodologías ágiles."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en proyectos de software?",
        "response": "El análisis de impacto es una evaluación de cómo los cambios propuestos en el software afectarán a otras partes del sistema, asegurando que las modificaciones no introduzcan nuevos problemas o errores."
    },
    {
        "prompt": "¿Qué es el análisis FODA en proyectos de software?",
        "response": "El análisis FODA es una técnica que evalúa las fortalezas, oportunidades, debilidades y amenazas en un proyecto de software, ayudando a identificar los factores que pueden influir en el éxito o fracaso del proyecto."
    },
    {
        "prompt": "¿Qué es el testing exploratorio?",
        "response": "El testing exploratorio es una técnica de pruebas en la que los testers exploran el software de manera libre, sin seguir un guion predefinido, buscando activamente errores o problemas."
    },
    {
        "prompt": "¿Qué es la arquitectura de microservicios?",
        "response": "La arquitectura de microservicios es un enfoque en el que una aplicación se divide en servicios pequeños e independientes, que pueden desarrollarse, desplegarse y escalarse de manera autónoma."
    },
    {
        "prompt": "¿Qué es el mantenimiento adaptativo en software?",
        "response": "El mantenimiento adaptativo implica hacer cambios en el software para que continúe funcionando correctamente en nuevos entornos o con nuevas configuraciones que no se contemplaron en su desarrollo original."
    },
    {
        "prompt": "¿Qué es la escalabilidad en software?",
        "response": "La escalabilidad es la capacidad del software para manejar un aumento en la carga de trabajo o el número de usuarios sin sacrificar su rendimiento ni estabilidad."
    },
    {
        "prompt": "¿Qué es el análisis de riesgos en software?",
        "response": "El análisis de riesgos es el proceso de identificar, evaluar y priorizar los riesgos que podrían afectar la calidad, el presupuesto o los plazos de un proyecto de software."
    },
    {
        "prompt": "¿Qué es una prueba unitaria?",
        "response": "Una prueba unitaria verifica el correcto funcionamiento de una pequeña parte del software, como una función o un método, de manera aislada del resto del sistema."
    },
    {
        "prompt": "¿Qué es una prueba de caja negra en software?",
        "response": "Una prueba de caja negra es una técnica de pruebas en la que los evaluadores no tienen acceso al código fuente y evalúan el software únicamente desde la perspectiva de las entradas y salidas."
    },
    {
        "prompt": "¿Qué es la portabilidad en software?",
        "response": "La portabilidad es la capacidad del software para ser trasladado de un entorno a otro, con pocos o ningún cambio en su código, asegurando que funcione correctamente en diferentes plataformas."
    },
    {
        "prompt": "¿Qué es el análisis dinámico en pruebas de software?",
        "response": "El análisis dinámico es una técnica que evalúa el software mientras se ejecuta, identificando problemas de rendimiento, seguridad o funcionalidad durante el tiempo de ejecución."
    },
    {
        "prompt": "¿Qué es el análisis estático en software?",
        "response": "El análisis estático es una técnica que revisa el código fuente sin ejecutarlo para identificar errores, vulnerabilidades o problemas de estilo en el código."
    },
    {
        "prompt": "¿Qué es un sprint en Scrum?",
        "response": "Un sprint es un ciclo de trabajo en metodologías ágiles, como Scrum, donde el equipo se enfoca en completar un conjunto de tareas o funcionalidades en un período de tiempo específico."
    },
    {
        "prompt": "¿Qué es el control de versiones en software?",
        "response": "El control de versiones es un sistema que permite a los desarrolladores gestionar y rastrear los cambios en el código fuente, facilitando la colaboración y permitiendo revertir a versiones anteriores si es necesario."
    },
    {
        "prompt": "¿Qué es el diseño centrado en tareas en software?",
        "response": "El diseño centrado en tareas es un enfoque en el que la interfaz y las funcionalidades del software están organizadas en torno a las tareas específicas que el usuario necesita realizar."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo se gestiona?",
        "response": "La deuda técnica es el costo de decisiones rápidas o subóptimas que requieren corrección futura. Se gestiona identificando las áreas afectadas y priorizando la refactorización o mejora del código."
    },
    {
        "prompt": "¿Qué es el diseño de interfaz de usuario (UI)?",
        "response": "El diseño de interfaz de usuario (UI) es el proceso de crear interfaces visuales en software que sean intuitivas y agradables para los usuarios, enfocándose en cómo interactúan con el sistema."
    },
    {
        "prompt": "¿Qué es un entorno de producción en software?",
        "response": "Un entorno de producción es el entorno donde el software está disponible para su uso por los usuarios finales, y se espera que funcione de manera estable y sin interrupciones."
    },
    {
        "prompt": "¿Qué es la resiliencia en software?",
        "response": "La resiliencia es la capacidad del software para recuperarse rápidamente y continuar funcionando correctamente después de experimentar fallos o problemas inesperados."
    },
    {
        "prompt": "¿Qué es la interoperabilidad en software?",
        "response": "La interoperabilidad es la capacidad del software para interactuar y funcionar correctamente con otros sistemas o aplicaciones, permitiendo el intercambio de información y el uso conjunto de datos."
    },
    {
        "prompt": "¿Qué es el diseño basado en componentes en software?",
        "response": "El diseño basado en componentes es un enfoque en el que el software se organiza en bloques modulares e independientes, lo que facilita la reutilización y el mantenimiento del código."
    },
    {
        "prompt": "¿Qué es la validación cruzada en pruebas de software?",
        "response": "La validación cruzada es una técnica que divide los datos en subconjuntos para entrenar y validar el modelo de software, asegurando que funcione correctamente en diferentes escenarios."
    },
    {
        "prompt": "¿Qué es el despliegue continuo en DevOps?",
        "response": "El despliegue continuo es una práctica de DevOps en la que los cambios de código se despliegan automáticamente en producción después de pasar por pruebas, garantizando actualizaciones rápidas y frecuentes."
    },
    {
        "prompt": "¿Qué es un caso de prueba en software?",
        "response": "Un caso de prueba es un conjunto de entradas, condiciones y resultados esperados que se utilizan para verificar si una función específica del software funciona correctamente."
    },
    {
        "prompt": "¿Qué es la usabilidad en software?",
        "response": "La usabilidad es la medida en que un software puede ser utilizado por usuarios específicos para lograr sus objetivos con efectividad, eficiencia y satisfacción en un contexto de uso determinado."
    },
    {
        "prompt": "¿Qué es la modularidad en el diseño de software?",
        "response": "La modularidad es la capacidad de dividir el software en componentes o módulos independientes, facilitando su desarrollo, pruebas, mantenimiento y escalabilidad."
    },
    {
        "prompt": "¿Qué es un análisis coste-beneficio en software?",
        "response": "Un análisis coste-beneficio es una técnica que evalúa los costos y beneficios esperados de un proyecto de software, ayudando a determinar su viabilidad o rentabilidad."
    },
    {
        "prompt": "¿Qué es una prueba de caja blanca?",
        "response": "Una prueba de caja blanca es un enfoque de pruebas en el que los testers tienen acceso al código fuente y verifican la lógica interna, los flujos de control y las estructuras del software."
    },
    {
        "prompt": "¿Qué es una prueba alfa en software?",
        "response": "Una prueba alfa es una evaluación inicial realizada internamente por el equipo de desarrollo para detectar errores o problemas antes de lanzar el software a un grupo limitado de usuarios externos para la prueba beta."
    },
    {
        "prompt": "¿Qué es la deuda técnica en proyectos de software?",
        "response": "La deuda técnica es el trabajo adicional generado por decisiones rápidas o subóptimas que se toman para acelerar el desarrollo, pero que deben corregirse más tarde para mejorar la calidad y mantenibilidad del software."
    },
    {
        "prompt": "¿Qué es la prueba de integración continua?",
        "response": "La prueba de integración continua es una práctica en la que los cambios de código se prueban automáticamente de manera constante, asegurando que el software se mantenga estable a medida que se realizan modificaciones."
    },
    {
        "prompt": "¿Qué es un microservicio en arquitectura de software?",
        "response": "Un microservicio es un componente independiente dentro de un sistema mayor, que realiza una función específica y puede desarrollarse, desplegarse y escalarse de manera autónoma."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en cambios de software?",
        "response": "El análisis de impacto es una evaluación que se realiza antes de hacer cambios en el software, para determinar cómo afectarán estos cambios a otras partes del sistema."
    },
    {
        "prompt": "¿Qué es una historia de usuario en Scrum?",
        "response": "Una historia de usuario es una breve descripción de una funcionalidad que el software debe proporcionar, redactada desde la perspectiva del usuario final, generalmente en el formato 'Como usuario, quiero... para...'."
    },
    {
        "prompt": "¿Qué es la entrega continua en software?",
        "response": "La entrega continua es una práctica de desarrollo en la que los cambios en el software se prueban y preparan de manera continua para su despliegue en producción, asegurando que siempre esté listo para ser lanzado."
    },
    {
        "prompt": "¿Qué es la mantenibilidad en software?",
        "response": "La mantenibilidad es la capacidad del software para ser modificado, corregido o mejorado de manera eficiente, lo que facilita su adaptación a nuevos requisitos o entornos operativos."
    },
    {
        "prompt": "¿Qué es el testing automatizado en software?",
        "response": "El testing automatizado es la práctica de utilizar herramientas y scripts para ejecutar pruebas de software de manera automática, mejorando la eficiencia y reduciendo el esfuerzo manual."
    },
    {
        "prompt": "¿Qué es una auditoría de calidad de software?",
        "response": "Una auditoría de calidad de software es un proceso formal para evaluar si el software y sus procesos de desarrollo cumplen con los estándares y requisitos establecidos para asegurar su calidad."
    },
    {
        "prompt": "¿Qué es una API REST?",
        "response": "Una API REST es una interfaz que sigue los principios de REST (Representational State Transfer) y permite que diferentes aplicaciones se comuniquen entre sí utilizando peticiones HTTP."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo impacta la calidad del software?",
        "response": "La deuda técnica son decisiones rápidas o subóptimas tomadas durante el desarrollo que aumentan los costos de mantenimiento y reducen la calidad del software. Afecta la mantenibilidad y escalabilidad a largo plazo."
    },
    {
        "prompt": "¿Qué es la prueba de sistema en software?",
        "response": "La prueba de sistema es una evaluación que verifica que todos los componentes y módulos del software funcionen correctamente juntos como un sistema completo."
    },
    {
        "prompt": "¿Qué es una auditoría de código en software?",
        "response": "Una auditoría de código es una revisión exhaustiva del código fuente para identificar errores, vulnerabilidades o mejoras de rendimiento, asegurando que cumpla con los estándares de calidad establecidos."
    },
    {
        "prompt": "¿Qué es la escalabilidad vertical en software?",
        "response": "La escalabilidad vertical es la capacidad del software para manejar un mayor volumen de trabajo mediante el aumento de los recursos de hardware de un servidor, como agregar más memoria o CPU."
    },
    {
        "prompt": "¿Qué es la refactorización en software?",
        "response": "La refactorización es el proceso de mejorar la estructura interna del código sin cambiar su comportamiento externo, con el objetivo de hacerlo más legible, mantenible y eficiente."
    },
    {
        "prompt": "¿Qué es una prueba de carga en software?",
        "response": "Una prueba de carga evalúa cómo el software maneja una cantidad específica de usuarios o transacciones simultáneas, midiendo su rendimiento bajo condiciones normales y de alta carga."
    },
    {
        "prompt": "¿Qué es el mantenimiento correctivo en software?",
        "response": "El mantenimiento correctivo es el proceso de corregir errores o fallos en el software después de su lanzamiento, asegurando que continúe funcionando según lo previsto."
    },
    {
        "prompt": "¿Qué es la escalabilidad horizontal?",
        "response": "La escalabilidad horizontal es la capacidad del software para manejar una mayor carga de trabajo agregando más servidores o nodos distribuidos, en lugar de mejorar la capacidad de un solo servidor."
    },
    {
        "prompt": "¿Qué es una prueba de caja negra?",
        "response": "Una prueba de caja negra es un enfoque de pruebas donde los evaluadores no tienen acceso al código fuente y se centran en verificar la funcionalidad del software basándose en las entradas y salidas."
    },
    {
        "prompt": "¿Qué es el mantenimiento evolutivo en software?",
        "response": "El mantenimiento evolutivo implica realizar mejoras y adaptaciones en el software para cumplir con nuevos requisitos o para mejorar su rendimiento a medida que cambian los entornos operativos."
    },
    {
        "prompt": "¿Qué es la cobertura de pruebas en software?",
        "response": "La cobertura de pruebas es una métrica que mide qué porcentaje del código fuente ha sido ejecutado durante las pruebas, ayudando a identificar áreas no probadas que podrían contener errores."
    },
    {
        "prompt": "¿Qué es el análisis dinámico en software?",
        "response": "El análisis dinámico es el proceso de ejecutar el software para identificar problemas de rendimiento, seguridad o funcionalidad durante el tiempo de ejecución, evaluando cómo se comporta en un entorno real."
    },
    {
        "prompt": "¿Qué es el diseño centrado en el usuario?",
        "response": "El diseño centrado en el usuario es un enfoque de desarrollo que pone a los usuarios en el centro del proceso de diseño, asegurando que el software sea intuitivo, fácil de usar y cumpla con sus necesidades."
    },
    {
        "prompt": "¿Qué es un entorno de desarrollo en software?",
        "response": "Un entorno de desarrollo es un entorno controlado donde los desarrolladores crean y prueban su código antes de integrarlo en un entorno de producción."
    },
    {
        "prompt": "¿Qué es la validación en software?",
        "response": "La validación es el proceso de verificar si el software cumple con los requisitos del usuario final y si está listo para ser implementado en el entorno de producción."
    },
    {
        "prompt": "¿Qué es una prueba de caja blanca?",
        "response": "Una prueba de caja blanca es una técnica de pruebas donde los evaluadores tienen acceso al código fuente y se centran en verificar las estructuras internas y flujos lógicos del software."
    },
    {
        "prompt": "¿Qué es la entrega continua en software?",
        "response": "La entrega continua es una práctica en la que los cambios en el software se prueban y preparan continuamente para su despliegue, asegurando que siempre esté listo para ser lanzado a producción."
    },
    {
        "prompt": "¿Qué es una historia de usuario en Scrum?",
        "response": "Una historia de usuario es una descripción breve de una funcionalidad que el software debe proporcionar desde la perspectiva del usuario final, generalmente estructurada en el formato 'Como usuario, quiero... para...'."
    },
    {
        "prompt": "¿Qué es un pipeline CI/CD en software?",
        "response": "Un pipeline CI/CD es un conjunto de procesos automatizados que permiten la integración continua (CI) y la entrega continua (CD) del software, asegurando que los cambios se prueben y desplieguen de manera eficiente."
    },

{
        "prompt": "¿Qué es un ciclo de vida de desarrollo de software (SDLC)?",
        "response": "El ciclo de vida de desarrollo de software (SDLC) es un proceso estructurado que define las fases por las que pasa el software, desde la planificación hasta el despliegue y mantenimiento."
    },
    {
        "prompt": "¿Qué es el diseño ágil en desarrollo de software?",
        "response": "El diseño ágil es una metodología de desarrollo que promueve la adaptabilidad y la colaboración entre equipos para responder rápidamente a cambios y mejorar continuamente el software."
    },
    {
        "prompt": "¿Qué es un repositorio de código?",
        "response": "Un repositorio de código es un almacenamiento centralizado donde los desarrolladores guardan y gestionan el código fuente de un proyecto de software, generalmente utilizando sistemas de control de versiones."
    },
    {
        "prompt": "¿Qué es una integración en software?",
        "response": "Una integración en software es el proceso de combinar componentes o sistemas independientes para que funcionen juntos como un sistema cohesivo."
    },
    {
        "prompt": "¿Qué es la automatización de despliegue?",
        "response": "La automatización de despliegue es el uso de herramientas y scripts para automatizar el proceso de desplegar nuevas versiones del software, asegurando que se haga de manera consistente y sin errores."
    },
    {
        "prompt": "¿Qué es un sistema de control de versiones distribuido (DVCS)?",
        "response": "Un DVCS es un sistema de control de versiones en el que cada desarrollador tiene una copia completa del historial del proyecto, permitiendo trabajar de manera independiente sin depender de un servidor central."
    },
    {
        "prompt": "¿Qué es una prueba de escalabilidad?",
        "response": "Una prueba de escalabilidad evalúa cómo el software maneja un aumento progresivo de carga, verificando si puede expandirse eficientemente sin pérdida significativa de rendimiento."
    },
    {
        "prompt": "¿Qué es la resiliencia en una arquitectura de software?",
        "response": "La resiliencia en una arquitectura de software es la capacidad del sistema para resistir y recuperarse de fallos o interrupciones sin que afecte significativamente a los usuarios."
    },
    {
        "prompt": "¿Qué es una herramienta de integración continua (CI)?",
        "response": "Una herramienta de integración continua (CI) automatiza el proceso de construir, probar y verificar el código cada vez que se integra una nueva funcionalidad o corrección, asegurando que el software se mantenga estable."
    },
    {
        "prompt": "¿Qué es la refactorización de código?",
        "response": "La refactorización de código es el proceso de reestructurar y mejorar el código existente sin cambiar su comportamiento externo, para mejorar su legibilidad, mantenibilidad y rendimiento."
    },
    {
        "prompt": "¿Qué es un hotfix en desarrollo de software?",
        "response": "Un hotfix es una actualización rápida y urgente que se aplica a un software para corregir un error crítico o una vulnerabilidad de seguridad que no puede esperar hasta la próxima versión oficial."
    },
    {
        "prompt": "¿Qué es el análisis de código?",
        "response": "El análisis de código es el proceso de revisar el código fuente para identificar posibles errores, vulnerabilidades o áreas de mejora en cuanto a eficiencia o legibilidad."
    },
    {
        "prompt": "¿Qué es la virtualización en desarrollo de software?",
        "response": "La virtualización es una tecnología que permite crear versiones simuladas o virtuales de recursos físicos, como servidores, sistemas operativos o redes, facilitando el desarrollo y las pruebas de software."
    },
    {
        "prompt": "¿Qué es una arquitectura de n-capas?",
        "response": "Una arquitectura de n-capas es un diseño de software que separa la lógica del sistema en múltiples capas, como presentación, lógica de negocio y acceso a datos, para mejorar la modularidad y mantenibilidad."
    },
    {
        "prompt": "¿Qué es un caso de uso?",
        "response": "Un caso de uso es una descripción de cómo un usuario interactúa con el software para alcanzar un objetivo específico, definiendo los pasos y los resultados esperados en la interacción."
    },
    {
        "prompt": "¿Qué es un rollback en software?",
        "response": "Un rollback es el proceso de revertir el software a una versión anterior en caso de que una nueva versión o actualización provoque errores o fallos."
    },
    {
        "prompt": "¿Qué es una prueba de integración continua (CI)?",
        "response": "Una prueba de integración continua es una evaluación automatizada que verifica que los cambios en el código funcionen correctamente cuando se integran con el código existente."
    },
    {
        "prompt": "¿Qué es un mock en pruebas de software?",
        "response": "Un mock es un objeto simulado que se utiliza en pruebas de software para imitar el comportamiento de dependencias externas, permitiendo a los testers aislar la funcionalidad que están probando."
    },
    {
        "prompt": "¿Qué es un entorno sandbox?",
        "response": "Un entorno sandbox es un entorno aislado en el que se pueden ejecutar programas o probar cambios en el software sin afectar al entorno de producción ni a otros sistemas."
    },
    {
        "prompt": "¿Qué es la automatización de pruebas funcionales?",
        "response": "La automatización de pruebas funcionales es el uso de herramientas y scripts para verificar automáticamente si las funciones clave del software cumplen con los requisitos establecidos."
    },
    {
        "prompt": "¿Qué es una prueba de regresión automatizada?",
        "response": "Una prueba de regresión automatizada utiliza herramientas para ejecutar pruebas repetitivas después de cada cambio en el software, asegurando que las nuevas actualizaciones no rompan las funcionalidades existentes."
    },
    {
        "prompt": "¿Qué es el versionado semántico?",
        "response": "El versionado semántico es un esquema de numeración de versiones que sigue el formato MAJOR.MINOR.PATCH para comunicar el tipo de cambios realizados en el software."
    },
    {
        "prompt": "¿Qué es un bug en software?",
        "response": "Un bug es un error o defecto en el software que provoca que el sistema se comporte de manera incorrecta o inesperada, afectando su funcionamiento."
    },
    {
        "prompt": "¿Qué es una arquitectura monolítica?",
        "response": "Una arquitectura monolítica es un enfoque de diseño en el que todas las funcionalidades y componentes de una aplicación están integrados en un único paquete o código base."
    },
    {
        "prompt": "¿Qué es la documentación técnica?",
        "response": "La documentación técnica es un conjunto de documentos que detallan el diseño, la arquitectura, las especificaciones y las instrucciones del software, facilitando su desarrollo, uso y mantenimiento."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas automatizadas?",
        "response": "Un entorno de pruebas automatizadas es un entorno configurado para ejecutar pruebas de software de manera automática, utilizando scripts y herramientas que verifican el correcto funcionamiento del sistema."
    },
    {
        "prompt": "¿Qué es un patrón de diseño en software?",
        "response": "Un patrón de diseño es una solución reutilizable y probada para problemas comunes en el diseño de software, proporcionando una guía para estructurar el código de manera eficiente."
    },
    {
        "prompt": "¿Qué es el diseño de interfaces gráficas de usuario (GUI)?",
        "response": "El diseño de interfaces gráficas de usuario (GUI) es el proceso de crear la parte visual del software con la que interactúan los usuarios, incluyendo elementos como botones, menús y ventanas."
    },
    {
        "prompt": "¿Qué es la virtualización de redes?",
        "response": "La virtualización de redes es el proceso de crear múltiples redes virtuales dentro de una red física, lo que permite que varios entornos de desarrollo y pruebas utilicen los mismos recursos de red sin interferencias."
    },
    {
        "prompt": "¿Qué es una retrospectiva ágil?",
        "response": "Una retrospectiva ágil es una reunión realizada al final de cada sprint en la que el equipo reflexiona sobre el proceso de trabajo y sugiere mejoras para el siguiente sprint."
    },
    {
        "prompt": "¿Qué es una métrica de calidad de software?",
        "response": "Una métrica de calidad de software es una medida cuantitativa que se utiliza para evaluar diversos aspectos de la calidad del software, como su rendimiento, mantenibilidad y usabilidad."
    },
    {
        "prompt": "¿Qué es una prueba de compatibilidad?",
        "response": "Una prueba de compatibilidad verifica que el software funcione correctamente en diferentes entornos, como sistemas operativos, navegadores o dispositivos con diversas configuraciones."
    },
    {
        "prompt": "¿Qué es una prueba de aceptación del cliente?",
        "response": "Una prueba de aceptación del cliente es una fase en la que el cliente o usuario final valida si el software cumple con los requisitos acordados y está listo para su uso en producción."
    },
    {
        "prompt": "¿Qué es el diseño basado en pruebas (TDD)?",
        "response": "El diseño basado en pruebas (TDD) es una metodología de desarrollo en la que las pruebas se escriben antes del código, lo que garantiza que el software cumpla con los requisitos desde el principio."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en proyectos de software?",
        "response": "El análisis de impacto es un proceso que evalúa las consecuencias de realizar cambios en el software, asegurando que las modificaciones no introduzcan errores en otras partes del sistema."
    },
    {
        "prompt": "¿Qué es un diagrama de flujo de datos (DFD)?",
        "response": "Un diagrama de flujo de datos (DFD) es una representación gráfica que muestra cómo los datos fluyen a través de un sistema de software, describiendo las entradas, procesos y salidas del sistema."
    },
    {
        "prompt": "¿Qué es el despliegue continuo en DevOps?",
        "response": "El despliegue continuo es una práctica de DevOps que automatiza el proceso de despliegue, permitiendo que los cambios de código pasen directamente a producción tras ser probados y validados."
    },
    {
        "prompt": "¿Qué es una prueba beta en software?",
        "response": "Una prueba beta es una fase en la que una versión preliminar del software se distribuye a un grupo limitado de usuarios externos para recibir retroalimentación antes del lanzamiento oficial."
    },
    {
        "prompt": "¿Qué es el diseño modular?",
        "response": "El diseño modular es un enfoque de desarrollo en el que el software se divide en componentes independientes, facilitando la escalabilidad, mantenibilidad y actualización del sistema."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo afecta al desarrollo de software?",
        "response": "La deuda técnica es el costo de corregir decisiones rápidas o subóptimas en el desarrollo de software, lo que puede aumentar los esfuerzos de mantenimiento y reducir la calidad a largo plazo."
    },
    {
        "prompt": "¿Qué es un entorno de desarrollo integrado (IDE)?",
        "response": "Un entorno de desarrollo integrado (IDE) es una aplicación que proporciona herramientas de desarrollo de software, como un editor de código, un compilador y un depurador, en un solo entorno."
    },
    {
        "prompt": "¿Qué es un análisis FMEA en software?",
        "response": "El análisis FMEA (Failure Mode and Effects Analysis) es una técnica utilizada para identificar y priorizar posibles fallos en un sistema de software, evaluando su impacto y las acciones correctivas necesarias."
    },
    {
        "prompt": "¿Qué es una prueba de estrés en software?",
        "response": "Una prueba de estrés evalúa cómo el software maneja condiciones extremas, como una sobrecarga de usuarios o el uso máximo de recursos, verificando si sigue funcionando de manera estable."
    },
    {
        "prompt": "¿Qué es la usabilidad en el desarrollo de software?",
        "response": "La usabilidad es la medida en que el software puede ser utilizado por los usuarios para alcanzar sus objetivos de manera eficaz, eficiente y satisfactoria, evaluando factores como la facilidad de uso y la accesibilidad."
    },
    {
        "prompt": "¿Qué es la integración de software?",
        "response": "La integración de software es el proceso de combinar componentes o sistemas de software separados en un único sistema cohesivo, asegurando que funcionen juntos correctamente."
    },
    {
        "prompt": "¿Qué es un parche de seguridad en software?",
        "response": "Un parche de seguridad es una actualización lanzada para corregir vulnerabilidades que podrían ser explotadas por atacantes, mejorando la seguridad del software."
    },
    {
        "prompt": "¿Qué es una prueba de rendimiento?",
        "response": "Una prueba de rendimiento evalúa cómo el software maneja una carga de trabajo específica, midiendo factores como el tiempo de respuesta, la estabilidad y el uso de recursos bajo diferentes condiciones."
    },
    {
        "prompt": "¿Qué es un entorno de integración continua (CI)?",
        "response": "Un entorno de integración continua (CI) es un sistema automatizado que construye, prueba e integra el código frecuentemente para detectar errores lo antes posible durante el desarrollo."
    },
    {
        "prompt": "¿Qué es la automatización de pruebas de regresión?",
        "response": "La automatización de pruebas de regresión utiliza herramientas para ejecutar pruebas repetitivas cada vez que se realizan cambios en el software, garantizando que las actualizaciones no introduzcan errores en funcionalidades existentes."
    },
    {
        "prompt": "¿Qué es el diseño responsivo en software?",
        "response": "El diseño responsivo es un enfoque de diseño que permite que el software se ajuste y funcione correctamente en una amplia variedad de dispositivos, tamaños de pantalla y orientaciones."
    },
    {
        "prompt": "¿Qué es un sistema de control de versiones?",
        "response": "Un sistema de control de versiones es una herramienta que permite a los desarrolladores gestionar y rastrear los cambios realizados en el código fuente de un proyecto, facilitando la colaboración y el control de versiones."
    },
    {
        "prompt": "¿Qué es una arquitectura orientada a servicios (SOA)?",
        "response": "La arquitectura orientada a servicios (SOA) es un enfoque de diseño en el que el software está compuesto por servicios independientes que se comunican entre sí para realizar funciones específicas."
    },
    {
        "prompt": "¿Qué es la validación en el ciclo de vida del software?",
        "response": "La validación es el proceso de asegurarse de que el software cumple con los requisitos del usuario final y está listo para ser implementado en un entorno de producción."
    },
    {
        "prompt": "¿Qué es un proceso de despliegue automatizado?",
        "response": "Un proceso de despliegue automatizado utiliza scripts y herramientas para automatizar el proceso de trasladar nuevas versiones del software a producción, asegurando un despliegue más rápido y sin errores."
    },
    {
        "prompt": "¿Qué es la deuda técnica en un proyecto ágil?",
        "response": "La deuda técnica en un proyecto ágil es el costo asociado a decisiones rápidas o subóptimas que se toman para acelerar el desarrollo, pero que deben corregirse más adelante para evitar problemas de mantenibilidad."
    },
    {
        "prompt": "¿Qué es una API de terceros?",
        "response": "Una API de terceros es una interfaz proporcionada por un proveedor externo que permite que una aplicación interactúe con otro sistema o servicio sin necesidad de desarrollarlo desde cero."
    },
    {
        "prompt": "¿Qué es la mantenibilidad en el desarrollo de software?",
        "response": "La mantenibilidad es la capacidad del software para ser modificado, corregido o mejorado de manera eficiente, permitiendo que se adapte a nuevos requisitos o entornos operativos."
    },
    {
        "prompt": "¿Qué es un sistema distribuido?",
        "response": "Un sistema distribuido es una colección de computadoras independientes que trabajan juntas para realizar tareas, pero que aparecen como un sistema único para los usuarios."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo puede gestionarse?",
        "response": "La deuda técnica es el trabajo adicional generado por decisiones rápidas o subóptimas que necesitan corrección en el futuro. Se gestiona identificándola, priorizándola y pagando dicha deuda mediante refactorización o mejoras continuas."
    },
    {
        "prompt": "¿Qué es un caso de uso en el desarrollo de software?",
        "response": "Un caso de uso es una descripción de cómo un usuario interactúa con el software para lograr un objetivo específico, proporcionando un marco para definir los requisitos funcionales."
    },
    {
        "prompt": "¿Qué es el análisis estático en pruebas de software?",
        "response": "El análisis estático es una técnica que revisa el código fuente sin ejecutarlo, identificando errores, vulnerabilidades o problemas de estilo en el código."
    },
    {
        "prompt": "¿Qué es el análisis dinámico en software?",
        "response": "El análisis dinámico es el proceso de ejecutar el software para identificar problemas de rendimiento, seguridad o funcionalidad durante su tiempo de ejecución."
    },
    {
        "prompt": "¿Qué es el diseño adaptativo en desarrollo de software?",
        "response": "El diseño adaptativo es un enfoque de diseño que permite que el software se ajuste automáticamente a diferentes dispositivos, resoluciones de pantalla y contextos de uso."
    },
    {
        "prompt": "¿Qué es la modularidad en software?",
        "response": "La modularidad es la capacidad de dividir el software en componentes independientes que pueden desarrollarse, probarse y mantenerse por separado, facilitando la escalabilidad y el mantenimiento del sistema."
    },
    {
        "prompt": "¿Qué es la entrega continua en desarrollo de software?",
        "response": "La entrega continua es una práctica en la que el software se prueba y prepara continuamente para su despliegue en producción, asegurando que siempre esté listo para ser lanzado."
    },
    {
        "prompt": "¿Qué es una API privada?",
        "response": "Una API privada es una interfaz de programación de aplicaciones que solo está disponible para los desarrolladores internos de una organización, permitiendo que las aplicaciones internas interactúen entre sí."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo afecta la calidad del software?",
        "response": "La deuda técnica es el costo acumulado de implementar soluciones rápidas o subóptimas que requieren corrección en el futuro. Afecta la calidad del software al dificultar su mantenimiento y evolución a largo plazo."
    },
    {
        "prompt": "¿Qué es el diseño basado en componentes?",
        "response": "El diseño basado en componentes es un enfoque de desarrollo que organiza el software en componentes modulares que pueden reutilizarse en diferentes partes del sistema, mejorando la mantenibilidad y la escalabilidad."
    },
    {
        "prompt": "¿Qué es una arquitectura de microservicios?",
        "response": "Una arquitectura de microservicios es un enfoque de diseño en el que una aplicación se divide en pequeños servicios independientes, que pueden desarrollarse, desplegarse y escalarse de manera autónoma."
    },
    {
        "prompt": "¿Qué es un hotfix en software?",
        "response": "Un hotfix es una actualización rápida que se aplica al software para corregir un error crítico o vulnerabilidad de seguridad que no puede esperar hasta la siguiente versión."
    },
    {
        "prompt": "¿Qué es el mantenimiento correctivo en software?",
        "response": "El mantenimiento correctivo es el proceso de corregir errores o fallos en el software después de su lanzamiento, asegurando que continúe funcionando según lo previsto."
    },
    {
        "prompt": "¿Qué es el análisis coste-beneficio en software?",
        "response": "El análisis coste-beneficio es una técnica que evalúa los costos de desarrollar y mantener el software frente a los beneficios que se espera obtener, ayudando a determinar la viabilidad del proyecto."
    },
    {
        "prompt": "¿Qué es un pipeline CI/CD en desarrollo de software?",
        "response": "Un pipeline CI/CD es un conjunto de procesos automatizados que permiten la integración continua (CI) y la entrega continua (CD) de software, asegurando que los cambios se prueben y desplieguen eficientemente."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas en software?",
        "response": "Un entorno de pruebas es un espacio controlado donde los testers ejecutan pruebas de software para verificar su correcto funcionamiento antes de que sea movido a producción."
    },
    {
        "prompt": "¿Qué es la prueba de aceptación en software?",
        "response": "La prueba de aceptación es una fase en la que los usuarios finales prueban el software para asegurarse de que cumple con los requisitos y expectativas antes de su despliegue."
    },
    {
        "prompt": "¿Qué es el testing automatizado en desarrollo de software?",
        "response": "El testing automatizado es el uso de herramientas y scripts para ejecutar pruebas de software de manera repetitiva y automática, lo que mejora la eficiencia y reduce el margen de error humano."
    },
    {
        "prompt": "¿Qué es un backlog en Scrum?",
        "response": "Un backlog es una lista priorizada de tareas, características y mejoras que el equipo de desarrollo debe abordar durante el ciclo de desarrollo en metodologías ágiles como Scrum."
    },
    {
        "prompt": "¿Qué es la accesibilidad en software?",
        "response": "La accesibilidad en software se refiere a la capacidad del sistema para ser utilizado por personas con diferentes discapacidades, asegurando que todas las funciones sean accesibles para todos los usuarios."
    },
    {
        "prompt": "¿Qué es el análisis de riesgos en software?",
        "response": "El análisis de riesgos es el proceso de identificar, evaluar y mitigar los riesgos que podrían afectar la calidad, los plazos o el presupuesto en un proyecto de software."
    },
    {
        "prompt": "¿Qué es el diseño centrado en el usuario?",
        "response": "El diseño centrado en el usuario es un enfoque de desarrollo que se enfoca en las necesidades, preferencias y limitaciones de los usuarios finales para asegurar una experiencia de usuario efectiva y satisfactoria."
    },
    {
        "prompt": "¿Qué es el mantenimiento adaptativo en software?",
        "response": "El mantenimiento adaptativo implica realizar cambios en el software para que continúe funcionando correctamente en nuevos entornos o condiciones no contempladas en su desarrollo original."
    },
    {
        "prompt": "¿Qué es la escalabilidad en software?",
        "response": "La escalabilidad es la capacidad del software para manejar un aumento en la carga de trabajo o en el número de usuarios sin sacrificar el rendimiento o la estabilidad del sistema."
    },
    {
        "prompt": "¿Qué es la deuda técnica en proyectos ágiles?",
        "response": "La deuda técnica en proyectos ágiles es el costo adicional que se genera cuando se priorizan soluciones rápidas o temporales para cumplir con plazos cortos, lo que aumenta la necesidad de correcciones en el futuro."
    },

{
        "prompt": "¿Qué es un diagrama de casos de uso en software?",
        "response": "Un diagrama de casos de uso es una representación gráfica que muestra las interacciones entre los usuarios (actores) y las funcionalidades del sistema, describiendo los casos de uso."
    },
    {
        "prompt": "¿Qué es una interfaz de programación de aplicaciones (API)?",
        "response": "Una API es un conjunto de reglas que permite que diferentes aplicaciones se comuniquen entre sí y compartan datos y funcionalidades, facilitando la integración de sistemas."
    },
    {
        "prompt": "¿Qué es la integridad referencial en bases de datos?",
        "response": "La integridad referencial es un principio que asegura que las relaciones entre tablas en una base de datos se mantengan consistentes, evitando que se introduzcan datos inválidos o huérfanos."
    },
    {
        "prompt": "¿Qué es una auditoría de software?",
        "response": "Una auditoría de software es una revisión formal para evaluar si el software cumple con los estándares de calidad, las normativas y los requisitos establecidos en el proyecto."
    },
    {
        "prompt": "¿Qué es un entorno de preproducción?",
        "response": "Un entorno de preproducción es un entorno que simula el entorno de producción y se utiliza para realizar pruebas finales antes de implementar el software en producción."
    },
    {
        "prompt": "¿Qué es un backlog de producto en Scrum?",
        "response": "Un backlog de producto es una lista priorizada de todas las características, tareas y mejoras que se deben realizar en un producto, gestionada por el Product Owner en Scrum."
    },
    {
        "prompt": "¿Qué es un repositorio en Git?",
        "response": "Un repositorio en Git es un almacenamiento de archivos y directorios que contiene el historial completo de los cambios realizados en un proyecto, facilitando la colaboración entre desarrolladores."
    },
    {
        "prompt": "¿Qué es una integración continua?",
        "response": "La integración continua es una práctica de desarrollo en la que los cambios en el código se integran frecuentemente en un repositorio compartido y se prueban automáticamente para detectar errores lo antes posible."
    },
    {
        "prompt": "¿Qué es una prueba A/B en desarrollo de software?",
        "response": "Una prueba A/B es un experimento donde se presentan dos versiones diferentes de un software o una funcionalidad a los usuarios para medir cuál tiene un mejor rendimiento o aceptación."
    },
    {
        "prompt": "¿Qué es un diagrama de secuencia en UML?",
        "response": "Un diagrama de secuencia en UML es una representación gráfica que muestra cómo los objetos de un sistema interactúan entre sí en un orden específico para realizar una función."
    },
    {
        "prompt": "¿Qué es una maqueta en diseño de software?",
        "response": "Una maqueta es una representación visual de cómo se verá una interfaz de usuario en una aplicación, que se utiliza para presentar la disposición, los elementos gráficos y la navegación."
    },
    {
        "prompt": "¿Qué es el análisis de requisitos?",
        "response": "El análisis de requisitos es el proceso de identificar, documentar y validar las necesidades y expectativas del cliente o usuario final, que guiarán el desarrollo del software."
    },
    {
        "prompt": "¿Qué es una API SOAP?",
        "response": "Una API SOAP es una interfaz que utiliza el protocolo SOAP (Simple Object Access Protocol) para la comunicación entre aplicaciones, enviando mensajes XML a través de HTTP o SMTP."
    },
    {
        "prompt": "¿Qué es la trazabilidad en el desarrollo de software?",
        "response": "La trazabilidad en el desarrollo de software es la capacidad de rastrear y vincular los requisitos desde su origen hasta su implementación, pruebas y despliegue, asegurando que todos los requisitos se cumplan."
    },
    {
        "prompt": "¿Qué es una historia técnica en Scrum?",
        "response": "Una historia técnica es una tarea o actividad dentro de un sprint en Scrum que no está directamente relacionada con las funcionalidades del usuario, sino que se enfoca en el mantenimiento, infraestructura o mejoras técnicas."
    },
    {
        "prompt": "¿Qué es el mantenimiento preventivo en software?",
        "response": "El mantenimiento preventivo en software consiste en realizar mejoras y correcciones antes de que ocurran problemas o fallos, con el fin de garantizar un rendimiento continuo y evitar errores futuros."
    },
    {
        "prompt": "¿Qué es el análisis de riesgos en software?",
        "response": "El análisis de riesgos en software es el proceso de identificar, evaluar y mitigar los posibles riesgos que podrían afectar el éxito de un proyecto de desarrollo de software."
    },
    {
        "prompt": "¿Qué es el diseño ágil?",
        "response": "El diseño ágil es una metodología de desarrollo que se enfoca en iteraciones rápidas, la adaptación constante a los cambios y la colaboración continua entre los equipos de diseño y desarrollo."
    },
    {
        "prompt": "¿Qué es una prueba de caja negra?",
        "response": "Una prueba de caja negra es una técnica de pruebas en la que el evaluador no tiene acceso al código fuente del software y prueba el sistema desde la perspectiva del usuario, centrándose en las entradas y salidas."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas?",
        "response": "Un entorno de pruebas es una configuración controlada donde se ejecutan pruebas de software para verificar que las funcionalidades y el rendimiento del sistema sean los esperados."
    },
    {
        "prompt": "¿Qué es la calidad del código?",
        "response": "La calidad del código se refiere a qué tan eficiente, legible, mantenible y libre de errores es el código fuente de un software, asegurando que sea fácil de entender y modificar."
    },
    {
        "prompt": "¿Qué es la documentación funcional?",
        "response": "La documentación funcional es un conjunto de documentos que describe en detalle las funcionalidades, características y comportamientos esperados de un software, proporcionando una guía clara para los desarrolladores."
    },
    {
        "prompt": "¿Qué es el análisis heurístico?",
        "response": "El análisis heurístico es una técnica utilizada para evaluar la usabilidad de una interfaz, donde los evaluadores revisan la aplicación basándose en principios o reglas establecidas para detectar problemas de usabilidad."
    },
    {
        "prompt": "¿Qué es el testing exploratorio?",
        "response": "El testing exploratorio es una técnica de pruebas en la que los evaluadores investigan el software de manera libre y sin seguir un guion predefinido, buscando activamente errores o problemas en el sistema."
    },
    {
        "prompt": "¿Qué es un entorno sandbox?",
        "response": "Un entorno sandbox es un entorno aislado donde los desarrolladores pueden ejecutar y probar software de manera segura, sin afectar el sistema operativo principal o el entorno de producción."
    },
    {
        "prompt": "¿Qué es la deuda técnica?",
        "response": "La deuda técnica es el costo acumulado de implementar soluciones rápidas o subóptimas durante el desarrollo de software, lo que requiere corrección en el futuro para mejorar la calidad del sistema."
    },
    {
        "prompt": "¿Qué es un prototipo en software?",
        "response": "Un prototipo en software es una versión preliminar y funcional de una aplicación o sistema que se utiliza para probar conceptos, funcionalidades y obtener retroalimentación antes del desarrollo completo."
    },
    {
        "prompt": "¿Qué es el control de versiones?",
        "response": "El control de versiones es el proceso de gestionar y rastrear los cambios realizados en el código fuente de un proyecto, permitiendo a los desarrolladores colaborar, revertir a versiones anteriores y mantener un historial del proyecto."
    },
    {
        "prompt": "¿Qué es un sprint en Scrum?",
        "response": "Un sprint en Scrum es un ciclo de trabajo de duración fija (generalmente entre 1 y 4 semanas) en el que el equipo desarrolla y entrega una parte funcional del producto, cumpliendo con los objetivos establecidos."
    },
    {
        "prompt": "¿Qué es una prueba de aceptación?",
        "response": "Una prueba de aceptación es una fase en la que los usuarios finales o clientes prueban el software para asegurarse de que cumple con los requisitos y expectativas antes de su implementación en producción."
    },
    {
        "prompt": "¿Qué es la automatización de pruebas?",
        "response": "La automatización de pruebas es el uso de herramientas y scripts para ejecutar pruebas de software de manera repetitiva y automática, mejorando la eficiencia y reduciendo el tiempo necesario para las pruebas manuales."
    },
    {
        "prompt": "¿Qué es una arquitectura en capas?",
        "response": "Una arquitectura en capas es un diseño de software que separa las responsabilidades del sistema en capas independientes, como la capa de presentación, la capa de lógica de negocio y la capa de acceso a datos."
    },
    {
        "prompt": "¿Qué es la metodología Kanban?",
        "response": "Kanban es una metodología ágil que se enfoca en la visualización del flujo de trabajo, el control del trabajo en curso y la mejora continua para optimizar la entrega de productos o servicios."
    },
    {
        "prompt": "¿Qué es un modelo de datos relacional?",
        "response": "Un modelo de datos relacional es una estructura de datos que organiza la información en tablas relacionadas, donde cada fila representa un registro y cada columna un atributo del registro."
    },
    {
        "prompt": "¿Qué es una API REST?",
        "response": "Una API REST es una interfaz de programación que sigue los principios de REST (Representational State Transfer) y permite la comunicación entre diferentes sistemas mediante peticiones HTTP como GET, POST, PUT y DELETE."
    },
    {
        "prompt": "¿Qué es la prueba de carga en software?",
        "response": "La prueba de carga evalúa cómo el software maneja un número creciente de usuarios o transacciones simultáneas para medir su rendimiento bajo condiciones normales y extremas."
    },
    {
        "prompt": "¿Qué es una prueba de estrés en software?",
        "response": "Una prueba de estrés verifica el comportamiento del software bajo condiciones extremas, como una sobrecarga de usuarios o limitaciones de recursos, para garantizar su estabilidad."
    },
    {
        "prompt": "¿Qué es el diseño de experiencia de usuario (UX)?",
        "response": "El diseño de experiencia de usuario (UX) es el proceso de crear productos que ofrezcan experiencias significativas y satisfactorias a los usuarios, optimizando la interacción con el software."
    },
    {
        "prompt": "¿Qué es una historia de usuario?",
        "response": "Una historia de usuario es una breve descripción de una funcionalidad desde la perspectiva del usuario final, utilizada en metodologías ágiles para guiar el desarrollo del software."
    },
    {
        "prompt": "¿Qué es un ciclo de vida de desarrollo de software (SDLC)?",
        "response": "El ciclo de vida de desarrollo de software (SDLC) es un proceso estructurado que describe las fases por las que pasa un sistema de software, desde la planificación hasta el mantenimiento."
    },
    {
        "prompt": "¿Qué es una prueba de regresión en software?",
        "response": "Una prueba de regresión verifica que los cambios recientes en el software no hayan afectado negativamente las funcionalidades existentes, asegurando que el sistema siga funcionando correctamente."
    },
    {
        "prompt": "¿Qué es el testing de integración?",
        "response": "El testing de integración es una técnica de pruebas que verifica que los diferentes módulos o componentes del software funcionen correctamente cuando se combinan en un sistema unificado."
    },
    {
        "prompt": "¿Qué es un entorno de desarrollo?",
        "response": "Un entorno de desarrollo es un espacio donde los desarrolladores crean, prueban y depuran el código antes de integrarlo en un entorno de producción o pruebas."
    },
    {
        "prompt": "¿Qué es una API pública?",
        "response": "Una API pública es una interfaz de programación de aplicaciones que está disponible para desarrolladores externos, permitiendo que interactúen con los servicios de una plataforma para crear aplicaciones o integraciones."
    },
    {
        "prompt": "¿Qué es un modelo de entidad-relación?",
        "response": "Un modelo de entidad-relación es una representación gráfica de las entidades, sus atributos y las relaciones entre ellas en una base de datos, utilizado para diseñar estructuras de datos."
    },
    {
        "prompt": "¿Qué es la prueba de penetración (pentesting)?",
        "response": "La prueba de penetración, o pentesting, es una evaluación de seguridad que simula un ataque real para identificar vulnerabilidades en el software y ayudar a mejorar su seguridad."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo afecta a un proyecto?",
        "response": "La deuda técnica es el costo acumulado de realizar correcciones futuras debido a decisiones rápidas o subóptimas tomadas durante el desarrollo. Afecta el proyecto al aumentar los costos de mantenimiento y reducir la calidad a largo plazo."
    },
    {
        "prompt": "¿Qué es una retrospectiva en Scrum?",
        "response": "Una retrospectiva en Scrum es una reunión al final de cada sprint en la que el equipo reflexiona sobre lo que funcionó bien, lo que no, y cómo mejorar para futuros sprints."
    },
    {
        "prompt": "¿Qué es una API de terceros?",
        "response": "Una API de terceros es una interfaz proporcionada por un proveedor externo que permite que una aplicación interactúe con otro sistema o servicio sin necesidad de desarrollarlo desde cero."
    },
    {
        "prompt": "¿Qué es la mantenibilidad en software?",
        "response": "La mantenibilidad es la capacidad del software para ser modificado, corregido o mejorado de manera eficiente, lo que facilita su adaptación a nuevos requisitos o cambios en el entorno."
    },
    {
        "prompt": "¿Qué es la prueba de volumen en software?",
        "response": "La prueba de volumen verifica cómo el software maneja grandes cantidades de datos, asegurando que pueda gestionar un alto volumen de información sin afectar su rendimiento."
    },
    {
        "prompt": "¿Qué es la modularidad en software?",
        "response": "La modularidad es la capacidad de dividir un sistema de software en componentes independientes o módulos, lo que facilita el desarrollo, pruebas, mantenimiento y escalabilidad."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en software?",
        "response": "El análisis de impacto evalúa cómo los cambios propuestos en el software afectarán a otras partes del sistema, garantizando que las modificaciones no introduzcan nuevos problemas o errores."
    },
    {
        "prompt": "¿Qué es el testing de caja blanca?",
        "response": "El testing de caja blanca es una técnica de pruebas en la que los evaluadores tienen acceso al código fuente y verifican la lógica interna, flujos de control y estructuras del software."
    },
    {
        "prompt": "¿Qué es una prueba de humo en software?",
        "response": "Una prueba de humo es una evaluación rápida que verifica si las funciones básicas del software están operativas antes de realizar pruebas más exhaustivas."
    },
    {
        "prompt": "¿Qué es la escalabilidad horizontal en software?",
        "response": "La escalabilidad horizontal es la capacidad del software para manejar una mayor carga de trabajo agregando más servidores o nodos distribuidos, en lugar de mejorar la capacidad de un solo servidor."
    },
    {
        "prompt": "¿Qué es una integración continua (CI)?",
        "response": "La integración continua (CI) es una práctica de desarrollo en la que los cambios en el código se integran frecuentemente en un repositorio compartido y se prueban automáticamente para detectar errores lo antes posible."
    },
    {
        "prompt": "¿Qué es el diseño basado en pruebas (TDD)?",
        "response": "El diseño basado en pruebas (TDD) es una metodología en la que primero se escriben las pruebas antes de implementar el código, asegurando que el software cumpla con los requisitos desde el principio."
    },
    {
        "prompt": "¿Qué es un proceso de despliegue automatizado?",
        "response": "Un proceso de despliegue automatizado utiliza herramientas y scripts para automatizar el proceso de mover nuevas versiones del software a producción, asegurando que se haga de manera consistente y sin errores."
    },
    {
        "prompt": "¿Qué es la prueba de integración en software?",
        "response": "La prueba de integración verifica que los diferentes módulos o componentes de un sistema funcionen correctamente cuando se combinan en un sistema completo."
    },
    {
        "prompt": "¿Qué es el análisis de requisitos en software?",
        "response": "El análisis de requisitos es el proceso de identificar, documentar y validar las necesidades y expectativas del cliente o usuario final, que guiarán el desarrollo del software."
    },
    {
        "prompt": "¿Qué es el análisis dinámico en pruebas de software?",
        "response": "El análisis dinámico es una técnica que evalúa el software mientras se ejecuta, identificando problemas de rendimiento, seguridad o funcionalidad durante el tiempo de ejecución."
    },
    {
        "prompt": "¿Qué es un pipeline de CI/CD en software?",
        "response": "Un pipeline de CI/CD es un conjunto de procesos automatizados que permiten la integración continua (CI) y la entrega continua (CD) del software, asegurando que los cambios se prueben y desplieguen eficientemente."
    },
    {
        "prompt": "¿Qué es una auditoría de código en software?",
        "response": "Una auditoría de código es una revisión exhaustiva del código fuente para identificar errores, vulnerabilidades o mejoras de rendimiento, asegurando que cumpla con los estándares de calidad establecidos."
    },
    {
        "prompt": "¿Qué es la escalabilidad vertical en software?",
        "response": "La escalabilidad vertical es la capacidad del software para manejar una mayor carga de trabajo aumentando los recursos de hardware de un servidor, como agregar más memoria o capacidad de procesamiento."
    },
    {
        "prompt": "¿Qué es un entorno de producción en software?",
        "response": "Un entorno de producción es el entorno en el que el software está disponible para los usuarios finales y se espera que funcione de manera estable y sin interrupciones."
    },
    {
        "prompt": "¿Qué es la deuda técnica en software?",
        "response": "La deuda técnica es el trabajo adicional que se genera cuando se implementan soluciones rápidas o subóptimas, que deberán corregirse en el futuro para evitar problemas en la calidad y mantenibilidad del software."
    },
    {
        "prompt": "¿Qué es la refactorización en software?",
        "response": "La refactorización es el proceso de reestructurar el código sin cambiar su comportamiento externo, con el objetivo de mejorar su legibilidad, mantenibilidad y rendimiento."
    },
    {
        "prompt": "¿Qué es el análisis de riesgos en un proyecto de software?",
        "response": "El análisis de riesgos es el proceso de identificar, evaluar y mitigar los posibles riesgos que podrían afectar el éxito de un proyecto de desarrollo de software."
    },
    {
        "prompt": "¿Qué es una maqueta en diseño de software?",
        "response": "Una maqueta es una representación visual de cómo se verá la interfaz de usuario de una aplicación, utilizada para mostrar la disposición de los elementos gráficos y la navegación antes del desarrollo completo."
    },
    {
        "prompt": "¿Qué es la interoperabilidad en software?",
        "response": "La interoperabilidad es la capacidad del software para interactuar y funcionar correctamente con otros sistemas o aplicaciones, facilitando el intercambio de información entre ellos."
    },
    {
        "prompt": "¿Qué es una arquitectura monolítica en software?",
        "response": "Una arquitectura monolítica es un enfoque de diseño en el que todas las funcionalidades y componentes de una aplicación están integrados en un único paquete o código base."
    },
    {
        "prompt": "¿Qué es una API SOAP?",
        "response": "Una API SOAP es una interfaz que utiliza el protocolo SOAP (Simple Object Access Protocol) para la comunicación entre aplicaciones, utilizando mensajes XML a través de HTTP o SMTP."
    },
    {
        "prompt": "¿Qué es la accesibilidad en software?",
        "response": "La accesibilidad en software se refiere a la capacidad de un sistema para ser utilizado por personas con diferentes discapacidades, asegurando una experiencia inclusiva y eficiente para todos los usuarios."
    },
    {
        "prompt": "¿Qué es una retrospectiva ágil?",
        "response": "Una retrospectiva ágil es una reunión realizada al final de cada sprint en la que el equipo reflexiona sobre el proceso de trabajo y sugiere mejoras para el siguiente sprint."
    },
    {
        "prompt": "¿Qué es la entrega continua en software?",
        "response": "La entrega continua es una práctica en la que los cambios en el software se prueban y preparan continuamente para su despliegue en producción, asegurando que siempre esté listo para ser lanzado."
    },
    {
        "prompt": "¿Qué es el diseño modular en software?",
        "response": "El diseño modular es un enfoque de desarrollo en el que un sistema de software se divide en componentes independientes que pueden desarrollarse, probarse y desplegarse de manera autónoma."
    },
    {
        "prompt": "¿Qué es una prueba de regresión automatizada?",
        "response": "Una prueba de regresión automatizada utiliza herramientas de automatización para ejecutar pruebas repetitivas después de realizar cambios en el software, asegurando que no se afecten las funcionalidades existentes."
    },
    {
        "prompt": "¿Qué es un diagrama de flujo de datos (DFD)?",
        "response": "Un diagrama de flujo de datos (DFD) es una representación gráfica que muestra cómo los datos fluyen a través de un sistema, describiendo las entradas, procesos y salidas del software."
    },
    {
        "prompt": "¿Qué es la prueba de integración continua (CI)?",
        "response": "La prueba de integración continua es una evaluación automatizada que verifica que los cambios en el código funcionen correctamente cuando se integran con el código existente."
    },

{
        "prompt": "¿Qué es una prueba de sistema en software?",
        "response": "Una prueba de sistema es una evaluación completa que verifica que todos los componentes y módulos del software funcionen correctamente cuando se integran en un sistema completo."
    },
    {
        "prompt": "¿Qué es el análisis estático en pruebas de software?",
        "response": "El análisis estático es una técnica de pruebas que analiza el código fuente sin ejecutarlo para identificar errores, vulnerabilidades y problemas de calidad."
    },
    {
        "prompt": "¿Qué es un test de unidad?",
        "response": "Un test de unidad es una prueba que verifica el correcto funcionamiento de una parte pequeña e independiente del código, como una función o un método, en aislamiento del resto del sistema."
    },
    {
        "prompt": "¿Qué es el desarrollo incremental en software?",
        "response": "El desarrollo incremental es un enfoque en el que el software se desarrolla, prueba y despliega en pequeñas partes o incrementos, permitiendo que cada versión añada funcionalidad al sistema."
    },
    {
        "prompt": "¿Qué es el diseño centrado en tareas en software?",
        "response": "El diseño centrado en tareas se enfoca en optimizar la experiencia del usuario al organizar las funcionalidades del software en torno a las tareas específicas que los usuarios necesitan realizar."
    },
    {
        "prompt": "¿Qué es la gestión de la configuración en desarrollo de software?",
        "response": "La gestión de la configuración es el proceso de identificar, controlar y documentar los cambios en el software a lo largo de su ciclo de vida, asegurando que el sistema evolucione de manera controlada."
    },
    {
        "prompt": "¿Qué es la deuda técnica en metodologías ágiles?",
        "response": "La deuda técnica en metodologías ágiles es el costo de implementar soluciones rápidas o temporales para cumplir con los plazos, que requieren ser revisadas y corregidas más adelante para evitar problemas de mantenibilidad."
    },
    {
        "prompt": "¿Qué es una prueba de caja blanca?",
        "response": "Una prueba de caja blanca es un tipo de prueba en la que los evaluadores tienen acceso al código fuente y verifican la estructura interna, la lógica y los flujos de control del software."
    },
    {
        "prompt": "¿Qué es un entorno de desarrollo continuo?",
        "response": "Un entorno de desarrollo continuo es un espacio donde el código se desarrolla, integra y prueba continuamente, permitiendo la rápida entrega de nuevas funcionalidades o correcciones."
    },
    {
        "prompt": "¿Qué es la validación en el ciclo de vida del software?",
        "response": "La validación es el proceso de asegurarse de que el software cumple con los requisitos y expectativas del usuario final, verificando que el producto haga lo que se espera."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en cambios de software?",
        "response": "El análisis de impacto evalúa cómo los cambios propuestos en el software afectarán a otros componentes del sistema, asegurando que no se introduzcan nuevos problemas o errores."
    },
    {
        "prompt": "¿Qué es una prueba de aceptación del cliente?",
        "response": "Una prueba de aceptación del cliente es la fase final del ciclo de pruebas en la que los clientes o usuarios finales validan que el software cumple con los requisitos acordados antes de su lanzamiento."
    },
    {
        "prompt": "¿Qué es el desarrollo basado en componentes?",
        "response": "El desarrollo basado en componentes es una metodología de desarrollo en la que el software se organiza en componentes modulares reutilizables, mejorando la escalabilidad y mantenibilidad del sistema."
    },
    {
        "prompt": "¿Qué es la refactorización de código?",
        "response": "La refactorización es el proceso de mejorar la estructura interna del código sin cambiar su comportamiento externo, con el objetivo de hacerlo más legible, mantenible y eficiente."
    },
    {
        "prompt": "¿Qué es una prueba de compatibilidad en software?",
        "response": "Una prueba de compatibilidad verifica que el software funcione correctamente en diferentes entornos, como sistemas operativos, navegadores o dispositivos, asegurando que sea accesible para todos los usuarios."
    },
    {
        "prompt": "¿Qué es la trazabilidad en el desarrollo de software?",
        "response": "La trazabilidad es la capacidad de rastrear y vincular los requisitos a lo largo del ciclo de vida del software, desde su definición hasta su implementación y pruebas, asegurando que se cumplan todos los requisitos."
    },
    {
        "prompt": "¿Qué es una prueba de caja negra?",
        "response": "Una prueba de caja negra es un tipo de prueba en la que los evaluadores no tienen acceso al código fuente y se enfocan en verificar las entradas y salidas del sistema para asegurarse de que cumple con los requisitos funcionales."
    },
    {
        "prompt": "¿Qué es un modelo de datos relacional?",
        "response": "Un modelo de datos relacional organiza la información en tablas relacionadas mediante claves primarias y externas, permitiendo la interrelación entre conjuntos de datos en una base de datos."
    },
    {
        "prompt": "¿Qué es la automatización de despliegue en DevOps?",
        "response": "La automatización de despliegue en DevOps es el proceso de usar herramientas y scripts para automatizar el despliegue de software en entornos de producción, reduciendo el tiempo y los errores manuales."
    },
    {
        "prompt": "¿Qué es la seguridad en el desarrollo de software?",
        "response": "La seguridad en el desarrollo de software implica incorporar prácticas y controles de seguridad en todas las fases del ciclo de vida del desarrollo, desde el diseño hasta el despliegue, para proteger el sistema contra amenazas."
    },
    {
        "prompt": "¿Qué es el diseño adaptativo?",
        "response": "El diseño adaptativo es un enfoque en el que el software se ajusta automáticamente para ofrecer una experiencia de usuario óptima en diferentes dispositivos, resoluciones de pantalla y contextos de uso."
    },
    {
        "prompt": "¿Qué es el diseño de interfaz de usuario (UI)?",
        "response": "El diseño de interfaz de usuario (UI) es el proceso de crear la parte visual del software con la que interactúan los usuarios, asegurando que sea intuitiva, eficiente y visualmente agradable."
    },
    {
        "prompt": "¿Qué es una prueba de carga?",
        "response": "Una prueba de carga evalúa el rendimiento del software cuando es sometido a un número creciente de usuarios o transacciones simultáneas, asegurando que el sistema funcione correctamente bajo carga."
    },
    {
        "prompt": "¿Qué es una prueba de humo en software?",
        "response": "Una prueba de humo es una prueba inicial rápida que verifica si las funcionalidades básicas del software están operativas antes de proceder con pruebas más detalladas."
    },
    {
        "prompt": "¿Qué es el diseño de experiencia de usuario (UX)?",
        "response": "El diseño de experiencia de usuario (UX) se centra en la creación de productos que ofrezcan experiencias significativas y satisfactorias a los usuarios, optimizando la interacción con el software."
    },
    {
        "prompt": "¿Qué es una prueba de regresión?",
        "response": "Una prueba de regresión verifica que los cambios recientes en el software no hayan afectado negativamente las funcionalidades existentes, asegurando que el sistema siga funcionando correctamente."
    },
    {
        "prompt": "¿Qué es la prueba de integración continua (CI)?",
        "response": "La prueba de integración continua es una evaluación automatizada que verifica que los cambios en el código funcionen correctamente cuando se integran con el código existente."
    },
    {
        "prompt": "¿Qué es la modularidad en software?",
        "response": "La modularidad en software es el principio de dividir un sistema en componentes independientes o módulos que puedan desarrollarse, probarse y mantenerse de manera autónoma."
    },
    {
        "prompt": "¿Qué es una API RESTful?",
        "response": "Una API RESTful es una interfaz que sigue los principios de REST y permite la comunicación entre aplicaciones utilizando peticiones HTTP, como GET, POST, PUT y DELETE."
    },
    {
        "prompt": "¿Qué es una prueba de aceptación de usuario (UAT)?",
        "response": "La prueba de aceptación de usuario (UAT) es una evaluación realizada por los usuarios finales para verificar si el software cumple con los requisitos acordados y está listo para su implementación."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas en software?",
        "response": "Un entorno de pruebas es un espacio controlado donde los testers ejecutan pruebas de software para verificar su correcto funcionamiento antes de ser desplegado en producción."
    },
    {
        "prompt": "¿Qué es un sprint en Scrum?",
        "response": "Un sprint es un ciclo de trabajo en Scrum, generalmente de 1 a 4 semanas, en el que el equipo de desarrollo se enfoca en completar un conjunto de tareas previamente planificadas del backlog."
    },
    {
        "prompt": "¿Qué es la deuda técnica?",
        "response": "La deuda técnica es el costo de realizar correcciones futuras debido a decisiones rápidas o subóptimas tomadas durante el desarrollo, que pueden afectar la calidad y mantenibilidad del software."
    },
    {
        "prompt": "¿Qué es una retrospectiva ágil?",
        "response": "Una retrospectiva ágil es una reunión realizada al final de cada sprint en la que el equipo reflexiona sobre lo que funcionó, lo que no y cómo mejorar en futuros sprints."
    },
    {
        "prompt": "¿Qué es la prueba de penetración?",
        "response": "La prueba de penetración (pentesting) es una evaluación de seguridad que simula un ataque real al sistema para identificar vulnerabilidades y ayudar a mejorar la seguridad del software."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en proyectos de software?",
        "response": "El análisis de impacto evalúa cómo los cambios propuestos en el software afectarán a otras partes del sistema, garantizando que no se introduzcan nuevos problemas o errores."
    },
    {
        "prompt": "¿Qué es la cobertura de código?",
        "response": "La cobertura de código es una métrica que mide el porcentaje del código fuente que ha sido ejecutado durante las pruebas, ayudando a identificar partes no probadas del sistema."
    },
    {
        "prompt": "¿Qué es un backlog de producto en Scrum?",
        "response": "Un backlog de producto es una lista priorizada de características, tareas y mejoras que deben realizarse en el producto, gestionada por el Product Owner en Scrum."
    },
    {
        "prompt": "¿Qué es una maqueta en desarrollo de software?",
        "response": "Una maqueta es una representación visual o gráfica de cómo se verá una interfaz de usuario en una aplicación, utilizada para presentar el diseño y la navegación antes del desarrollo completo."
    },
    {
        "prompt": "¿Qué es la portabilidad en software?",
        "response": "La portabilidad es la capacidad del software para ser trasladado y ejecutado en diferentes entornos o plataformas sin necesidad de realizar cambios significativos en su código."
    },
    {
        "prompt": "¿Qué es la usabilidad en software?",
        "response": "La usabilidad es la medida en que un software puede ser utilizado por usuarios específicos para lograr sus objetivos de manera efectiva, eficiente y satisfactoria en un contexto de uso determinado."
    },
    {
        "prompt": "¿Qué es una auditoría de seguridad en software?",
        "response": "Una auditoría de seguridad es una revisión exhaustiva de un sistema de software para identificar vulnerabilidades de seguridad y evaluar su cumplimiento con las normativas y mejores prácticas de seguridad."
    },
    {
        "prompt": "¿Qué es el despliegue continuo en DevOps?",
        "response": "El despliegue continuo es una práctica de DevOps en la que los cambios de código se prueban y despliegan automáticamente en producción, asegurando actualizaciones rápidas y seguras."
    },
    {
        "prompt": "¿Qué es un diagrama de flujo de datos (DFD)?",
        "response": "Un diagrama de flujo de datos (DFD) es una representación gráfica que describe cómo los datos fluyen a través de un sistema, mostrando las entradas, procesos y salidas del sistema."
    },
    {
        "prompt": "¿Qué es el análisis coste-beneficio en software?",
        "response": "El análisis coste-beneficio es una técnica que evalúa los costos de un proyecto de software frente a los beneficios que se espera obtener, ayudando a determinar su viabilidad."
    },
    {
        "prompt": "¿Qué es una prueba alfa en software?",
        "response": "Una prueba alfa es una fase de pruebas internas realizada por el equipo de desarrollo para detectar errores o problemas antes de lanzar el software a un grupo limitado de usuarios externos para la prueba beta."
    },
    {
        "prompt": "¿Qué es una API pública?",
        "response": "Una API pública es una interfaz de programación que está disponible para que desarrolladores externos interactúen con un sistema o plataforma, permitiendo la creación de aplicaciones o integraciones."
    },
    {
        "prompt": "¿Qué es una prueba de volumen en software?",
        "response": "Una prueba de volumen evalúa cómo el software maneja grandes cantidades de datos, asegurando que el sistema pueda gestionar un alto volumen de información sin afectar su rendimiento."
    },
    {
        "prompt": "¿Qué es el mantenimiento preventivo en software?",
        "response": "El mantenimiento preventivo implica realizar mejoras y ajustes en el software antes de que se presenten problemas, con el fin de evitar futuros errores o fallos en el sistema."
    },
    {
        "prompt": "¿Qué es la ingeniería de requisitos?",
        "response": "La ingeniería de requisitos es el proceso de definir, documentar y mantener los requisitos de un sistema de software, asegurando que el producto final cumpla con las necesidades del usuario."
    },
    {
        "prompt": "¿Qué es un entorno de preproducción en software?",
        "response": "Un entorno de preproducción es un entorno que simula el entorno de producción y se utiliza para realizar pruebas finales antes de que el software se implemente en producción."
    },
    {
        "prompt": "¿Qué es la documentación técnica en software?",
        "response": "La documentación técnica es un conjunto de documentos que detalla el diseño, la arquitectura, las especificaciones y las instrucciones de uso y mantenimiento del software."
    },
    {
        "prompt": "¿Qué es un caso de prueba en software?",
        "response": "Un caso de prueba es un conjunto de condiciones, entradas y resultados esperados que se utilizan para verificar si una función específica del software funciona correctamente."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo puede reducirse?",
        "response": "La deuda técnica es el costo de realizar correcciones futuras debido a decisiones rápidas o subóptimas en el desarrollo. Puede reducirse mediante la refactorización y mejoras continuas en el código."
    },
    {
        "prompt": "¿Qué es el análisis de riesgos en un proyecto de software?",
        "response": "El análisis de riesgos es el proceso de identificar, evaluar y priorizar los riesgos que podrían afectar la calidad, los plazos o el presupuesto de un proyecto de software."
    },
    {
        "prompt": "¿Qué es una prueba de aceptación en software?",
        "response": "Una prueba de aceptación es una evaluación realizada por el cliente o usuario final para verificar que el software cumple con los requisitos acordados y está listo para su implementación."
    },
    {
        "prompt": "¿Qué es el testing automatizado?",
        "response": "El testing automatizado es el uso de herramientas y scripts para ejecutar pruebas de software de manera automática, mejorando la eficiencia y reduciendo el esfuerzo manual en las pruebas repetitivas."
    },
    {
        "prompt": "¿Qué es el diseño basado en componentes?",
        "response": "El diseño basado en componentes es un enfoque de desarrollo en el que el software se organiza en componentes modulares que pueden ser reutilizados en diferentes partes del sistema."
    },
    {
        "prompt": "¿Qué es la escalabilidad horizontal?",
        "response": "La escalabilidad horizontal es la capacidad del software para manejar un aumento en la carga de trabajo agregando más servidores o nodos distribuidos en lugar de mejorar la capacidad de un solo servidor."
    },
    {
        "prompt": "¿Qué es la validación cruzada en pruebas de software?",
        "response": "La validación cruzada es una técnica que divide los datos en múltiples subconjuntos para entrenar y validar un modelo de software, asegurando que funcione correctamente en diferentes escenarios."
    },
    {
        "prompt": "¿Qué es un entorno sandbox en software?",
        "response": "Un entorno sandbox es un entorno aislado donde se pueden ejecutar y probar programas de manera segura, sin afectar el sistema operativo principal o el entorno de producción."
    },
    {
        "prompt": "¿Qué es el diseño orientado a objetos?",
        "response": "El diseño orientado a objetos es un enfoque de desarrollo en el que el software se organiza en objetos que contienen datos y métodos, lo que facilita la reutilización del código y mejora su mantenibilidad."
    },
    {
        "prompt": "¿Qué es la deuda técnica en proyectos ágiles?",
        "response": "La deuda técnica en proyectos ágiles es el costo de realizar correcciones futuras debido a decisiones rápidas o temporales para cumplir con plazos cortos, lo que puede aumentar la dificultad de mantener el software."
    },
    {
        "prompt": "¿Qué es el diseño modular en software?",
        "response": "El diseño modular es un enfoque en el que el software se divide en componentes independientes o módulos que pueden desarrollarse, probarse y desplegarse de manera autónoma."
    },
    {
        "prompt": "¿Qué es una API de terceros?",
        "response": "Una API de terceros es una interfaz proporcionada por un proveedor externo que permite que una aplicación interactúe con otros sistemas o servicios sin necesidad de desarrollarlos desde cero."
    },
    {
        "prompt": "¿Qué es una prueba de caja blanca?",
        "response": "Una prueba de caja blanca es un enfoque de pruebas en el que los evaluadores tienen acceso al código fuente y verifican la lógica interna, los flujos de control y las estructuras del software."
    },
    {
        "prompt": "¿Qué es la documentación funcional en software?",
        "response": "La documentación funcional es un conjunto de documentos que describe en detalle las funcionalidades y comportamientos esperados del software, proporcionando una guía clara para los desarrolladores."
    },
    {
        "prompt": "¿Qué es la integración continua (CI)?",
        "response": "La integración continua (CI) es una práctica en la que los desarrolladores integran sus cambios de código en un repositorio común con frecuencia, ejecutando pruebas automáticas para detectar errores rápidamente."
    },
    {
        "prompt": "¿Qué es un repositorio en Git?",
        "response": "Un repositorio en Git es un almacenamiento de archivos y directorios que contiene el historial completo de los cambios realizados en un proyecto, facilitando la colaboración entre desarrolladores."
    },
    {
        "prompt": "¿Qué es el control de versiones distribuido?",
        "response": "El control de versiones distribuido (DVCS) es un sistema en el que cada desarrollador tiene una copia completa del historial del proyecto, permitiendo trabajar de manera independiente sin depender de un servidor central."
    },
    {
        "prompt": "¿Qué es una historia de usuario en Scrum?",
        "response": "Una historia de usuario es una breve descripción de una funcionalidad desde la perspectiva del usuario final, utilizada en Scrum para definir las tareas que deben completarse durante un sprint."
    },
    {
        "prompt": "¿Qué es la prueba de integración?",
        "response": "La prueba de integración es una técnica de pruebas que verifica que los diferentes módulos o componentes de un sistema funcionen correctamente cuando se combinan en un sistema completo."
    },
    {
        "prompt": "¿Qué es el diseño responsivo?",
        "response": "El diseño responsivo es un enfoque de desarrollo que asegura que una aplicación o sitio web se ajuste y funcione correctamente en una amplia variedad de dispositivos y tamaños de pantalla."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo afecta a la calidad del software?",
        "response": "La deuda técnica es el costo acumulado de implementar soluciones rápidas o subóptimas que requieren corrección en el futuro. Afecta la calidad del software al dificultar su mantenimiento y evolución a largo plazo."
    },
    {
        "prompt": "¿Qué es la prueba de regresión automatizada?",
        "response": "La prueba de regresión automatizada utiliza herramientas de automatización para ejecutar pruebas repetitivas cada vez que se realizan cambios en el software, asegurando que no se afecten las funcionalidades existentes."
    },
    {
        "prompt": "¿Qué es una arquitectura orientada a servicios (SOA)?",
        "response": "La arquitectura orientada a servicios (SOA) es un enfoque de diseño en el que los componentes de software proporcionan servicios a otros componentes a través de una red, utilizando protocolos estándar."
    },
    {
        "prompt": "¿Qué es la refactorización en software?",
        "response": "La refactorización es el proceso de reestructurar el código sin cambiar su comportamiento externo, con el objetivo de mejorar su legibilidad, mantenibilidad y rendimiento."
    },
    {
        "prompt": "¿Qué es una prueba de carga en software?",
        "response": "Una prueba de carga evalúa cómo el software maneja una cantidad específica de usuarios o transacciones simultáneas, midiendo su rendimiento bajo condiciones normales y de alta carga."
    },
    {
        "prompt": "¿Qué es un backlog en metodologías ágiles?",
        "response": "Un backlog es una lista priorizada de tareas, características y mejoras que el equipo de desarrollo debe abordar durante el ciclo de desarrollo, gestionada por el Product Owner."
    },
    {
        "prompt": "¿Qué es la validación en el desarrollo de software?",
        "response": "La validación es el proceso de verificar si el software cumple con los requisitos y expectativas del usuario final, asegurando que el producto final haga lo que se espera."
    },
    {
        "prompt": "¿Qué es una prueba de sistema en software?",
        "response": "Una prueba de sistema es una evaluación completa que verifica que todos los componentes y módulos del software funcionen correctamente cuando se integran en un sistema completo."
    },
    {
        "prompt": "¿Qué es un pipeline de CI/CD?",
        "response": "Un pipeline de CI/CD es una serie de procesos automatizados que permiten la integración continua (CI) y la entrega continua (CD), asegurando que los cambios en el código se prueben y desplieguen de manera eficiente."
    },
    {
        "prompt": "¿Qué es el análisis heurístico en pruebas de usabilidad?",
        "response": "El análisis heurístico es una técnica de evaluación en la que expertos en usabilidad revisan una interfaz para identificar problemas de usabilidad basándose en principios o reglas establecidas."
    },

{
        "prompt": "¿Qué es una prueba de integración en software?",
        "response": "La prueba de integración verifica que los diferentes módulos o componentes de un sistema funcionen correctamente cuando se combinan para formar un sistema completo."
    },
    {
        "prompt": "¿Qué es una auditoría de software?",
        "response": "Una auditoría de software es una revisión formal para evaluar si el software cumple con los estándares de calidad, normativas y requisitos establecidos durante su desarrollo."
    },
    {
        "prompt": "¿Qué es el desarrollo incremental?",
        "response": "El desarrollo incremental es un enfoque en el que el software se desarrolla y entrega en pequeñas partes o incrementos, cada uno de los cuales añade funcionalidad al sistema."
    },
    {
        "prompt": "¿Qué es la validación cruzada?",
        "response": "La validación cruzada es una técnica en la que se dividen los datos en subconjuntos para entrenar y validar un modelo, asegurando que funcione correctamente en diversos escenarios."
    },
    {
        "prompt": "¿Qué es la prueba beta en software?",
        "response": "La prueba beta es una fase de pruebas en la que una versión preliminar del software se distribuye a usuarios externos para recibir retroalimentación antes del lanzamiento oficial."
    },
    {
        "prompt": "¿Qué es el diseño modular en software?",
        "response": "El diseño modular es una técnica que organiza el software en módulos independientes que pueden desarrollarse, probarse y desplegarse de manera autónoma, facilitando la mantenibilidad."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo puede ser gestionada?",
        "response": "La deuda técnica es el costo de realizar correcciones futuras debido a decisiones rápidas o subóptimas. Puede gestionarse priorizando las refactorizaciones y mejorando el código de manera continua."
    },
    {
        "prompt": "¿Qué es la usabilidad en el contexto de desarrollo de software?",
        "response": "La usabilidad se refiere a qué tan fácil y eficiente es para los usuarios interactuar con un software, alcanzando sus objetivos de manera satisfactoria y sin complicaciones."
    },
    {
        "prompt": "¿Qué es un entorno de preproducción?",
        "response": "Un entorno de preproducción es un entorno que simula el entorno de producción para realizar pruebas finales y asegurarse de que el software esté listo para ser lanzado al público."
    },
    {
        "prompt": "¿Qué es una prueba de caja negra en software?",
        "response": "Una prueba de caja negra es una técnica en la que el evaluador no tiene acceso al código fuente y prueba el sistema basándose únicamente en las entradas y salidas esperadas."
    },
    {
        "prompt": "¿Qué es la cobertura de código?",
        "response": "La cobertura de código es una métrica que mide el porcentaje de código ejecutado durante las pruebas, ayudando a identificar áreas del software que no han sido evaluadas."
    },
    {
        "prompt": "¿Qué es la portabilidad en software?",
        "response": "La portabilidad es la capacidad del software para ser trasladado y ejecutado en diferentes entornos o plataformas sin la necesidad de realizar modificaciones significativas en el código."
    },
    {
        "prompt": "¿Qué es una historia de usuario en Scrum?",
        "response": "Una historia de usuario es una breve descripción de una funcionalidad desde la perspectiva del usuario final, que se utiliza para guiar el desarrollo en metodologías ágiles como Scrum."
    },
    {
        "prompt": "¿Qué es la modularidad en software?",
        "response": "La modularidad es el principio de dividir un sistema en componentes independientes o módulos, lo que facilita su desarrollo, pruebas, mantenimiento y escalabilidad."
    },
    {
        "prompt": "¿Qué es la prueba de aceptación de usuario?",
        "response": "La prueba de aceptación de usuario (UAT) es la fase en la que los usuarios finales validan si el software cumple con los requisitos acordados y está listo para su implementación."
    },
    {
        "prompt": "¿Qué es el análisis de impacto?",
        "response": "El análisis de impacto es un proceso que evalúa cómo los cambios propuestos en un sistema afectarán a otros componentes del software, asegurando que no se introduzcan nuevos problemas."
    },
    {
        "prompt": "¿Qué es el diseño adaptativo en software?",
        "response": "El diseño adaptativo es un enfoque en el que el software se ajusta automáticamente para ofrecer una experiencia óptima en diferentes dispositivos, resoluciones y contextos de uso."
    },
    {
        "prompt": "¿Qué es una API pública?",
        "response": "Una API pública es una interfaz de programación disponible para desarrolladores externos, que permite que aplicaciones de terceros interactúen con los servicios de una plataforma o sistema."
    },
    {
        "prompt": "¿Qué es la deuda técnica en software y cómo se genera?",
        "response": "La deuda técnica es el costo adicional generado por decisiones rápidas o subóptimas durante el desarrollo de software. Se genera cuando se implementan soluciones temporales que requieren corrección posterior."
    },
    {
        "prompt": "¿Qué es un diagrama de casos de uso?",
        "response": "Un diagrama de casos de uso es una representación gráfica de cómo los usuarios (actores) interactúan con las funcionalidades de un sistema, describiendo los casos de uso."
    },
    {
        "prompt": "¿Qué es la integración continua (CI)?",
        "response": "La integración continua es una práctica de desarrollo en la que los desarrolladores integran sus cambios de código frecuentemente en un repositorio compartido, y se ejecutan pruebas automáticas para detectar errores rápidamente."
    },
    {
        "prompt": "¿Qué es el mantenimiento correctivo en software?",
        "response": "El mantenimiento correctivo implica corregir errores y fallos encontrados en el software después de su lanzamiento, asegurando que continúe funcionando correctamente."
    },
    {
        "prompt": "¿Qué es una prueba de rendimiento?",
        "response": "Una prueba de rendimiento evalúa cómo el software maneja una carga de trabajo específica, midiendo factores como el tiempo de respuesta, estabilidad y uso de recursos bajo diferentes condiciones."
    },
    {
        "prompt": "¿Qué es el diseño centrado en el usuario (UCD)?",
        "response": "El diseño centrado en el usuario (UCD) es un enfoque de desarrollo que se enfoca en las necesidades y expectativas del usuario final durante todo el proceso de diseño, asegurando una experiencia de usuario efectiva."
    },
    {
        "prompt": "¿Qué es un backlog en Scrum?",
        "response": "Un backlog en Scrum es una lista priorizada de tareas, características y mejoras que deben realizarse en el producto. Es gestionada por el Product Owner y utilizada para planificar los sprints."
    },
    {
        "prompt": "¿Qué es una prueba de caja blanca?",
        "response": "Una prueba de caja blanca es una técnica en la que los evaluadores tienen acceso al código fuente y verifican la lógica interna, los flujos de control y las estructuras del software."
    },
    {
        "prompt": "¿Qué es el análisis dinámico?",
        "response": "El análisis dinámico es una técnica que evalúa el comportamiento del software durante su ejecución, identificando problemas de rendimiento, seguridad o funcionalidad en tiempo de ejecución."
    },
    {
        "prompt": "¿Qué es la refactorización de código?",
        "response": "La refactorización de código es el proceso de reestructurar el código sin cambiar su comportamiento externo, mejorando su legibilidad, mantenibilidad y rendimiento."
    },
    {
        "prompt": "¿Qué es el análisis de riesgos en software?",
        "response": "El análisis de riesgos es el proceso de identificar, evaluar y mitigar los riesgos que podrían afectar la calidad, plazos o presupuesto de un proyecto de software."
    },
    {
        "prompt": "¿Qué es una API RESTful?",
        "response": "Una API RESTful es una interfaz que sigue los principios de REST (Representational State Transfer) y permite que diferentes aplicaciones se comuniquen entre sí mediante peticiones HTTP como GET, POST, PUT y DELETE."
    },
    {
        "prompt": "¿Qué es una prueba de integración?",
        "response": "Una prueba de integración verifica que los diferentes módulos o componentes de un sistema funcionen correctamente cuando se integran en un sistema completo."
    },
    {
        "prompt": "¿Qué es la deuda técnica en proyectos ágiles?",
        "response": "La deuda técnica en proyectos ágiles es el costo adicional de corregir decisiones rápidas o soluciones temporales tomadas durante el desarrollo para cumplir con plazos cortos, lo que puede afectar la calidad del software."
    },
    {
        "prompt": "¿Qué es una prueba de regresión?",
        "response": "Una prueba de regresión verifica que los cambios recientes en el software no hayan afectado negativamente las funcionalidades existentes, asegurando que el sistema siga funcionando como se espera."
    },
    {
        "prompt": "¿Qué es la modularidad en software?",
        "response": "La modularidad es la capacidad de dividir el software en componentes independientes o módulos, lo que facilita su desarrollo, pruebas, mantenimiento y escalabilidad."
    },
    {
        "prompt": "¿Qué es una auditoría de seguridad de software?",
        "response": "Una auditoría de seguridad de software es una revisión exhaustiva para identificar vulnerabilidades en el sistema y evaluar su cumplimiento con normativas y mejores prácticas de seguridad."
    },
    {
        "prompt": "¿Qué es un entorno sandbox en software?",
        "response": "Un entorno sandbox es un entorno aislado donde se pueden ejecutar programas y realizar pruebas de software sin afectar el entorno principal o de producción."
    },
    {
        "prompt": "¿Qué es la validación en software?",
        "response": "La validación es el proceso de verificar si el software cumple con los requisitos del usuario final, asegurando que el producto final funcione como se esperaba en un entorno real."
    },
    {
        "prompt": "¿Qué es el despliegue continuo en software?",
        "response": "El despliegue continuo es una práctica de desarrollo en la que los cambios en el código se despliegan automáticamente en producción después de pasar por pruebas automatizadas, asegurando actualizaciones rápidas."
    },
    {
        "prompt": "¿Qué es la accesibilidad en software?",
        "response": "La accesibilidad en software se refiere a la capacidad del sistema para ser utilizado por personas con diferentes discapacidades, asegurando una experiencia inclusiva para todos los usuarios."
    },
    {
        "prompt": "¿Qué es la arquitectura en capas en software?",
        "response": "La arquitectura en capas organiza el software en niveles separados, donde cada capa tiene una responsabilidad específica, como la capa de presentación, la lógica de negocio y la capa de acceso a datos."
    },
    {
        "prompt": "¿Qué es la prueba de compatibilidad?",
        "response": "La prueba de compatibilidad verifica que el software funcione correctamente en diferentes entornos, como dispositivos, sistemas operativos o navegadores, asegurando que sea accesible para todos los usuarios."
    },
    {
        "prompt": "¿Qué es el análisis FODA en software?",
        "response": "El análisis FODA es una técnica utilizada para evaluar las fortalezas, oportunidades, debilidades y amenazas de un proyecto de software, ayudando a tomar decisiones estratégicas."
    },
    {
        "prompt": "¿Qué es un backlog de sprint en Scrum?",
        "response": "Un backlog de sprint es una lista de tareas que el equipo de desarrollo planea completar durante un sprint en Scrum. Se deriva del backlog del producto y está gestionado por el equipo."
    },
    {
        "prompt": "¿Qué es la cobertura de pruebas?",
        "response": "La cobertura de pruebas es una métrica que mide qué porcentaje del código ha sido probado, lo que ayuda a identificar áreas del software que no han sido evaluadas durante las pruebas."
    },
    {
        "prompt": "¿Qué es una API SOAP?",
        "response": "Una API SOAP es una interfaz que utiliza el protocolo SOAP (Simple Object Access Protocol) para la comunicación entre aplicaciones, utilizando mensajes XML enviados a través de HTTP o SMTP."
    },
    {
        "prompt": "¿Qué es una prueba de recuperación en software?",
        "response": "Una prueba de recuperación evalúa la capacidad del software para recuperarse de fallos o errores, verificando cómo restaura sus funciones después de una interrupción inesperada."
    },
    {
        "prompt": "¿Qué es una historia técnica en Scrum?",
        "response": "Una historia técnica es una tarea o actividad dentro de un sprint en Scrum que se enfoca en mejoras técnicas o mantenimiento del sistema, en lugar de estar directamente relacionada con funcionalidades del usuario."
    },
    {
        "prompt": "¿Qué es la mantenibilidad en software?",
        "response": "La mantenibilidad es la capacidad del software para ser modificado, corregido o mejorado de manera eficiente, lo que facilita su adaptación a nuevos requisitos o cambios en el entorno."
    },
    {
        "prompt": "¿Qué es una prueba de estrés en software?",
        "response": "Una prueba de estrés evalúa cómo el software maneja condiciones extremas, como una sobrecarga de usuarios o uso máximo de recursos, para verificar su estabilidad y rendimiento bajo presión."
    },
    {
        "prompt": "¿Qué es el análisis coste-beneficio?",
        "response": "El análisis coste-beneficio es una técnica que evalúa los costos de implementar y mantener un proyecto de software frente a los beneficios que se espera obtener, ayudando a determinar su viabilidad."
    },
    {
        "prompt": "¿Qué es el mantenimiento evolutivo en software?",
        "response": "El mantenimiento evolutivo implica realizar mejoras o adaptaciones en el software para cumplir con nuevos requisitos o para mejorar su rendimiento a medida que cambian las necesidades del usuario."
    },
    {
        "prompt": "¿Qué es el testing exploratorio?",
        "response": "El testing exploratorio es una técnica de pruebas en la que los evaluadores exploran el software libremente, sin un guion predefinido, buscando errores y problemas mientras aprenden cómo funciona el sistema."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo puede evitarse?",
        "response": "La deuda técnica es el costo acumulado de implementar soluciones rápidas o temporales. Puede evitarse tomando decisiones de diseño sostenibles y revisando el código regularmente para mantener su calidad."
    },
    {
        "prompt": "¿Qué es una auditoría de código?",
        "response": "Una auditoría de código es un proceso en el que se revisa el código fuente para identificar vulnerabilidades, errores o mejoras de rendimiento, asegurando que el software cumpla con los estándares de calidad."
    },
    {
        "prompt": "¿Qué es la escalabilidad en software?",
        "response": "La escalabilidad es la capacidad del software para manejar un aumento en la carga de trabajo o el número de usuarios sin sacrificar su rendimiento ni estabilidad."
    },
    {
        "prompt": "¿Qué es una prueba de volumen en software?",
        "response": "Una prueba de volumen evalúa cómo el software maneja grandes cantidades de datos, verificando su capacidad para procesar grandes volúmenes de información sin afectar su rendimiento."
    },
    {
        "prompt": "¿Qué es el mantenimiento adaptativo?",
        "response": "El mantenimiento adaptativo implica realizar ajustes en el software para que continúe funcionando correctamente en nuevos entornos o con nuevas configuraciones que no se contemplaron en su desarrollo original."
    },
    {
        "prompt": "¿Qué es el análisis heurístico?",
        "response": "El análisis heurístico es una técnica de evaluación en la que expertos revisan una interfaz de usuario en función de principios heurísticos establecidos para identificar problemas de usabilidad."
    },
    {
        "prompt": "¿Qué es una API privada?",
        "response": "Una API privada es una interfaz de programación que está disponible solo para desarrolladores internos de una organización, permitiendo que las aplicaciones internas interactúen entre sí de manera segura."
    },
    {
        "prompt": "¿Qué es una prueba de caja negra?",
        "response": "Una prueba de caja negra es un enfoque de pruebas en el que los evaluadores no tienen acceso al código fuente y se centran en verificar las entradas y salidas del sistema, sin examinar la lógica interna."
    },
    {
        "prompt": "¿Qué es el testing automatizado?",
        "response": "El testing automatizado es el uso de herramientas y scripts para ejecutar pruebas de software de manera automática, mejorando la eficiencia y reduciendo el esfuerzo manual en las pruebas repetitivas."
    },
    {
        "prompt": "¿Qué es el despliegue continuo en DevOps?",
        "response": "El despliegue continuo es una práctica de DevOps en la que los cambios de código se despliegan automáticamente en producción después de pasar por pruebas automatizadas, asegurando actualizaciones rápidas y frecuentes."
    },
    {
        "prompt": "¿Qué es la refactorización de código en software?",
        "response": "La refactorización de código es el proceso de reestructurar el código sin cambiar su comportamiento externo, con el objetivo de mejorar su legibilidad, mantenibilidad y rendimiento."
    },
    {
        "prompt": "¿Qué es una retrospectiva en Scrum?",
        "response": "Una retrospectiva en Scrum es una reunión que se realiza al final de cada sprint, en la que el equipo reflexiona sobre lo que funcionó, lo que no, y cómo mejorar para el próximo sprint."
    },
    {
        "prompt": "¿Qué es el diseño de experiencia de usuario (UX)?",
        "response": "El diseño de experiencia de usuario (UX) es el proceso de crear productos que ofrezcan experiencias significativas y satisfactorias a los usuarios, optimizando la interacción con el software."
    },
    {
        "prompt": "¿Qué es un ciclo de vida de desarrollo de software (SDLC)?",
        "response": "El ciclo de vida de desarrollo de software (SDLC) es un proceso estructurado que define las fases por las que pasa el software, desde la planificación y desarrollo hasta el despliegue y mantenimiento."
    },
    {
        "prompt": "¿Qué es un entorno de desarrollo?",
        "response": "Un entorno de desarrollo es un espacio controlado donde los desarrolladores crean, prueban y depuran el código antes de integrarlo en un entorno de producción o de pruebas."
    },
    {
        "prompt": "¿Qué es una maqueta en diseño de software?",
        "response": "Una maqueta es una representación visual de cómo se verá una interfaz de usuario en una aplicación, utilizada para mostrar la disposición de los elementos gráficos y la navegación antes del desarrollo completo."
    },
    {
        "prompt": "¿Qué es la trazabilidad en software?",
        "response": "La trazabilidad en software es la capacidad de rastrear y vincular los requisitos a lo largo de todo el ciclo de vida del desarrollo, asegurando que cada requisito se implemente y verifique correctamente."
    },
    {
        "prompt": "¿Qué es la deuda técnica en software y cómo impacta a largo plazo?",
        "response": "La deuda técnica es el costo de realizar correcciones futuras debido a decisiones rápidas o subóptimas. A largo plazo, puede aumentar los costos de mantenimiento y reducir la calidad del software."
    },
    {
        "prompt": "¿Qué es una arquitectura orientada a microservicios?",
        "response": "Una arquitectura orientada a microservicios es un enfoque de diseño en el que una aplicación se divide en servicios pequeños e independientes que pueden desarrollarse, desplegarse y escalarse de manera autónoma."
    },
    {
        "prompt": "¿Qué es un caso de uso en software?",
        "response": "Un caso de uso es una descripción de cómo un usuario interactúa con el software para lograr un objetivo específico, ayudando a definir los requisitos funcionales del sistema."
    },
    {
        "prompt": "¿Qué es una prueba de integración continua (CI)?",
        "response": "Una prueba de integración continua es una evaluación automatizada que verifica que los cambios en el código funcionen correctamente cuando se integran con el código existente en un entorno compartido."
    },
    {
        "prompt": "¿Qué es el análisis estático?",
        "response": "El análisis estático es una técnica de pruebas que revisa el código fuente sin ejecutarlo, identificando errores, vulnerabilidades o problemas de calidad en el código."
    },
    {
        "prompt": "¿Qué es una API de terceros?",
        "response": "Una API de terceros es una interfaz proporcionada por un proveedor externo que permite que una aplicación interactúe con otros sistemas o servicios sin necesidad de desarrollarlos desde cero."
    },
    {
        "prompt": "¿Qué es la deuda técnica en el desarrollo de software?",
        "response": "La deuda técnica es el trabajo adicional generado por implementar soluciones rápidas o subóptimas que requieren corrección futura, lo que puede afectar la calidad y mantenibilidad del software."
    },
    {
        "prompt": "¿Qué es la prueba de sistema?",
        "response": "La prueba de sistema es una evaluación completa que verifica que todos los componentes y módulos del software funcionen correctamente cuando se integran en un sistema completo."
    },
    {
        "prompt": "¿Qué es un hotfix en software?",
        "response": "Un hotfix es una actualización rápida que se aplica para corregir un error crítico o vulnerabilidad en el software, que no puede esperar hasta la siguiente versión oficial."
    },

{
        "prompt": "¿Qué es la escalabilidad vertical en software?",
        "response": "La escalabilidad vertical es la capacidad del software para manejar una mayor carga de trabajo aumentando los recursos de hardware de un servidor, como agregar más memoria o CPU."
    },
    {
        "prompt": "¿Qué es la seguridad en el desarrollo de software?",
        "response": "La seguridad en el desarrollo de software implica incorporar controles y prácticas de seguridad durante todas las fases del ciclo de vida del software para proteger el sistema de amenazas externas e internas."
    },
    {
        "prompt": "¿Qué es el diseño orientado a objetos?",
        "response": "El diseño orientado a objetos es un enfoque en el desarrollo de software donde los elementos del sistema se modelan como 'objetos' que contienen tanto datos como métodos que operan sobre esos datos."
    },
    {
        "prompt": "¿Qué es un entorno de desarrollo integrado (IDE)?",
        "response": "Un entorno de desarrollo integrado (IDE) es una aplicación que proporciona un conjunto de herramientas, como un editor de código, un depurador y un compilador, en un solo entorno para facilitar el desarrollo de software."
    },
    {
        "prompt": "¿Qué es un diagrama de secuencia en UML?",
        "response": "Un diagrama de secuencia en UML es una representación gráfica que muestra cómo los objetos interactúan entre sí en un sistema, destacando el orden de los mensajes enviados entre ellos para realizar una función específica."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en software?",
        "response": "El análisis de impacto en software es el proceso de evaluar cómo los cambios en el código afectarán otras partes del sistema, asegurando que no se introduzcan errores o problemas no deseados."
    },
    {
        "prompt": "¿Qué es el mantenimiento preventivo en software?",
        "response": "El mantenimiento preventivo en software es el proceso de realizar mejoras y correcciones antes de que ocurran problemas, con el objetivo de evitar errores futuros y garantizar un funcionamiento continuo."
    },
    {
        "prompt": "¿Qué es una API privada?",
        "response": "Una API privada es una interfaz de programación que está disponible solo para desarrolladores internos de una organización, lo que permite la integración y comunicación segura entre aplicaciones internas."
    },
    {
        "prompt": "¿Qué es la deuda técnica en software?",
        "response": "La deuda técnica es el costo acumulado de implementar soluciones rápidas o subóptimas durante el desarrollo, lo que genera la necesidad de realizar refactorizaciones o correcciones en el futuro."
    },
    {
        "prompt": "¿Qué es una prueba de caja blanca?",
        "response": "Una prueba de caja blanca es un tipo de prueba en la que los evaluadores tienen acceso al código fuente del software y se enfocan en verificar la lógica interna, las estructuras de control y los flujos de datos."
    },
    {
        "prompt": "¿Qué es la escalabilidad horizontal?",
        "response": "La escalabilidad horizontal es la capacidad de un sistema para manejar una mayor carga de trabajo agregando más servidores o nodos en lugar de mejorar el rendimiento de un solo servidor."
    },
    {
        "prompt": "¿Qué es una prueba de carga en software?",
        "response": "Una prueba de carga evalúa cómo el software maneja un aumento gradual en el número de usuarios o transacciones simultáneas para determinar su rendimiento bajo condiciones normales y de alta demanda."
    },
    {
        "prompt": "¿Qué es un backlog de producto?",
        "response": "Un backlog de producto es una lista priorizada de tareas, características y mejoras que deben realizarse en un producto de software. Es gestionado por el Product Owner en metodologías ágiles como Scrum."
    },
    {
        "prompt": "¿Qué es el mantenimiento adaptativo en software?",
        "response": "El mantenimiento adaptativo en software implica realizar ajustes o modificaciones para que el sistema siga funcionando correctamente en nuevos entornos operativos o con nuevas configuraciones de hardware o software."
    },
    {
        "prompt": "¿Qué es una prueba de caja negra en software?",
        "response": "Una prueba de caja negra es un enfoque de pruebas en el que los evaluadores no tienen acceso al código fuente y se enfocan en verificar la funcionalidad del software basándose en las entradas y salidas esperadas."
    },
    {
        "prompt": "¿Qué es el análisis estático en software?",
        "response": "El análisis estático es un tipo de evaluación en el que se revisa el código fuente sin ejecutarlo, para identificar posibles errores, vulnerabilidades y problemas de calidad."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas en software?",
        "response": "Un entorno de pruebas es un espacio controlado donde los testers pueden ejecutar casos de prueba para verificar que el software funcione correctamente antes de su implementación en producción."
    },
    {
        "prompt": "¿Qué es la entrega continua (CD)?",
        "response": "La entrega continua es una práctica en la que el software es probado, validado y está siempre listo para ser desplegado a producción, asegurando que cualquier versión pueda ser lanzada en cualquier momento."
    },
    {
        "prompt": "¿Qué es el diseño responsivo?",
        "response": "El diseño responsivo es un enfoque de desarrollo que asegura que las aplicaciones y sitios web se ajusten automáticamente y funcionen bien en diferentes dispositivos y tamaños de pantalla."
    },
    {
        "prompt": "¿Qué es un patrón de diseño en software?",
        "response": "Un patrón de diseño en software es una solución reutilizable a un problema común en el diseño de sistemas, proporcionando una forma estructurada de abordar problemas de diseño recurrentes."
    },
    {
        "prompt": "¿Qué es la cobertura de código en pruebas?",
        "response": "La cobertura de código es una métrica que mide el porcentaje de código que ha sido ejecutado durante las pruebas, lo que ayuda a identificar partes del código que no han sido evaluadas."
    },
    {
        "prompt": "¿Qué es la validación en software?",
        "response": "La validación en software es el proceso de verificar si un sistema cumple con los requisitos del usuario final y está listo para ser implementado en un entorno de producción."
    },
    {
        "prompt": "¿Qué es un entorno sandbox?",
        "response": "Un entorno sandbox es un entorno aislado en el que se pueden ejecutar y probar programas de software sin afectar al sistema operativo o los datos principales del entorno de producción."
    },
    {
        "prompt": "¿Qué es una retrospectiva en Scrum?",
        "response": "Una retrospectiva en Scrum es una reunión que se realiza al final de cada sprint en la que el equipo reflexiona sobre lo que funcionó bien, lo que no, y cómo pueden mejorar en el próximo sprint."
    },
    {
        "prompt": "¿Qué es la deuda técnica en un proyecto ágil?",
        "response": "La deuda técnica en un proyecto ágil es el costo generado por decisiones rápidas o temporales tomadas para cumplir con los plazos, que eventualmente requerirán correcciones para mantener la calidad del software."
    },
    {
        "prompt": "¿Qué es el mantenimiento correctivo en software?",
        "response": "El mantenimiento correctivo es el proceso de corregir errores o fallos en el software que se descubren después de que el sistema ha sido lanzado en producción."
    },
    {
        "prompt": "¿Qué es el análisis dinámico en pruebas de software?",
        "response": "El análisis dinámico es el proceso de probar y evaluar el software durante su ejecución, lo que permite identificar problemas de rendimiento, seguridad o comportamiento en tiempo real."
    },
    {
        "prompt": "¿Qué es una prueba de aceptación de usuario (UAT)?",
        "response": "La prueba de aceptación de usuario (UAT) es una fase en la que los usuarios finales prueban el software para asegurarse de que cumple con los requisitos y está listo para ser implementado en producción."
    },
    {
        "prompt": "¿Qué es un caso de uso en software?",
        "response": "Un caso de uso es una descripción detallada de cómo un usuario interactúa con un sistema de software para lograr un objetivo específico, lo que ayuda a definir los requisitos funcionales."
    },
    {
        "prompt": "¿Qué es una prueba de regresión automatizada?",
        "response": "Una prueba de regresión automatizada es una prueba que se ejecuta de forma automática cada vez que se realizan cambios en el software para asegurar que los cambios no han roto funcionalidades existentes."
    },
    {
        "prompt": "¿Qué es el análisis de riesgos en software?",
        "response": "El análisis de riesgos en software es el proceso de identificar, evaluar y mitigar los posibles riesgos que podrían afectar la calidad, los plazos o el presupuesto de un proyecto de software."
    },
    {
        "prompt": "¿Qué es la prueba de estrés en software?",
        "response": "La prueba de estrés evalúa el comportamiento del software bajo condiciones extremas de carga, como una gran cantidad de usuarios o transacciones simultáneas, para verificar su estabilidad bajo presión."
    },
    {
        "prompt": "¿Qué es una prueba de volumen en software?",
        "response": "Una prueba de volumen verifica cómo el software maneja grandes cantidades de datos, asegurando que el sistema pueda gestionar un alto volumen de información sin afectar su rendimiento."
    },
    {
        "prompt": "¿Qué es una arquitectura monolítica?",
        "response": "Una arquitectura monolítica es un enfoque de diseño de software donde todas las funcionalidades de una aplicación están integradas en un solo paquete o código base, lo que dificulta la escalabilidad y el mantenimiento."
    },
    {
        "prompt": "¿Qué es la modularidad en el desarrollo de software?",
        "response": "La modularidad es un principio de diseño que implica dividir el software en componentes o módulos independientes, lo que facilita su desarrollo, mantenimiento y escalabilidad."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo afecta a un proyecto a largo plazo?",
        "response": "La deuda técnica es el costo adicional generado por decisiones rápidas o temporales. A largo plazo, puede afectar la calidad del software, aumentando los costos de mantenimiento y complicando la evolución del sistema."
    },
    {
        "prompt": "¿Qué es un pipeline de CI/CD?",
        "response": "Un pipeline de CI/CD es un conjunto de procesos automatizados que permiten la integración continua (CI) y la entrega continua (CD), asegurando que los cambios en el código se prueben y desplieguen eficientemente."
    },
    {
        "prompt": "¿Qué es el análisis heurístico en pruebas de software?",
        "response": "El análisis heurístico es una técnica de evaluación en la que expertos en usabilidad revisan la interfaz de usuario de una aplicación, basándose en principios heurísticos para detectar problemas de usabilidad."
    },
    {
        "prompt": "¿Qué es una prueba de humo?",
        "response": "Una prueba de humo es una prueba rápida y básica que se realiza para asegurarse de que las funciones principales de un sistema funcionan correctamente antes de pasar a pruebas más exhaustivas."
    },
    {
        "prompt": "¿Qué es la integración continua (CI)?",
        "response": "La integración continua (CI) es una práctica de desarrollo en la que los desarrolladores integran sus cambios de código con frecuencia en un repositorio compartido, permitiendo que las pruebas automáticas detecten errores rápidamente."
    },
    {
        "prompt": "¿Qué es un hotfix en desarrollo de software?",
        "response": "Un hotfix es una actualización rápida que se aplica para corregir un error crítico o una vulnerabilidad de seguridad en el software, sin esperar a la siguiente versión formal."
    },
    {
        "prompt": "¿Qué es la interoperabilidad en software?",
        "response": "La interoperabilidad es la capacidad de un sistema de software para interactuar y funcionar correctamente con otros sistemas, facilitando el intercambio de información y funcionalidades entre diferentes plataformas."
    },
    {
        "prompt": "¿Qué es el análisis coste-beneficio en un proyecto de software?",
        "response": "El análisis coste-beneficio es un proceso que evalúa los costos asociados al desarrollo, implementación y mantenimiento de un software frente a los beneficios que se espera obtener a lo largo de su ciclo de vida."
    },
    {
        "prompt": "¿Qué es el diseño centrado en tareas en software?",
        "response": "El diseño centrado en tareas es un enfoque de diseño de software que prioriza las necesidades y objetivos específicos de los usuarios, optimizando las funcionalidades del sistema para cumplir con esas tareas."
    },
    {
        "prompt": "¿Qué es la automatización de pruebas de software?",
        "response": "La automatización de pruebas de software implica el uso de herramientas y scripts para ejecutar pruebas de manera automática, lo que permite realizar pruebas repetitivas de forma más eficiente y reducir el esfuerzo manual."
    },
    {
        "prompt": "¿Qué es una API RESTful?",
        "response": "Una API RESTful es una interfaz que sigue los principios de REST (Representational State Transfer) y permite que las aplicaciones se comuniquen entre sí mediante peticiones HTTP como GET, POST, PUT y DELETE."
    },
    {
        "prompt": "¿Qué es un entorno de preproducción?",
        "response": "Un entorno de preproducción es un entorno controlado que replica el entorno de producción y se utiliza para realizar pruebas finales antes de desplegar el software en el entorno de producción real."
    },
    {
        "prompt": "¿Qué es el mantenimiento evolutivo en software?",
        "response": "El mantenimiento evolutivo es el proceso de realizar mejoras o modificaciones en el software después de su lanzamiento, para adaptarlo a nuevas necesidades o para optimizar su rendimiento."
    },
    {
        "prompt": "¿Qué es el testing exploratorio en software?",
        "response": "El testing exploratorio es una técnica de pruebas en la que los testers exploran libremente la aplicación, buscando errores sin seguir un guion predefinido, evaluando la funcionalidad del software en tiempo real."
    },
    {
        "prompt": "¿Qué es un sistema de control de versiones distribuido?",
        "response": "Un sistema de control de versiones distribuido (DVCS) es un sistema en el que cada desarrollador tiene una copia completa del historial del proyecto, lo que permite trabajar de manera independiente sin depender de un servidor central."
    },
    {
        "prompt": "¿Qué es el diseño basado en componentes?",
        "response": "El diseño basado en componentes es una técnica en la que el software se organiza en módulos o componentes independientes y reutilizables, lo que mejora la mantenibilidad y escalabilidad del sistema."
    },
    {
        "prompt": "¿Qué es la accesibilidad en el desarrollo de software?",
        "response": "La accesibilidad en el desarrollo de software se refiere a la creación de sistemas que puedan ser utilizados por personas con diferentes discapacidades, asegurando que el software sea accesible para todos los usuarios."
    },
    {
        "prompt": "¿Qué es la integración de software?",
        "response": "La integración de software es el proceso de combinar diferentes componentes o sistemas de software en un sistema cohesivo, asegurando que funcionen correctamente juntos y cumplan con los requisitos establecidos."
    },
    {
        "prompt": "¿Qué es un entorno de desarrollo?",
        "response": "Un entorno de desarrollo es un espacio donde los desarrolladores escriben, prueban y depuran el código antes de integrarlo en un entorno de pruebas o producción. Generalmente, incluye herramientas como editores de código y compiladores."
    },
    {
        "prompt": "¿Qué es la deuda técnica en el desarrollo ágil?",
        "response": "La deuda técnica en el desarrollo ágil es el costo generado por decisiones rápidas o soluciones temporales que se toman para cumplir con plazos, que luego requerirán refactorización o ajustes para mejorar la calidad."
    },
    {
        "prompt": "¿Qué es una API pública?",
        "response": "Una API pública es una interfaz de programación disponible para que desarrolladores externos interactúen con un sistema o plataforma, permitiendo la creación de aplicaciones o integraciones de terceros."
    },
    {
        "prompt": "¿Qué es el diseño orientado a servicios (SOA)?",
        "response": "El diseño orientado a servicios (SOA) es un enfoque de arquitectura de software en el que los componentes se desarrollan como servicios independientes que se comunican entre sí a través de interfaces bien definidas."
    },
    {
        "prompt": "¿Qué es el diseño adaptativo?",
        "response": "El diseño adaptativo es un enfoque de desarrollo en el que el software ajusta automáticamente su interfaz y funcionalidad para ofrecer una experiencia óptima en diferentes dispositivos y resoluciones de pantalla."
    },
    {
        "prompt": "¿Qué es un análisis FODA en un proyecto de software?",
        "response": "El análisis FODA es una técnica utilizada para evaluar las fortalezas, oportunidades, debilidades y amenazas de un proyecto de software, lo que ayuda a tomar decisiones estratégicas y planificar el desarrollo."
    },
    {
        "prompt": "¿Qué es la mantenibilidad en el desarrollo de software?",
        "response": "La mantenibilidad en el desarrollo de software es la capacidad de un sistema para ser modificado, corregido o mejorado con el menor esfuerzo posible, facilitando su evolución a lo largo del tiempo."
    },
    {
        "prompt": "¿Qué es la modularidad en el diseño de software?",
        "response": "La modularidad en el diseño de software es un enfoque que organiza el sistema en módulos independientes que pueden desarrollarse, probarse y mantenerse por separado, mejorando la escalabilidad y la facilidad de mantenimiento."
    },
    {
        "prompt": "¿Qué es el mantenimiento preventivo en software?",
        "response": "El mantenimiento preventivo en software implica realizar mejoras y ajustes en el sistema antes de que se presenten problemas o fallos, con el objetivo de evitar interrupciones y mejorar la estabilidad del sistema."
    },
    {
        "prompt": "¿Qué es una auditoría de seguridad en software?",
        "response": "Una auditoría de seguridad en software es un proceso en el que se revisa el sistema para identificar vulnerabilidades de seguridad y evaluar su cumplimiento con normativas y mejores prácticas de seguridad."
    },
    {
        "prompt": "¿Qué es la deuda técnica en proyectos ágiles?",
        "response": "La deuda técnica en proyectos ágiles es el costo generado por la implementación de soluciones rápidas o temporales que, a largo plazo, deben ser corregidas para mantener la calidad y el rendimiento del software."
    },
    {
        "prompt": "¿Qué es una arquitectura en capas?",
        "response": "Una arquitectura en capas es una estructura en la que el software se organiza en niveles o capas que tienen responsabilidades específicas, como la capa de presentación, la capa de negocio y la capa de datos."
    },
    {
        "prompt": "¿Qué es un backlog de sprint en Scrum?",
        "response": "Un backlog de sprint es una lista priorizada de tareas que el equipo de desarrollo planea completar durante un sprint en Scrum. Estas tareas se derivan del backlog del producto y se seleccionan según su prioridad."
    },
    {
        "prompt": "¿Qué es una API SOAP?",
        "response": "Una API SOAP es una interfaz que utiliza el protocolo SOAP (Simple Object Access Protocol) para la comunicación entre aplicaciones, permitiendo el intercambio de mensajes estructurados en formato XML."
    },
    {
        "prompt": "¿Qué es la validación cruzada?",
        "response": "La validación cruzada es una técnica utilizada para evaluar el rendimiento de un modelo de software, dividiendo los datos en subconjuntos para entrenar y probar el modelo, asegurando que funcione correctamente en diferentes escenarios."
    },
    {
        "prompt": "¿Qué es una prueba de aceptación en software?",
        "response": "Una prueba de aceptación en software es una evaluación realizada por el cliente o usuario final para validar que el sistema cumple con los requisitos establecidos y está listo para ser implementado en producción."
    },
    {
        "prompt": "¿Qué es un modelo de datos relacional?",
        "response": "Un modelo de datos relacional organiza la información en tablas relacionadas mediante claves primarias y claves externas, lo que permite gestionar datos de manera eficiente y realizar consultas complejas en bases de datos."
    },
    {
        "prompt": "¿Qué es una maqueta en diseño de software?",
        "response": "Una maqueta es una representación visual o gráfica de la interfaz de usuario de una aplicación, utilizada para mostrar la disposición de los elementos y la navegación antes de que el sistema se desarrolle por completo."
    },
    {
        "prompt": "¿Qué es el diseño centrado en el usuario?",
        "response": "El diseño centrado en el usuario es un enfoque de desarrollo en el que se priorizan las necesidades, preferencias y expectativas del usuario final para asegurar que el software ofrezca una experiencia efectiva y satisfactoria."
    },
    {
        "prompt": "¿Qué es la trazabilidad en un proyecto de software?",
        "response": "La trazabilidad en un proyecto de software es la capacidad de rastrear cada requisito desde su origen hasta su implementación y pruebas, asegurando que todos los requisitos se hayan cumplido."
    },
    {
        "prompt": "¿Qué es el despliegue continuo en DevOps?",
        "response": "El despliegue continuo en DevOps es una práctica que automatiza el proceso de mover los cambios de código a producción de manera regular, garantizando que las actualizaciones se realicen de forma rápida y segura."
    },
    {
        "prompt": "¿Qué es una API de terceros?",
        "response": "Una API de terceros es una interfaz proporcionada por un proveedor externo que permite que las aplicaciones interactúen con otros sistemas o servicios sin necesidad de desarrollarlos desde cero."
    },

{
        "prompt": "¿Qué es el diseño basado en flujos de trabajo?",
        "response": "El diseño basado en flujos de trabajo es un enfoque en el que las funcionalidades del software se organizan en función de los procesos y secuencias de tareas que los usuarios necesitan realizar."
    },
    {
        "prompt": "¿Qué es el diseño ágil en desarrollo de software?",
        "response": "El diseño ágil es un enfoque que permite iteraciones rápidas y la adaptación continua a los cambios mediante la colaboración entre equipos de diseño y desarrollo a lo largo del ciclo de vida del proyecto."
    },
    {
        "prompt": "¿Qué es un modelo de datos jerárquico?",
        "response": "Un modelo de datos jerárquico es una estructura de base de datos en la que los datos se organizan en una jerarquía de padres e hijos, con un único camino de acceso entre los niveles."
    },
    {
        "prompt": "¿Qué es un archivo de configuración?",
        "response": "Un archivo de configuración es un archivo que contiene parámetros y configuraciones utilizados por un programa de software para ajustar su comportamiento según las necesidades del entorno o del usuario."
    },
    {
        "prompt": "¿Qué es la refactorización en metodologías ágiles?",
        "response": "La refactorización es el proceso de mejorar la estructura interna del código sin cambiar su comportamiento externo, permitiendo mejorar su legibilidad, mantenibilidad y eficiencia."
    },
    {
        "prompt": "¿Qué es el diseño de servicios?",
        "response": "El diseño de servicios es un enfoque centrado en optimizar la experiencia del cliente y mejorar los procesos de los servicios mediante la creación de soluciones eficientes y centradas en el usuario."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en cambios de software?",
        "response": "El análisis de impacto evalúa cómo los cambios propuestos afectarán otras partes del software, asegurando que los ajustes realizados no causen problemas adicionales en el sistema."
    },
    {
        "prompt": "¿Qué es la resiliencia en un sistema de software?",
        "response": "La resiliencia en software es la capacidad de un sistema para resistir y recuperarse de fallos o interrupciones, manteniendo la continuidad operativa y minimizando el impacto en los usuarios."
    },
    {
        "prompt": "¿Qué es un sistema distribuido?",
        "response": "Un sistema distribuido es una colección de nodos independientes que cooperan para ofrecer servicios de manera coordinada, permitiendo la escalabilidad y la tolerancia a fallos."
    },
    {
        "prompt": "¿Qué es una prueba de integración continua?",
        "response": "Una prueba de integración continua es un proceso automatizado en el que se prueban los cambios de código integrados con frecuencia, asegurando que el sistema siga funcionando correctamente después de cada actualización."
    },
    {
        "prompt": "¿Qué es el despliegue incremental en software?",
        "response": "El despliegue incremental es un enfoque en el que el software se implementa en partes o versiones sucesivas, permitiendo probar y validar cada incremento antes de pasar al siguiente."
    },
    {
        "prompt": "¿Qué es una revisión de código?",
        "response": "Una revisión de código es el proceso de evaluar el código fuente escrito por otro desarrollador para identificar errores, vulnerabilidades o posibles mejoras, asegurando la calidad del software."
    },
    {
        "prompt": "¿Qué es la usabilidad en el diseño de interfaces?",
        "response": "La usabilidad es la capacidad de una interfaz para ser entendida, aprendida y utilizada de manera eficiente por los usuarios, permitiéndoles cumplir sus objetivos con facilidad y satisfacción."
    },
    {
        "prompt": "¿Qué es la documentación técnica en software?",
        "response": "La documentación técnica en software es un conjunto de documentos que describe en detalle el funcionamiento, diseño y uso del software, proporcionando información clave para su desarrollo, mantenimiento y uso."
    },
    {
        "prompt": "¿Qué es una retrospectiva en el marco ágil?",
        "response": "Una retrospectiva es una reunión que se celebra al final de cada iteración en la que el equipo reflexiona sobre lo que funcionó bien, lo que no, y cómo se puede mejorar en el próximo ciclo."
    },
    {
        "prompt": "¿Qué es el diseño iterativo?",
        "response": "El diseño iterativo es un enfoque de desarrollo en el que se crean versiones sucesivas del software, realizando ajustes y mejoras en cada iteración basados en pruebas y retroalimentación continua."
    },
    {
        "prompt": "¿Qué es el análisis de regresión?",
        "response": "El análisis de regresión es una técnica de prueba en la que se verifican los cambios recientes en el software para asegurarse de que no hayan afectado el funcionamiento correcto de las características existentes."
    },
    {
        "prompt": "¿Qué es un pipeline de despliegue automatizado?",
        "response": "Un pipeline de despliegue automatizado es un proceso en el que el código pasa automáticamente por varias fases de pruebas, integración y despliegue antes de ser implementado en producción."
    },
    {
        "prompt": "¿Qué es la arquitectura sin servidor?",
        "response": "La arquitectura sin servidor es un enfoque en el que el proveedor en la nube gestiona la infraestructura de servidores, permitiendo que los desarrolladores se centren en la lógica de la aplicación sin preocuparse por la administración de servidores."
    },
    {
        "prompt": "¿Qué es un microservicio?",
        "response": "Un microservicio es una unidad pequeña e independiente de software que se centra en una funcionalidad específica dentro de un sistema más grande, facilitando su desarrollo, despliegue y mantenimiento."
    },
    {
        "prompt": "¿Qué es un servicio REST?",
        "response": "Un servicio REST es un tipo de servicio web que sigue los principios de la arquitectura REST, permitiendo la comunicación entre aplicaciones a través de peticiones HTTP."
    },
    {
        "prompt": "¿Qué es una auditoría de seguridad en software?",
        "response": "Una auditoría de seguridad en software es una revisión exhaustiva del código fuente, la arquitectura y las configuraciones para identificar posibles vulnerabilidades y asegurar el cumplimiento con las normativas de seguridad."
    },
    {
        "prompt": "¿Qué es una prueba de resistencia en software?",
        "response": "Una prueba de resistencia evalúa cómo el software maneja una carga sostenida durante un período prolongado de tiempo, verificando su capacidad para mantener el rendimiento sin degradarse."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo se genera?",
        "response": "La deuda técnica es el costo de realizar correcciones futuras debido a decisiones rápidas o subóptimas tomadas durante el desarrollo, que generalmente se generan por la presión para cumplir con plazos cortos."
    },
    {
        "prompt": "¿Qué es la validación cruzada en modelos de IA?",
        "response": "La validación cruzada es una técnica utilizada para evaluar el rendimiento de un modelo de IA, dividiendo los datos en varios subconjuntos para entrenar y validar el modelo, asegurando su robustez."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas A/B?",
        "response": "Un entorno de pruebas A/B es un método de experimentación donde se presentan dos versiones diferentes de un software o funcionalidad a usuarios para evaluar cuál tiene un mejor rendimiento o aceptación."
    },
    {
        "prompt": "¿Qué es el testing exploratorio en software?",
        "response": "El testing exploratorio es una técnica de prueba en la que los testers investigan activamente el software sin un plan de pruebas predeterminado, descubriendo errores mientras exploran el sistema."
    },
    {
        "prompt": "¿Qué es el diseño modular en software?",
        "response": "El diseño modular es un enfoque en el que el software se organiza en módulos independientes que pueden desarrollarse, probarse y desplegarse por separado, mejorando la mantenibilidad y la escalabilidad."
    },
    {
        "prompt": "¿Qué es el análisis de riesgos en un proyecto de software?",
        "response": "El análisis de riesgos en un proyecto de software es el proceso de identificar, evaluar y mitigar posibles riesgos que podrían afectar el éxito del proyecto, la calidad del producto o los plazos de entrega."
    },
    {
        "prompt": "¿Qué es una API GraphQL?",
        "response": "Una API GraphQL es una interfaz de programación que permite a los clientes solicitar únicamente los datos que necesitan, mejorando la eficiencia en la transferencia de información entre aplicaciones."
    },
    {
        "prompt": "¿Qué es la deuda técnica en proyectos ágiles?",
        "response": "La deuda técnica en proyectos ágiles es el costo acumulado de soluciones rápidas o temporales implementadas para cumplir con los plazos, que luego requieren corrección para mantener la calidad."
    },
    {
        "prompt": "¿Qué es la accesibilidad web?",
        "response": "La accesibilidad web se refiere a la creación de sitios web y aplicaciones que puedan ser utilizadas por personas con diferentes discapacidades, asegurando una experiencia inclusiva y funcional para todos los usuarios."
    },
    {
        "prompt": "¿Qué es una maqueta interactiva en desarrollo de software?",
        "response": "Una maqueta interactiva es una representación visual y funcional de una interfaz de usuario que permite simular la interacción del usuario con el sistema antes de que se complete el desarrollo."
    },
    {
        "prompt": "¿Qué es una prueba de carga en software?",
        "response": "Una prueba de carga evalúa el rendimiento del software cuando es sometido a un aumento en el número de usuarios o transacciones simultáneas, verificando su capacidad para manejar la carga sin afectar el rendimiento."
    },
    {
        "prompt": "¿Qué es un sprint en Scrum?",
        "response": "Un sprint es un ciclo de trabajo en Scrum que generalmente dura entre 1 y 4 semanas, durante el cual el equipo se enfoca en completar un conjunto de tareas previamente acordadas del backlog del producto."
    },
    {
        "prompt": "¿Qué es la escalabilidad horizontal en software?",
        "response": "La escalabilidad horizontal es la capacidad del software para manejar una mayor carga de trabajo añadiendo más servidores o nodos al sistema en lugar de mejorar el rendimiento de un solo servidor."
    },
    {
        "prompt": "¿Qué es el testing automatizado en software?",
        "response": "El testing automatizado es el uso de herramientas y scripts para ejecutar pruebas de software de manera automática, mejorando la eficiencia y reduciendo el tiempo dedicado a pruebas repetitivas."
    },
    {
        "prompt": "¿Qué es un backlog de producto en Scrum?",
        "response": "Un backlog de producto en Scrum es una lista priorizada de todas las tareas, funcionalidades y mejoras que deben realizarse en el producto, gestionada por el Product Owner."
    },
    {
        "prompt": "¿Qué es el análisis coste-beneficio en software?",
        "response": "El análisis coste-beneficio en software es una evaluación que compara los costos asociados con el desarrollo, mantenimiento e implementación de un sistema frente a los beneficios que proporcionará."
    },
    {
        "prompt": "¿Qué es la portabilidad en software?",
        "response": "La portabilidad en software es la capacidad de un sistema de ser trasladado y ejecutado en diferentes plataformas o entornos sin realizar modificaciones significativas en su código."
    },
    {
        "prompt": "¿Qué es el diseño de interfaz de usuario (UI)?",
        "response": "El diseño de interfaz de usuario (UI) es el proceso de crear la parte visual del software con la que interactúan los usuarios, asegurando que sea intuitiva, eficiente y atractiva."
    },
    {
        "prompt": "¿Qué es la mantenibilidad en el desarrollo de software?",
        "response": "La mantenibilidad es la capacidad del software para ser modificado, corregido o mejorado de manera eficiente, lo que facilita su adaptación a nuevos requisitos o cambios en el entorno."
    },
    {
        "prompt": "¿Qué es la trazabilidad en software?",
        "response": "La trazabilidad es la capacidad de rastrear los requisitos desde su origen hasta su implementación, pruebas y despliegue, asegurando que se cumplan todos los requisitos a lo largo del ciclo de vida del proyecto."
    },
    {
        "prompt": "¿Qué es la integración continua (CI)?",
        "response": "La integración continua es una práctica de desarrollo en la que los desarrolladores integran sus cambios de código con frecuencia en un repositorio compartido, ejecutando pruebas automáticas para detectar errores rápidamente."
    },
    {
        "prompt": "¿Qué es el mantenimiento adaptativo en software?",
        "response": "El mantenimiento adaptativo en software es el proceso de realizar ajustes para asegurar que el software siga funcionando correctamente en nuevos entornos operativos o con cambios en la infraestructura."
    },
    {
        "prompt": "¿Qué es un entorno de preproducción?",
        "response": "Un entorno de preproducción es un espacio que simula el entorno de producción para realizar pruebas y validaciones finales antes de lanzar el software al público, asegurando que esté listo para su uso."
    },
    {
        "prompt": "¿Qué es la deuda técnica en el desarrollo ágil?",
        "response": "La deuda técnica en el desarrollo ágil se refiere a la acumulación de tareas técnicas pendientes que resultan de priorizar la entrega rápida, lo que eventualmente requiere refactorización o correcciones."
    },
    {
        "prompt": "¿Qué es una prueba de regresión?",
        "response": "Una prueba de regresión verifica que las funcionalidades existentes del software no se vean afectadas negativamente por cambios recientes en el código, asegurando que todo siga funcionando correctamente."
    },
    {
        "prompt": "¿Qué es el análisis estático en pruebas de software?",
        "response": "El análisis estático es una técnica de pruebas en la que el código fuente se analiza sin ejecutarlo para identificar errores, vulnerabilidades o problemas de calidad en el software."
    },
    {
        "prompt": "¿Qué es la automatización de despliegue?",
        "response": "La automatización de despliegue es el uso de herramientas y scripts para automatizar el proceso de mover el software desde el entorno de desarrollo o pruebas hasta el entorno de producción."
    },
    {
        "prompt": "¿Qué es el diseño centrado en el usuario (UCD)?",
        "response": "El diseño centrado en el usuario (UCD) es un enfoque que se enfoca en las necesidades, expectativas y comportamientos del usuario durante todo el proceso de desarrollo, asegurando una experiencia satisfactoria."
    },
    {
        "prompt": "¿Qué es una prueba de carga?",
        "response": "Una prueba de carga evalúa cómo el software maneja un número creciente de usuarios o transacciones simultáneas, midiendo su rendimiento bajo diferentes niveles de carga."
    },
    {
        "prompt": "¿Qué es un entorno sandbox?",
        "response": "Un entorno sandbox es un espacio aislado donde los desarrolladores o testers pueden ejecutar y probar aplicaciones sin afectar el sistema operativo o los datos principales del entorno de producción."
    },
    {
        "prompt": "¿Qué es el mantenimiento correctivo en software?",
        "response": "El mantenimiento correctivo implica corregir errores y fallos encontrados en el software después de su lanzamiento, asegurando que continúe funcionando según lo esperado."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo afecta a largo plazo?",
        "response": "La deuda técnica es el costo acumulado de implementar soluciones rápidas o subóptimas, que a largo plazo pueden afectar la calidad y mantenibilidad del software."
    },
    {
        "prompt": "¿Qué es el análisis de impacto en software?",
        "response": "El análisis de impacto en software es el proceso de evaluar cómo los cambios propuestos afectarán a otras partes del sistema, garantizando que no se introduzcan errores o problemas imprevistos."
    },
    {
        "prompt": "¿Qué es una prueba de humo?",
        "response": "Una prueba de humo es una evaluación rápida que verifica si las funciones básicas del software están operativas antes de realizar pruebas más exhaustivas."
    },
    {
        "prompt": "¿Qué es una arquitectura orientada a microservicios?",
        "response": "Una arquitectura orientada a microservicios es un enfoque en el que una aplicación se divide en servicios pequeños e independientes que se comunican entre sí, facilitando el desarrollo y la escalabilidad."
    },
    {
        "prompt": "¿Qué es el testing exploratorio en software?",
        "response": "El testing exploratorio es una técnica de prueba en la que los evaluadores exploran el software sin un guion predefinido, buscando errores mientras aprenden cómo funciona el sistema."
    },
    {
        "prompt": "¿Qué es el mantenimiento evolutivo en software?",
        "response": "El mantenimiento evolutivo implica realizar mejoras o adaptaciones en el software para cumplir con nuevos requisitos o para mejorar su rendimiento a medida que cambian las necesidades del usuario."
    },
    {
        "prompt": "¿Qué es el testing de integración?",
        "response": "El testing de integración es una técnica de pruebas que verifica que los diferentes módulos o componentes del software funcionen correctamente cuando se combinan en un sistema completo."
    },
    {
        "prompt": "¿Qué es la modularidad en software?",
        "response": "La modularidad es la capacidad de dividir un sistema de software en componentes independientes o módulos que puedan desarrollarse, probarse y mantenerse de forma autónoma."
    },
    {
        "prompt": "¿Qué es la deuda técnica en proyectos de software?",
        "response": "La deuda técnica en proyectos de software es el costo adicional que resulta de implementar soluciones rápidas o temporales, lo que puede afectar la calidad del software a largo plazo."
    },
    {
        "prompt": "¿Qué es una retrospectiva en Scrum?",
        "response": "Una retrospectiva en Scrum es una reunión que se celebra al final de cada sprint en la que el equipo reflexiona sobre lo que funcionó bien, lo que no, y cómo mejorar en el próximo ciclo."
    },
    {
        "prompt": "¿Qué es el análisis heurístico en diseño de software?",
        "response": "El análisis heurístico es una técnica de evaluación en la que expertos en usabilidad revisan una interfaz de software basándose en principios o reglas heurísticas para identificar problemas de usabilidad."
    },
    {
        "prompt": "¿Qué es la validación cruzada en pruebas de software?",
        "response": "La validación cruzada es una técnica en la que los datos se dividen en varios subconjuntos para entrenar y probar un modelo, garantizando que funcione correctamente en diferentes escenarios."
    },
    {
        "prompt": "¿Qué es el mantenimiento preventivo en software?",
        "response": "El mantenimiento preventivo implica realizar mejoras y ajustes en el software antes de que se presenten problemas, con el objetivo de evitar futuros errores o fallos en el sistema."
    },
    {
        "prompt": "¿Qué es la accesibilidad en el desarrollo de software?",
        "response": "La accesibilidad en el desarrollo de software es el proceso de crear aplicaciones que puedan ser utilizadas por personas con diferentes discapacidades, asegurando una experiencia inclusiva para todos los usuarios."
    },
    {
        "prompt": "¿Qué es el diseño modular en software?",
        "response": "El diseño modular es un enfoque en el que el software se organiza en componentes o módulos independientes que pueden desarrollarse, probarse y mantenerse por separado."
    },
    {
        "prompt": "¿Qué es la cobertura de pruebas en software?",
        "response": "La cobertura de pruebas mide el porcentaje del código que ha sido ejecutado durante las pruebas, lo que ayuda a identificar áreas del software que no han sido evaluadas y podrían contener errores."
    },
    {
        "prompt": "¿Qué es un sprint en Scrum?",
        "response": "Un sprint en Scrum es un ciclo de trabajo de tiempo limitado, generalmente entre 1 y 4 semanas, en el que el equipo se enfoca en completar un conjunto de tareas previamente acordadas."
    },
    {
        "prompt": "¿Qué es la validación en el ciclo de vida de desarrollo de software?",
        "response": "La validación es el proceso de verificar si el software cumple con los requisitos del usuario final y está listo para ser implementado en un entorno de producción."
    },
    {
        "prompt": "¿Qué es una maqueta en diseño de software?",
        "response": "Una maqueta es una representación visual de la interfaz de usuario de un sistema de software, que permite presentar el diseño y la disposición de los elementos antes de su implementación completa."
    },
    {
        "prompt": "¿Qué es una arquitectura monolítica en software?",
        "response": "Una arquitectura monolítica es un enfoque en el que todas las funcionalidades del software están integradas en un solo paquete o código base, lo que puede dificultar la escalabilidad y el mantenimiento."
    },
    {
        "prompt": "¿Qué es una prueba de aceptación de usuario (UAT)?",
        "response": "Una prueba de aceptación de usuario (UAT) es una evaluación realizada por los usuarios finales para verificar si el software cumple con los requisitos y expectativas antes de ser implementado en producción."
    },
    {
        "prompt": "¿Qué es una historia de usuario en Scrum?",
        "response": "Una historia de usuario es una breve descripción de una funcionalidad desde la perspectiva del usuario final, utilizada para guiar el desarrollo en metodologías ágiles como Scrum."
    },
    {
        "prompt": "¿Qué es una prueba de integración continua?",
        "response": "Una prueba de integración continua es una evaluación automatizada que verifica que los cambios en el código no afecten negativamente las funcionalidades existentes, asegurando que el sistema siga funcionando correctamente."
    },
    {
        "prompt": "¿Qué es un entorno de desarrollo?",
        "response": "Un entorno de desarrollo es un espacio controlado donde los desarrolladores escriben, prueban y depuran el código antes de integrarlo en un entorno de pruebas o producción."
    },
    {
        "prompt": "¿Qué es la deuda técnica y cómo puede gestionarse?",
        "response": "La deuda técnica es el costo acumulado de decisiones rápidas o soluciones temporales que requieren corrección en el futuro. Puede gestionarse mediante la refactorización y mejoras continuas en el código."
    },
    {
        "prompt": "¿Qué es un diagrama de flujo de datos (DFD)?",
        "response": "Un diagrama de flujo de datos (DFD) es una representación gráfica que muestra cómo los datos fluyen a través de un sistema de software, describiendo las entradas, procesos y salidas."
    },
    {
        "prompt": "¿Qué es la automatización de pruebas en software?",
        "response": "La automatización de pruebas en software implica el uso de herramientas y scripts para ejecutar pruebas de manera automática, lo que permite reducir el esfuerzo manual y mejorar la eficiencia de las pruebas repetitivas."
    },
    {
        "prompt": "¿Qué es un análisis de riesgos en un proyecto de software?",
        "response": "El análisis de riesgos es el proceso de identificar, evaluar y mitigar los posibles riesgos que podrían afectar el éxito de un proyecto de desarrollo de software."
    },
    {
        "prompt": "¿Qué es una API pública?",
        "response": "Una API pública es una interfaz de programación disponible para desarrolladores externos, que les permite interactuar con los servicios de una plataforma para crear aplicaciones o integraciones."
    },
    {
        "prompt": "¿Qué es la validación de requisitos en software?",
        "response": "La validación de requisitos es el proceso de asegurar que los requisitos definidos para un sistema de software son correctos, completos y reflejan las necesidades y expectativas del usuario final."
    },
    {
        "prompt": "¿Qué es un entorno de pruebas en software?",
        "response": "Un entorno de pruebas es un espacio donde se ejecutan casos de prueba para verificar que el software funcione correctamente antes de ser implementado en producción."
    }
]